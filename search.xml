<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2024 六角學院軟體工程師體驗營 切版任務一</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/03/2024-%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E9%AB%94%E9%A9%97%E7%87%9F-%E5%88%87%E7%89%88%E4%BB%BB%E5%8B%99%E4%B8%80/</url>
    <content><![CDATA[<div class="Container">
    <ul class="Cards-list">
        <li>
            <img src="https://i.imgur.com/k370tkx.png" alt="pic 1 StarTripTicketBookingPlatform">
            <h2>星際旅行訂票平台</h2>
            <p>悠遊宇宙的夢想，從這裡開始實現</p>
            <ul Class="Card-list-Tags">
                <li>網頁設計</li>
                <li>響應式設計</li>
                <li>Bootstrap</li>
            </ul>
        </li>
        <li>
            <img src="https://i.imgur.com/csaKN9q.png" alt="pic 2 FinancialManagementAPP">
            <h2>理財APP</h2>
            <p>連動帳戶與行動支付，讓AI提供您最好的理財建議</p>
            <ul class="Card-list-Tags">
                <li>APP設計</li>
                <li>iOS</li>
                <li>React</li>
            </ul>
        </li>
            <li>
            <img src="https://i.imgur.com/8XhudJj.png" alt="pic 3 MedicalCosmeticClinicWebSite">
            <h2>醫美診所官網</h2>
            <P>永保青春的秘密，從粹究開始</P>
            <ul class="Card-list-Tags">
                <li>網頁設計</li>
                <li>響應式設計</li>
                <li>WordPress</li>
            </ul>
        </li>
            <li>
            <img src="https://i.imgur.com/zWhfUTx.png" alt="pic 4 BreakfastStorePOSUIDesign">
            <h2>美美美早餐店 POS機 UI Design</h2>
            <p>訂單送單一目瞭然，自動報表分析好輕鬆</p>
            <ul class="Card-list-Tags">
                <li>UI 設計</li>
                <li>前端開發</li>
                <li>Wix</li>
            </ul>               
        </li>           
    </ul>
</div>    

<style>
*{
    padding:0;
    margin:0;
}
/* https://fonts.google.com/selection/embed */
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100..900&display=swap');

/* https://www.colorhexa.com/ */
:root{
    --very-very-dark-gray:#3B3B3B;
    --dark-gray:#919191;
    --very-light-gray:#f1f1f1;
    --white:#ffffff;
}

/**加img reset讓圖片適應縮放。在body樣式設置為預設樣式。使用“box-sizing”語法**/
*,*::before,*::after{
    box-sizing: border-box;
}

img{    
    max-width: 100%;
    height: auto;
    vertical-align: middle;
    border-radius: 5px;
    margin-bottom: 16px;
}

body{
    font-family:"Noto Sans TC",sans-serif;
    font-size: 16px;
    line-height: 1.5;
    font-weight: 400;
}

.Container{
    width: 1296px;
    margin: 0  auto;
    padding: 0 12px;
    background-color: var(--white);    
}
.Cards-list{   
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;   
    margin: 0 auto ;
    margin-top: 10px;
    gap:80px 10px;
    list-style: none;
}
.Cards-list li{
    max-width: 48%;
}

.Cards-list h2{
    color: var(--very-very-dark-gray);
    font-size: 28px;
    line-height: 33.6px;
    font-weight: 700;
    margin-bottom: 8px;

}

.Cards-list p{
    color:var(--dark-gray);
    font-size: 16px;
    line-height: 24px;
    margin-bottom: 24px;
}

.Cards-list-Tags{
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    padding: 0;
}

.Card-list-Tags li{
    display: inline-block;
    text-align: center;
    background-color: var(--very-light-gray);
    color: var(--very-very-dark-gray);
    line-height: 24px;
    padding:4px 12px;
    margin-right: 16px;
    border-radius: 16px;
}

/*RWD 設置*/
@media (max-width:992px){
    .Cards-list{
        flex-direction: column;
        align-items:center;
        margin: 10px 10px 0px 10px;
        gap: 60px;
    }
    .Cards-list li{
        max-width: 90%;
    }
    .Card-list-Tags li{
        margin-right: 12px;
    }   
}
@media(max-width:375px){
    .Cards-list{
        flex-direction: column;
        align-items: center;
        margin: 10px 0px 0px 0px;
        gap: 48px;
    }
    .Cards-list li{
        padding:0px 0px 12px 12px;        
    }
    .Cards-list h2{
        font-size: 20px;
    }
    .Card-list-Tags li{
        margin-right: 8px;
    }   
}

</style>

<br>
<br>

<h6 id="圖片取自六角學院-©-HexSchool-2024"><a href="#圖片取自六角學院-©-HexSchool-2024" class="headerlink" title="圖片取自六角學院 © HexSchool 2024"></a>圖片取自六角學院 © HexSchool 2024</h6>]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>2024 六角學院軟體工程師體驗營心得</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/02/2024-%E5%85%AD%E8%A7%92%E5%AD%B8%E9%99%A2%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%B8%AB%E9%AB%94%E9%A9%97%E7%87%9F%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h2 id="當初為什麼報名體驗營"><a href="#當初為什麼報名體驗營" class="headerlink" title="當初為什麼報名體驗營?"></a>當初為什麼報名體驗營?</h2><p>內心有個聲音叫我去釐清真正的渴望和需求，理解身為一個成熟人類的社會責任，以便能更好地安排未來幾十年的職場活動，以及生活各層面的內容。</p>
<h2 id="最大的收獲是"><a href="#最大的收獲是" class="headerlink" title="最大的收獲是?"></a>最大的收獲是?</h2><p>使用Hexo初步完成個人客製化樣式部落格。<br>另外對於排版與整體設計亦有了一個初步的認識。相信在接下來的學習過程裡，我會變得更能掌握這領域的知識；並期許自己能夠靈活運用、舉一反三。</p>
<h2 id="最喜歡體驗營的哪些活動"><a href="#最喜歡體驗營的哪些活動" class="headerlink" title="最喜歡體驗營的哪些活動?"></a>最喜歡體驗營的哪些活動?</h2><p>第12小組每周四舉辦的線上讀書會。謝謝組員們，特別感謝 Arirel Yao、Jiahe、Mars 。</p>
<h2 id="哪些自己可以做得很好的地方？"><a href="#哪些自己可以做得很好的地方？" class="headerlink" title="哪些自己可以做得很好的地方？"></a>哪些自己可以做得很好的地方？</h2><p>時間管理尚待加強。</p>
<h2 id="對課程的建議或鼓勵"><a href="#對課程的建議或鼓勵" class="headerlink" title="對課程的建議或鼓勵?"></a>對課程的建議或鼓勵?</h2><p>感謝六角學院推出優質活動，讓我在學習的過程中結識到不同背景相同目標的夥伴們。<br>最後要非常感謝所有批改程式碼、願意給予建議的「Mentor」。</p>
<p>“所以，這次只到6&#x2F;9……”<br>“能再寫一次，足矣”<br>“因為今天”</p>
<img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/28e51e98a75f8d69c10f0781671678c9.jpg?alt=media&token=bd902812-5393-48ba-9d8e-534d825d2e72" alt="再看一次">


<h6 id="圖片取自-©火鳳燎原-陳某-All-Rights-Reserved"><a href="#圖片取自-©火鳳燎原-陳某-All-Rights-Reserved" class="headerlink" title="圖片取自 ©火鳳燎原 陳某 All Rights Reserved."></a>圖片取自 ©火鳳燎原 陳某 All Rights Reserved.</h6>]]></content>
      <tags>
        <tag>Essay</tag>
      </tags>
  </entry>
  <entry>
    <title>2024切版直播班微心得</title>
    <url>/IWishIKnewHowToQuitYou/2024/09/23/2024%E5%88%87%E7%89%88%E7%9B%B4%E6%92%AD%E7%8F%AD%E5%BE%AE%E5%BF%83%E5%BE%97/</url>
    <content><![CDATA[<h1 id="微心得"><a href="#微心得" class="headerlink" title="微心得"></a><font color=#808080>微心得</font></h1><p><img src="https://images.unsplash.com/photo-1508317469940-e3de49ba902e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA==" alt="css layout"></p>
<h3 id="認真指導的老師"><a href="#認真指導的老師" class="headerlink" title="認真指導的老師"></a><font color=#808080>認真指導的老師</font></h3><p>老師上課有問必答。而在Discord群組上，亦經常看到老師在回覆問題；很常甚至發出問題的訊息不到一小時，老師即回覆了。讓人不禁汗顏自己是否沒有比老師更投入在這堂課程。</p>
<h3 id="直播班不是只有每週一堂的直播課"><a href="#直播班不是只有每週一堂的直播課" class="headerlink" title="直播班不是只有每週一堂的直播課"></a><font color=#808080>直播班不是只有每週一堂的直播課</font></h3><p>除了每週五晚上的直播課程，還有每週六的傑利Mentor直播講解主線重點。以及包含重要觀念的每日任務。在課程最後一個月甚至提供每日助教的服務，完全不用擔心找不到人問問題，只需擔心自己沒有問問題的勇氣。</p>
<h3 id="直播課程相較於其他預錄好的課程能獲得的資訊更多"><a href="#直播課程相較於其他預錄好的課程能獲得的資訊更多" class="headerlink" title="直播課程相較於其他預錄好的課程能獲得的資訊更多"></a><font color=#808080>直播課程相較於其他預錄好的課程能獲得的資訊更多</font></h3><p>直播課程和其他預錄好的課程讓我感受到很大的不同是，同學們可以在上課時隨時提問和即時獲得老師的解惑，因為部分同學的背景已經是在職的工程師或設計師，他們提出的問題能讓我有機會知道在實務上可能會出現的問題和情境。</p>
<h3 id="被認真的同學影響"><a href="#被認真的同學影響" class="headerlink" title="被認真的同學影響"></a><font color=#808080>被認真的同學影響</font></h3><p>有許多積極學習的同學會在Discord群組中發問，高手亦會熱心提供見解。這在無形中會成為一種提醒，督促著自己也要像他們一樣認真學習。</p>
<h3 id="雖然覺得自己寫了篇很差的程式碼，Mentor批改的回覆中給的都是具體改進的方法和建議"><a href="#雖然覺得自己寫了篇很差的程式碼，Mentor批改的回覆中給的都是具體改進的方法和建議" class="headerlink" title="雖然覺得自己寫了篇很差的程式碼，Mentor批改的回覆中給的都是具體改進的方法和建議"></a><font color=#808080>雖然覺得自己寫了篇很差的程式碼，Mentor批改的回覆中給的都是具體改進的方法和建議</font></h3><p>真心感謝每位Mentor。<br>我剛開始真的會很怕把程式碼給別人看。<br>覺得這就就像沒有穿衣服站在大眾前演說一樣… 心裡非常不自在(?)<br>儘管在體驗營的最後以為自己克服了，但到了直播班又復發 (??)<br>Do I Have MENTAL PROBLEM (???)<br>應該不是。<br>但我相信自己能順利克服這道心理障礙。</p>
<p>最後引用二句名言做為這篇微心得結尾。</p>
<blockquote>
<p><strong>「你不需要一開始就很厲害，但必須開始才有辦法很厲害」-杰語錄</strong></p>
</blockquote>
<blockquote>
<p><em><strong>「过去の自分が今仆の土台となる」- One OK Rock</strong></em></p>
</blockquote>
]]></content>
      <tags>
        <tag>Essay</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL小節練習：主鍵、外來鍵、inner join</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/05/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner-join/</url>
    <content><![CDATA[<p><a href="https://gamma.app/docs/SQL--23heyix4r93u5u0?mode=doc">課堂簡報連結</a><br><a href="https://pg-sql.com/">線上資料庫操作網站 PG-SQL:Temporary Postgres Database.</a></p>
<h2 id="Q1：拯救明華國小的資料庫，哪個欄位適合變成外來鍵？"><a href="#Q1：拯救明華國小的資料庫，哪個欄位適合變成外來鍵？" class="headerlink" title="Q1：拯救明華國小的資料庫，哪個欄位適合變成外來鍵？"></a>Q1：拯救明華國小的資料庫，哪個欄位適合變成<strong>外來鍵</strong>？</h2><table>
  <tr>
    <th>學生編號</th>
    <th>姓名</th>
    <th>班級</th>
    <th>性別</th>
    <th>年齡</th>
  </tr>
  <tr>
    <td>1</td>
    <td>小明</td>
    <td>三年一班</td>
    <td>男</td>
    <td>8</td>
  </tr>
  <tr>
    <td>2</td>
    <td>小華</td>
    <td>三年二班</td>
    <td>女</td>
    <td>9</td>
  </tr>
  <tr>
    <td>3</td>
    <td>小美</td>
    <td>三年一班</td>
    <td>男</td>
    <td>8</td>
  </tr>
  <tr>
    <td>4</td>
    <td>小強</td>
    <td>三年一班</td>
    <td>女</td>
    <td>8</td>
  </tr>
   <tr>
    <td>5</td>
    <td>小智</td>
    <td>三年二班</td>
    <td>男</td>
    <td>9</td>
  </tr>
</table>

<p>班級。因為班級與學生呈現<strong>一對多</strong>的關係，所以應該把班級拆成學生外來鍵。</p>
<blockquote>
<p><strong>班級的獨特性：</strong>每個班級會有一個獨特的名稱或編號，用於標識不同的班級。<br><strong>關聯性：</strong>班級可以用來連接到一個包含班級詳細資訊的表，這樣可以實現資料的關聯性。</p>
</blockquote>
<p>創建班級資料表<br><font color=#0000FF> In [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> class_list (</span><br><span class="line">    id SERIAL <span class="keyword">PRIMARY</span> KEY, <span class="comment">--自動生成的唯一識別碼（使用 SERIAL 型別，會自動遞增），作為每個班級的主鍵（PRIMARY KEY）</span></span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">50</span>) </span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [1]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F1-1%262%E5%BB%BA%E7%AB%8B%E8%B3%87%E6%96%99%E8%A1%A8%E6%A0%BC%E5%BC%8F.png?alt=media&token=b97fc110-7fb1-434b-9bee-02926e59d793" alt="creat table result"></p>
<p>創建學生資料表<br><font color=#0000FFF> In [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> students (</span><br><span class="line">    id SERIAL <span class="keyword">PRIMARY</span> KEY, <span class="comment">--自動生成的唯一識別碼，作為每個學生的主鍵。</span></span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    gender <span class="type">VARCHAR</span>(<span class="number">10</span>), <span class="comment">--這是一個整數欄位，用來儲存學生的性別識別碼，參照 gender_list 表格中的 id 欄位。</span></span><br><span class="line">    age <span class="type">INTEGER</span>,</span><br><span class="line">    class_id <span class="type">INTEGER</span>, <span class="comment">--這是一個整數欄位（INTEGER），用來儲存學生所屬班級的識別碼，並且是參照 class_list 表格中的 id 欄位（這是一個外鍵關係，確保學生所屬的班級在 class_list 中是存在的）。</span></span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (class_id) <span class="keyword">REFERENCES</span> class_list(id) <span class="comment">-- 設定外來鍵關聯。</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [2]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F1-1%262%E5%BB%BA%E7%AB%8B%E8%B3%87%E6%96%99%E8%A1%A8%E6%A0%BC%E5%BC%8F.png?alt=media&token=b97fc110-7fb1-434b-9bee-02926e59d793" alt="creat table result"></p>
<p>新增班級資料<br><font color=#0000FF> In [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> class_list (name) <span class="keyword">VALUES</span> <span class="comment">--這部分表示要向class_list表中插入數據，並指定插入的欄位是name</span></span><br><span class="line">    (<span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;三年二班&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [3]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F1-3%20%E8%BC%B8%E5%85%A5%E6%95%B8%E6%93%9A.png?alt=media&token=05638155-7ae4-4eff-b190-6370b8ae3345" alt="INSERT INTO result"></p>
<p>新增學生資料<br><font color=#0000FF> In [4]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> students (name, age, gender, class_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;小明&#x27;</span>, <span class="number">8</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;小華&#x27;</span>, <span class="number">9</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;小美&#x27;</span>, <span class="number">8</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;小強&#x27;</span>, <span class="number">8</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;小智&#x27;</span>, <span class="number">9</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>這些數據將被插入到students表中，每個學生都有一個自動生成的唯一id。class_id欄位用於指明學生所屬的班級，並且應該對應於class_list表中已存在的班級id，以維持數據的完整性和關聯性。</p>
</blockquote>
<p><font color=#FF0000> Out [4]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F1-4%20%E8%BC%B8%E5%85%A5%E6%95%B8%E6%93%9A.png?alt=media&token=54ae6917-925d-4725-9133-adf8220e5fbb" alt="ISERT INTO result"></p>
<p>顯示數據<br><font color=#0000FF> In [5]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    students.id <span class="keyword">AS</span> 學生編號,</span><br><span class="line">    students.name <span class="keyword">AS</span> 姓名,</span><br><span class="line">    class_list.name <span class="keyword">AS</span> 班級,</span><br><span class="line">    students.gender <span class="keyword">AS</span> 性別,</span><br><span class="line">    students.age <span class="keyword">AS</span> 年齡    </span><br><span class="line"><span class="keyword">FROM</span> students</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> class_list <span class="keyword">ON</span> students.class_id <span class="operator">=</span> class_list.id;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>這個查詢會返回一個結果集，其中包含每個學生的編號、姓名、班級名稱、性別和年齡。這樣的查詢有助於獲取完整的學生和班級資訊，便於查看和分析。</p>
</blockquote>
<p><font color=#FF0000> Out [5]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F1-5%20%E9%A1%AF%E7%A4%BA%E6%95%B8%E6%93%9A.png?alt=media&token=3efb6f21-603e-4c91-84c6-8a1a71ee6d70" alt="SELECT FROM Students"></p>
<h2 id="Q2：第一題的延伸，多了一個班級老師"><a href="#Q2：第一題的延伸，多了一個班級老師" class="headerlink" title="Q2：第一題的延伸，多了一個班級老師"></a>Q2：第一題的延伸，多了一個<em>班級老師</em></h2><table>
  <tr>
    <th>學生編號</th>
    <th>姓名</th>
    <th>班級</th>
    <th>班級老師</th>
    <th>性別</th>
    <th>年齡</th>
  </tr>
  <tr>
    <td>1</td>
    <td>小明</td>
    <td>三年一班</td>
    <td>廖洧杰</td>
    <td>男</td>
    <td>8</td>
  </tr>
  <tr>
    <td>2</td>
    <td>小華</td>
    <td>三年二班</td>
    <td>卡期伯</td>
    <td>女</td>
    <td>9</td>
  </tr>
  <tr>
    <td>3</td>
    <td>小美</td>
    <td>三年一班</td>
    <td>查理</td>
    <td>男</td>
    <td>8</td>
  </tr>
  <tr>
    <td>4</td>
    <td>小強</td>
    <td>三年一班</td>
    <td>麥可</td>
    <td>女</td>
    <td>8</td>
  </tr>
   <tr>
    <td>5</td>
    <td>小智</td>
    <td>三年二班</td>
    <td>李燕容</td>
    <td>男</td>
    <td>9</td>
  </tr>
</table>

<p>在設計資料庫時，是否將班級導師設為外來鍵取決於你的數據關聯需求。以下是一些考量：</p>
<h4 id="使用外來鍵的情況"><a href="#使用外來鍵的情況" class="headerlink" title="使用外來鍵的情況"></a>使用外來鍵的情況</h4><h5 id="導師有獨立的表格："><a href="#導師有獨立的表格：" class="headerlink" title="導師有獨立的表格："></a>導師有獨立的表格：</h5><p>如果導師有自己的表格（例如teachers表），並且你需要存儲導師的詳細資訊（如聯絡方式、專業等），那麼將teacher_id設為外來鍵是合適的。</p>
<h5 id="數據一致性："><a href="#數據一致性：" class="headerlink" title="數據一致性："></a>數據一致性：</h5><p>使用外來鍵可以確保數據的完整性和一致性，防止班級中出現不存在的導師。</p>
<h4 id="不使用外來鍵的情況"><a href="#不使用外來鍵的情況" class="headerlink" title="不使用外來鍵的情況"></a>不使用外來鍵的情況</h4><h5 id="簡單的系統："><a href="#簡單的系統：" class="headerlink" title="簡單的系統："></a>簡單的系統：</h5><p>如果系統相對簡單，且導師資訊不需要獨立管理，可以直接在class_list表中使用teacher名稱欄位。</p>
<h5 id="靈活性："><a href="#靈活性：" class="headerlink" title="靈活性："></a>靈活性：</h5><p>不使用外來鍵可以增加靈活性，尤其是在導師變動頻繁或不需要嚴格關聯的情況下。</p>
<p>從表中可以觀察班級與班級老師呈現<strong>一對多</strong>關係(六角幼兒園?)，學生與老師則是<strong>一對一</strong>關係；故在此我們把老師資料拆成學生的外來鍵。</p>
<p>創建班級老師資料表<br><font color=#0000FF> In [6]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> teachers (</span><br><span class="line">    id SERIAL <span class="keyword">PRIMARY</span> KEY,     <span class="comment">-- 老師編號，主鍵</span></span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">50</span>)           <span class="comment">-- 老師名稱</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>id是這個表的第一個欄位，用來存儲老師的編號。<br>SERIAL是一個數據類型，表示這個欄位會自動生成遞增的整數值，通常用於主鍵。<br>PRIMARY KEY表示這個欄位是主鍵，每個值必須是唯一的，這樣可以唯一標識每一位老師。</p>
</blockquote>
<p><font color=#FF0000> Out [6]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F2-1.png?alt=media&token=d79c3f30-07f8-4d7a-8554-05903932e24e" alt="CREAT TABLE teachers"></p>
<p>新增老師資料<br><font color=#0000FF> In [7]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teachers (name) <span class="keyword">VALUES</span> <span class="comment">--向teachers表的name欄位中插入數據。</span></span><br><span class="line">    (<span class="string">&#x27;廖洧杰&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;卡斯伯&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;查理&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;麥可&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;李燕容&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [7]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F2-2.png?alt=media&token=f105bb3f-2aa1-406c-9611-32962d2758ff" alt="INSERT INTO teachers"></p>
<p>將學生資料表新增班級老師欄位(teacher_id)<br><font color=#0000FF> In [8]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students <span class="comment">--表示要對students表進行修改。</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> teacher_id <span class="type">INTEGER</span>,</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_teacher_id <span class="comment">--這個約束確保teacher_id欄位中的值必須存在於teachers表的id欄位中，從而建立學生與老師之間的關聯。</span></span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (teacher_id) <span class="keyword">REFERENCES</span> teachers(id);</span><br></pre></td></tr></table></figure>
<blockquote>
<p>ADD COLUMN 用來添加一個新的欄位到表中。<br>teacher_id 是新欄位的名稱，用來存儲對應老師的編號。<br>FOREIGN KEY 用來定義一個外來鍵約束。<br>(teacher_id) 表示這個外來鍵約束作用的欄位是teacher_id。<br>REFERENCES teachers(id)表示teacher_id 引用的是teachers表中的id欄位。</p>
</blockquote>
<p><font color=#FF0000> Out [8]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F2-3.png?alt=media&token=2b85b771-6e79-484b-8116-e41925b38d12" alt="ALTER TABLE"></p>
<blockquote>
<p>ALTER 是 SQL 中的語法，用來修改已存在的資料表<br>執行這段指令並無任何提示語出現</p>
</blockquote>
<p>這樣設計的好處是可以在students表中直接關聯到teachers表中的一位老師，這樣的關聯有助於保持數據的一致性。<br>例如，如果一個學生有一位指定的老師，您可以通過teacher_id來確保這個關聯是正確的，並且可以方便地查詢每個學生的導師資訊。</p>
<p>更新學生資料表<br><font color=#0000FF> In [9]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> students <span class="keyword">SET</span> teacher_id <span class="operator">=</span> <span class="number">1</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> students <span class="keyword">SET</span> teacher_id <span class="operator">=</span> <span class="number">2</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> students <span class="keyword">SET</span> teacher_id <span class="operator">=</span> <span class="number">3</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> students <span class="keyword">SET</span> teacher_id <span class="operator">=</span> <span class="number">4</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> students <span class="keyword">SET</span> teacher_id <span class="operator">=</span> <span class="number">5</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>更新students表中的teacher_id欄位，為每個學生分配一位老師。</p>
</blockquote>
<p><font color=#FF0000> Out [9]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F2-4.png?alt=media&token=8669f45b-4b84-495c-ba53-4973b45ff3e5" alt="UPDATE SET WHERE"></p>
<p>這些更新操作將每個學生與一位特定的老師關聯起來，這樣可以在數據庫中方便地查詢和管理學生與老師之間的關係。</p>
<p>使用INNER JOIN 合併資料表查詢學生與班級導師的詳細資料<br><font color=#0000FF> In [10]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    students.id <span class="keyword">AS</span> 學生編號,</span><br><span class="line">    students.name <span class="keyword">AS</span> 姓名,</span><br><span class="line">    class_list.name <span class="keyword">AS</span> 班級,</span><br><span class="line">    teachers.name <span class="keyword">AS</span> 班級老師,</span><br><span class="line">    students.gender <span class="keyword">AS</span> 性別,</span><br><span class="line">    students.age <span class="keyword">AS</span> 年齡    </span><br><span class="line"><span class="keyword">FROM</span> students</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> class_list <span class="keyword">ON</span> students.class_id <span class="operator">=</span> class_list.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> teachers <span class="keyword">ON</span> students.teacher_id <span class="operator">=</span> teachers.id</span><br></pre></td></tr></table></figure>
<blockquote>
<p>INNER JOIN 用於將{ }表與{ }表連接起來<br>ON students.class_id &#x3D; class_list.id表示連接的條件是students表中的class_id欄位與class_list表中的id欄位相等。<br>ON students.teacher_id &#x3D; teachers.id表示連接的條件是students表中的teacher_id欄位與teachers表中的id欄位相等。</p>
</blockquote>
<p><font color=#FF0000> Out [10]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F2-5.png?alt=media&token=59b20324-037e-4354-b7b3-6ced5373fe96" alt="SELECT FORM INNER JOIN ON"></p>
<h2 id="Q3：小孩的家庭歸類資料庫，父母資料一直重複實在討厭！"><a href="#Q3：小孩的家庭歸類資料庫，父母資料一直重複實在討厭！" class="headerlink" title="Q3：小孩的家庭歸類資料庫，父母資料一直重複實在討厭！"></a>Q3：小孩的家庭歸類資料庫，父母資料一直重複實在討厭！</h2><table>
  <tr>
    <th>小孩編號</th>
    <th>姓名</th>
    <th>父母名稱</th>
    <th>父母電話</th>
    <th>父母性別</th>
  </tr>
  <tr>
    <td>1</td>
    <td>小明</td>
    <td>王大祥</td>
    <td>0973254254</td>
    <td>男</td>    
  </tr> 
  <tr>
    <td>2</td>
    <td>小華</td>
    <td>王曉如</td>
    <td>0955717855</td>
    <td>女</td>    
  </tr> 
  <tr>
    <td>3</td>
    <td>小美</td>
    <td>王大祥</td>
    <td>0973254254</td>
    <td>男</td>    
  </tr> 
  <tr>
    <td>4</td>
    <td>小強</td>
    <td>王曉如</td>
    <td>0955717855</td>
    <td>女</td>    
  </tr>
    <tr>
    <td>5</td>
    <td>小智</td>
    <td>王大祥</td>
    <td>0973254254</td>
    <td>男</td>    
  </tr>
</table>

<p>重複的父母資料可以通過將父母信息獨立出來，建立一個單獨的父母資料表來解決。<br>然後使用關聯鍵（如父母ID）將小孩表和父母表關聯起來。這樣可以減少數據冗餘，並提高數據庫的可維護性和一致性。</p>
<p>創建父母資料表<br><font color=#0000FF> In [11]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> parents (</span><br><span class="line">    id SERIAL <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">    phone <span class="type">VARCHAR</span>(<span class="number">15</span>),</span><br><span class="line">    gender <span class="type">VARCHAR</span>(<span class="number">10</span>)    </span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [11]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F3-1.png?alt=media&token=92233014-31b6-4909-a7d2-2b8a9757f671" alt="CREATE TABLE parents"></p>
<p>新增父母資料<br><font color=#0000FF> In [12]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> parents(name, phone, gender)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;王大祥&#x27;</span>, <span class="string">&#x27;0973254254&#x27;</span>, <span class="string">&#x27;男&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;王曉如&#x27;</span>, <span class="string">&#x27;0955717855&#x27;</span>, <span class="string">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [12]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F3-2.png?alt=media&token=78ddfb65-0edc-4430-b4aa-6b49da0fa02f" alt="INSERT INTO parents"></p>
<p>新增學生資料表的父母欄位(parent_id)<br><font color=#0000FF> In [13]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> students</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> parent_id <span class="type">INTEGER</span>,</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_parent_id</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (parent_id) <span class="keyword">REFERENCES</span> parents(id);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [13]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F3-3.png?alt=media&token=6a66594e-638d-4ac8-aa0a-16c680b20cca" alt="INSERT INTO parents"></p>
<p>更新學生資料表， 新增父母資料<br><font color=#0000FF> In [14]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> students </span><br><span class="line"><span class="keyword">SET</span> parent_id <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>); <span class="comment">-- 設定 id 為 1,3,5 學生的 parent_id = 1 (王大祥)</span></span><br><span class="line"><span class="keyword">UPDATE</span> students </span><br><span class="line"><span class="keyword">SET</span> parent_id <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">2</span>, <span class="number">4</span>); <span class="comment">-- 設定 id 為 2, 4 學生的 parent_id = 2 (王曉如)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>更新了students表中的parent_id欄位，以建立學生與父母之間的關聯：</p>
</blockquote>
<p><font color=#FF0000> Out [14]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F3-4.png?alt=media&token=664ee05d-ac7c-4167-8708-8f144a790544" alt="UPDATE SET WHERE"></p>
<p>使用 INNER JOIN 合併資料表查詢學生與家長的詳細資料<br><font color=#0000FF> In [15]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    students.id <span class="keyword">AS</span> 小孩編號,</span><br><span class="line">    students.name <span class="keyword">AS</span> 學生姓名, </span><br><span class="line">    parents.name <span class="keyword">AS</span> 父母名稱, </span><br><span class="line">    parents.phone <span class="keyword">AS</span> 父母電話, </span><br><span class="line">    parents.gender <span class="keyword">AS</span> 父母性別</span><br><span class="line"><span class="keyword">FROM</span> students</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> parents <span class="keyword">on</span> parents.id <span class="operator">=</span> students.parent_id;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>通過INNER JOIN將students表與parents表聯接，使用students.parent_id和parents.id作為關聯條件。這樣可以列出每個學生及其對應的父母信息。</p>
</blockquote>
<p><font color=#FF0000> Out [15]: </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E4%B8%BB%E9%8D%B5%E3%80%81%E5%A4%96%E4%BE%86%E9%8D%B5%E3%80%81inner%20join%2F3-5.png?alt=media&token=5545ee06-fcaa-4b84-b072-eaf17ecfd287" alt="SELECT AS FROM INNER JOIN ON"></p>
<h2 id="回顧"><a href="#回顧" class="headerlink" title="回顧"></a>回顧</h2><p>在本節，我們練習了：<br>一、規劃外來鍵與資料表拆分<br>二、主鍵設定方式以及ID 自動地增方法<br>三、搭配 Where 條件，合併資料表查詢<br>四、使用 inner join，合併資料表查詢</p>
<p>如果沒有問題的話，那我們就可以前往下一章節囉。d(d＇∀＇)</p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>Lady YinMin&#39;s Regards</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/09/Lady%20YinMin&#39;s%20Regards/</url>
    <content><![CDATA[<h2 id="The-item-was-named-after-user-Lady-YinMin-This-coder-was-known-as-one-of-the-community-lead-of-HexSchool"><a href="#The-item-was-named-after-user-Lady-YinMin-This-coder-was-known-as-one-of-the-community-lead-of-HexSchool" class="headerlink" title="The item was named after user Lady YinMin. This coder was known as one of the community lead of HexSchool."></a>The item was named after user Lady YinMin. This coder was known as one of the community lead of HexSchool.</h2><h3 id="「-Squares-sequence-平方序列-」"><a href="#「-Squares-sequence-平方序列-」" class="headerlink" title="「 Squares sequence - 平方序列 」"></a><a href="https://www.codewars.com/kata/5546180ca783b6d2d5000062">「 Squares sequence - 平方序列 」</a></h3><p>描述撰寫的完整 JavaScript 函式，實現從給定數字 x 開始，依次計算前一個數字的平方，並返回長度為 n 的陣列。如果 n &lt;&#x3D; 0，則返回空陣列：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">squares</span>(<span class="params">x, n</span>) &#123;</span><br><span class="line">    <span class="comment">// 如果 n 是負數或等於 0，返回空陣列</span></span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化結果陣列，並將第一個元素設為 x</span></span><br><span class="line">    <span class="keyword">let</span> result = [x];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 從第二個位置開始，計算平方並加入陣列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        result.<span class="title function_">push</span>(result[i - <span class="number">1</span>] ** <span class="number">2</span>); <span class="comment">// 將前一個數字平方後加入陣列</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result; <span class="comment">// 返回結果陣列</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//test:</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">squares</span>(<span class="number">2</span>, <span class="number">5</span>)); <span class="comment">// [2, 4, 16, 256, 65536]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">squares</span>(<span class="number">3</span>, <span class="number">3</span>)); <span class="comment">// [3, 9, 81]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">squares</span>(<span class="number">5</span>, <span class="number">0</span>)); <span class="comment">// []</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">squares</span>(<span class="number">7</span>, -<span class="number">2</span>)); <span class="comment">// []</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>檢查條件：</strong></p>
<blockquote>
<p>如果 n 是負數或 0，直接返回空陣列 []。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>初始化陣列：</strong></p>
<blockquote>
<p>將 x 作為第一個元素加入陣列。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>計算平方：</strong></p>
<blockquote>
<p>使用 for 迴圈從第 2 個位置開始（索引為 1），每次將前一個數字平方後，加入到結果陣列中。<br><code> result[i - 1] ** 2 </code>來計算平方。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>返回結果：</strong></p>
<blockquote>
<p>當迴圈結束後，返回包含所有計算結果的陣列。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Training-JS-9-loop-statement-–while-and-do-while-基礎迴圈-」"><a href="#「-Training-JS-9-loop-statement-–while-and-do-while-基礎迴圈-」" class="headerlink" title="「 Training JS #9: loop statement –while and do..while - 基礎迴圈 」"></a><a href="https://www.codewars.com/kata/57216d4bcdd71175d6000560">「 Training JS #9: loop statement –while and do..while - 基礎迴圈 」</a></h3><p>要完成這個函數 padIt，我們需要在函數內部撰寫一個循環，該循環會運行 n 次。每次循環，我們會在字符串 str 的左右兩邊交替添加一個 *</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">padIt</span>(<span class="params">str, n</span>) &#123;</span><br><span class="line">  <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;  <span class="comment">// 當 n 大於 0 時，繼續循環</span></span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> === <span class="number">1</span>) &#123;  <span class="comment">// 如果 n 是奇數，則在左邊添加 *</span></span><br><span class="line">      str = <span class="string">&#x27;*&#x27;</span> + str;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  <span class="comment">// 如果 n 是偶數，則在右邊添加 *</span></span><br><span class="line">      str = str + <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    n--;  <span class="comment">// 每次循環後，將 n 減 1</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> str;  <span class="comment">// 返回最終的填充字符串</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">padIt</span>(<span class="string">&quot;hello&quot;</span>, <span class="number">1</span>)); <span class="comment">// 輸出: &quot;*hello&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">padIt</span>(<span class="string">&quot;world&quot;</span>, <span class="number">2</span>)); <span class="comment">// 輸出: &quot;*world*&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">padIt</span>(<span class="string">&quot;!&quot;</span>, <span class="number">5</span>));     <span class="comment">// 輸出: &quot;**!*&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>循環條件：</strong></p>
<blockquote>
<p>使用 <code>while (n > 0)</code> 來確保循環會執行 n 次，每次執行後將 n 減 1。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>交替填充：</strong></p>
<blockquote>
<p>使用 <code>if (n % 2 === 1)</code> 來檢查 n 是否為奇數，如果是，則在字符串 str 的左邊添加一個 *。<br>否則，則在字符串 <code>str</code> 的右邊添加一個 *。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>減少計數器：</strong></p>
<blockquote>
<p>在每次循環結束時，將 n 減 1，以便最終能夠正確地結束循環。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Break-camelCase-打斷駝峰命名-」"><a href="#「-Break-camelCase-打斷駝峰命名-」" class="headerlink" title="「 Break camelCase - 打斷駝峰命名 」"></a><a href="https://www.codewars.com/kata/5208f99aee097e6552000148">「 Break camelCase - 打斷駝峰命名 」</a></h3><p>將駝峰命名法的字符串分隔為單詞並在單詞之間添加空格的函數，我們需要識別每個大寫字母，並在它前面插入一個空格。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">solution</span>(<span class="params">string</span>) &#123;</span><br><span class="line">  <span class="comment">// 使用正則表達式來識別大寫字母，並在其前面加上空格</span></span><br><span class="line">  <span class="keyword">return</span> string.<span class="title function_">replace</span>(<span class="regexp">/([A-Z])/g</span>, <span class="string">&#x27; $1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">solution</span>(<span class="string">&quot;camelCasing&quot;</span>)); <span class="comment">// 輸出: &quot;camel Casing&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">solution</span>(<span class="string">&quot;identifier&quot;</span>));  <span class="comment">// 輸出: &quot;identifier&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">solution</span>(<span class="string">&quot;&quot;</span>));            <span class="comment">// 輸出: &quot;&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>正則表達式：</strong></p>
<blockquote>
<p><code>([A-Z])</code>：這個部分用來匹配字符串中的每個大寫字母。[A-Z] 匹配任意大寫字母，括號 () 用於捕獲匹配的字母。<br><code>g</code> 標誌表示全局匹配，這樣可以替換字符串中所有的大寫字母。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>替換：</strong></p>
<blockquote>
<p><code>replace</code> 方法用來替換匹配到的部分。<br><code>' $1'</code>：這個表示將匹配到的大寫字母用空格加上該字母來替換，其中 $1 代表第一個捕獲組（即大寫字母本身）。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Incrementer-加法器-」"><a href="#「-Incrementer-加法器-」" class="headerlink" title="「 Incrementer - 加法器 」"></a><a href="https://www.codewars.com/kata/590e03aef55cab099a0002e8">「 Incrementer - 加法器 」</a></h3><p>要實現 incrementer 函數，我們需要遍歷給定的數字陣列，並將每個數字增加其在陣列中的位置（從1開始計算）。<br>如果結果是兩位數，只保留結果的最後一位數。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">incrementer</span>(<span class="params">nums</span>) &#123;</span><br><span class="line">  <span class="comment">// 如果陣列為空，返回空陣列</span></span><br><span class="line">  <span class="keyword">if</span> (nums.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> [];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 使用 map 遍歷陣列，並對每個元素進行計算</span></span><br><span class="line">  <span class="keyword">return</span> nums.<span class="title function_">map</span>(<span class="function">(<span class="params">num, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 計算每個數字加上其位置（位置從1開始，因此是 index + 1）</span></span><br><span class="line">    <span class="keyword">let</span> incrementedValue = num + index + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 只保留最後一位數</span></span><br><span class="line">    <span class="keyword">return</span> incrementedValue % <span class="number">10</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">incrementer</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])); <span class="comment">// 輸出: [2, 4, 6]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">incrementer</span>([<span class="number">4</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">3</span>])); <span class="comment">// 輸出: [5, 8, 2, 5, 8]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">incrementer</span>([])); <span class="comment">// 輸出: []</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>檢查空陣列：</strong>首先檢查輸入陣列是否為空，如果是，則返回一個空陣列。<br><strong>遍歷和計算：</strong>使用 <code>map</code> 函數遍歷每個數字。</p>
<blockquote>
<p>index 參數表示當前數字在陣列中的索引位置。<br>對於每個數字，計算 <code>num + index + 1</code>，因為位置是從1開始計算的。<br>使用<code>% 10</code> 操作符來確保只保留結果的最後一位數。<br>返回結果：<code>map</code> 函數會返回一個新的陣列，其中包含每個計算後的數字。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「Exes-and-Ohs-X-與-O-」"><a href="#「Exes-and-Ohs-X-與-O-」" class="headerlink" title="「Exes and Ohs - X 與 O 」"></a><a href="https://www.codewars.com/kata/55908aad6620c066bc00002a">「Exes and Ohs - X 與 O 」</a></h3><p>要實現 XO 函數，我們需要檢查字符串中 ‘x’ 和 ‘o’ 字符的數量是否相等。<br>這個函數“應該”對大小寫不敏感，並且在字符串中不包含 ‘x’ 和 ‘o’ 時應返回 true。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">XO</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="comment">// 將字符串轉換為小寫，確保不區分大小寫</span></span><br><span class="line">    str = str.<span class="title function_">toLowerCase</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 計算 &#x27;x&#x27; 和 &#x27;o&#x27; 的數量</span></span><br><span class="line">    <span class="keyword">let</span> countX = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">let</span> countO = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> char <span class="keyword">of</span> str) &#123;</span><br><span class="line">        <span class="keyword">if</span> (char === <span class="string">&#x27;x&#x27;</span>) &#123;</span><br><span class="line">            countX++; <span class="comment">// 如果字符是 &#x27;x&#x27;，增加 x 的計數</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (char === <span class="string">&#x27;o&#x27;</span>) &#123;</span><br><span class="line">            countO++; <span class="comment">// 如果字符是 &#x27;o&#x27;，增加 o 的計數</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回 &#x27;x&#x27; 和 &#x27;o&#x27; 的數量是否相等</span></span><br><span class="line">    <span class="keyword">return</span> countX === countO;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">XO</span>(<span class="string">&quot;ooxx&quot;</span>)); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">XO</span>(<span class="string">&quot;xooxx&quot;</span>)); <span class="comment">// 輸出: false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">XO</span>(<span class="string">&quot;ooxXm&quot;</span>)); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">XO</span>(<span class="string">&quot;zpzpzpp&quot;</span>)); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">XO</span>(<span class="string">&quot;zzoo&quot;</span>)); <span class="comment">// 輸出: false</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>轉換為小寫：</strong>首先，我們將整個字符串轉換為小寫，這樣就能確保比較時不區分大小寫。<br><strong>計數字符：</strong></p>
<blockquote>
<p>初始化 <code>countX</code> 和 <code>countO</code> 為 0，用來計算 ‘x’ 和 ‘o’ 的數量。<br>使用 <code>for...of</code>迴圈遍歷字符串中的每個字符。<br>如果字符是 ‘x’，則增加 <code>countX</code><br>如果字符是 ‘o’，則增加 <code>countO</code>。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Likes-Vs-Dislikes-喜歡與不喜歡-」"><a href="#「-Likes-Vs-Dislikes-喜歡與不喜歡-」" class="headerlink" title="「 Likes Vs Dislikes - 喜歡與不喜歡 」"></a><a href="https://www.codewars.com/kata/62ad72443809a4006998218a">「 Likes Vs Dislikes - 喜歡與不喜歡 」</a></h3><p>要實現<code>likeOrDislike</code> 函數，我們需要模擬 YouTube 的按鈕行為規則。具體來說，我們需要處理一個按鈕輸入列表，並根據以下規則返回最終狀態：<br>-初始狀態是 Nothing。<br>-如果按下的按鈕與當前狀態相同，則狀態變為 Nothing（即取消當前狀態）。<br>-如果按下的按鈕與當前狀態不同，則狀態變為該按鈕的狀態（Like 或 Dislike）。<br>-如果輸入列表為空，返回 Nothing。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">likeOrDislike</span>(<span class="params">buttons</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> currentState = <span class="string">&quot;Nothing&quot;</span>; <span class="comment">// 初始狀態設置為 Nothing</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> button <span class="keyword">of</span> buttons) &#123;</span><br><span class="line">    <span class="keyword">if</span> (button === currentState) &#123;</span><br><span class="line">      currentState = <span class="string">&quot;Nothing&quot;</span>; <span class="comment">// 如果按鈕與當前狀態相同，取消狀態</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      currentState = button; <span class="comment">// 否則，更新狀態為按鈕的狀態</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> currentState; <span class="comment">// 返回最終狀態</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">likeOrDislike</span>([<span class="string">&quot;Dislike&quot;</span>])); <span class="comment">// 輸出: &quot;Dislike&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">likeOrDislike</span>([<span class="string">&quot;Like&quot;</span>, <span class="string">&quot;Like&quot;</span>])); <span class="comment">// 輸出: &quot;Nothing&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">likeOrDislike</span>([<span class="string">&quot;Dislike&quot;</span>, <span class="string">&quot;Like&quot;</span>])); <span class="comment">// 輸出: &quot;Like&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">likeOrDislike</span>([<span class="string">&quot;Like&quot;</span>, <span class="string">&quot;Dislike&quot;</span>, <span class="string">&quot;Dislike&quot;</span>])); <span class="comment">// 輸出: &quot;Nothing&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">likeOrDislike</span>([])); <span class="comment">// 輸出: &quot;Nothing&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>初始狀態：</strong>我們從 Nothing 開始，表示當前沒有任何按鈕被激活。</p>
<blockquote>
<p>如果相同，則將狀態設置為 Nothing，表示取消當前狀態。<br>如果不同，則更新狀態為該按鈕的狀態。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>返回結果：</strong>最後返回 currentState，這是根據按鈕輸入列表計算出的最終狀態。</p>
</blockquote>
<hr>
<h3 id="「-Count-of-positives-sum-of-negatives-算正整數與負總數合-」"><a href="#「-Count-of-positives-sum-of-negatives-算正整數與負總數合-」" class="headerlink" title="「 Count of positives &#x2F; sum of negatives - 算正整數與負總數合 」"></a><a href="https://www.codewars.com/kata/576bb71bbbcf0951d5000044">「 Count of positives &#x2F; sum of negatives - 算正整數與負總數合 」</a></h3><p>實現 countPositivesSumNegatives 函數，我們需要遍歷給定的整數數組，計算正數的個數以及負數的總和。當輸入數組為空或為 null 時，應返回一個空數組。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">countPositivesSumNegatives</span>(<span class="params">input</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!input || input.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> []; <span class="comment">// 如果輸入為空或為 null，返回空數組</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> countPositives = <span class="number">0</span>; <span class="comment">// 用來計算正數的個數</span></span><br><span class="line">  <span class="keyword">let</span> sumNegatives = <span class="number">0</span>;   <span class="comment">// 用來計算負數的總和</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> number <span class="keyword">of</span> input) &#123;</span><br><span class="line">    <span class="keyword">if</span> (number &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      countPositives++; <span class="comment">// 如果是正數，增加計數</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (number &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      sumNegatives += number; <span class="comment">// 如果是負數，累加到總和中</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> [countPositives, sumNegatives]; <span class="comment">// 返回包含正數個數和負數總和的數組</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">countPositivesSumNegatives</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, -<span class="number">11</span>, -<span class="number">12</span>, -<span class="number">13</span>, -<span class="number">14</span>, -<span class="number">15</span>])); <span class="comment">// 輸出: [10, -65]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">countPositivesSumNegatives</span>([])); <span class="comment">// 輸出: []</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">countPositivesSumNegatives</span>(<span class="literal">null</span>)); <span class="comment">// 輸出: []</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>檢查輸入：</strong>首先檢查輸入是否為空或為 <code>null</code>如果是，直接返回空數組 []。<br><strong>初始化計數和總和：</strong></p>
<blockquote>
<p><code>countPositives</code>用來計算正數的個數，初始值為 0。<br><code>sumNegatives</code>用來計算負數的總和，初始值為 0。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>遍歷數組：</strong>使用<code>for...of</code>迴圈遍歷數組中的每個元素。</p>
<blockquote>
<p>如果元素是正數，將<code>countPositives</code>增加 1。<br>如果元素是負數，將該元素加到<code>sumNegatives</code>中。</p>
</blockquote>
</blockquote>
<blockquote>
<p>返回結果：最後返回一個數組，第一個元素是正數的個數，第二個元素是負數的總和。</p>
</blockquote>
<hr>
<h3 id="「-Count-characters-in-your-string-記數字串中的字元-」"><a href="#「-Count-characters-in-your-string-記數字串中的字元-」" class="headerlink" title="「 Count characters in your string - 記數字串中的字元 」"></a><a href="https://www.codewars.com/kata/52efefcbcdf57161d4000091">「 Count characters in your string - 記數字串中的字元 」</a></h3><p>實現一個函數 count，用來計算字符串中每個字符出現的次數，我們可以使用一個對象來存儲每個字符及其對應的出現次數。當字符串為空時，我們應返回一個空的對象 {}。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">count</span>(<span class="params">string</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> charCount = &#123;&#125;; <span class="comment">// 用來存儲字符計數的對象</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> char <span class="keyword">of</span> string) &#123; <span class="comment">// 遍歷字符串中的每一個字符</span></span><br><span class="line">    <span class="keyword">if</span> (charCount[char]) &#123;</span><br><span class="line">      charCount[char]++; <span class="comment">// 如果字符已存在於對象中，增加計數</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      charCount[char] = <span class="number">1</span>; <span class="comment">// 如果字符不存在，初始化計數為 1</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> charCount; <span class="comment">// 返回字符計數對象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">count</span>(<span class="string">&quot;aba&quot;</span>)); <span class="comment">// 輸出: &#123; a: 2, b: 1 &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">count</span>(<span class="string">&quot;&quot;</span>));    <span class="comment">// 輸出: &#123;&#125;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>初始化對象：</strong>創建一個空對象 <code>charCount </code>來存儲每個字符的計數。<br><strong>遍歷字符串：</strong>使用 <code> for...of </code>迴圈遍歷字符串中的每一個字符。</p>
</blockquote>
<h3 id="「-V-A-P-O-R-C-O-D-E-」"><a href="#「-V-A-P-O-R-C-O-D-E-」" class="headerlink" title="「 V A P O R C O D E 」"></a><a href="https://www.codewars.com/kata/5966eeb31b229e44eb00007a">「 V A P O R C O D E 」</a></h3><p>實現 vaporcode 函數，將一個句子轉換為 V A P O R W A V E 風格，我們需要將所有字母轉換為大寫並在每個字母或特殊字符之間加入兩個空格，同時忽略原始句子中的空格。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">vaporcode</span>(<span class="params">string</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> string</span><br><span class="line">    .<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&#x27;&#x27;</span>) <span class="comment">// 移除所有空格</span></span><br><span class="line">    .<span class="title function_">toUpperCase</span>()       <span class="comment">// 將所有字母轉為大寫</span></span><br><span class="line">    .<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)           <span class="comment">// 將字符串分割成單個字符的數組</span></span><br><span class="line">    .<span class="title function_">join</span>(<span class="string">&#x27;  &#x27;</span>);         <span class="comment">// 在每個字符之間加入兩個空格</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">vaporcode</span>(<span class="string">&quot;Lets go to the movies&quot;</span>));      <span class="comment">// 輸出: &quot;L  E  T  S  G  O  T  O  T  H  E  M  O  V  I  E  S&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">vaporcode</span>(<span class="string">&quot;Why isn&#x27;t my code working?&quot;</span>)); <span class="comment">// 輸出: &quot;W  H  Y  I  S  N  &#x27;  T  M  Y  C  O  D  E  W  O  R  K  I  N  G  ?&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>移除空格：</strong>使用<code> replace(/\s+/g, '')</code>來移除所有空格，確保只有字母和其他字符被處理。<br><strong>轉換為大寫：</strong>使用<code> toUpperCase()</code>將字符串中的所有字母轉換為大寫，符合 V A P O R W A V E 的風格。<br><strong>分割和重組：</strong>使用<code> split('')</code>將字符串分割成單個字符的數組，然後使用<code> join('  ') </code>在每個字符之間插入兩個空格來重組字符串。</p>
</blockquote>
<hr>
<h3 id="「-Love-vs-friendship-愛與友情-」"><a href="#「-Love-vs-friendship-愛與友情-」" class="headerlink" title="「 Love vs friendship - 愛與友情 」"></a><a href="https://www.codewars.com/kata/59706036f6e5d1e22d000016">「 Love vs friendship - 愛與友情 」</a></h3><p>要計算一個單詞中每個字母的位置值之和，我們可以利用字母在字母表中的位置來進行計算。<br>字母 ‘a’ 對應位置 1，’b’ 對應位置 2，以此類推，直到 ‘z’ 對應位置 26。這可以通過計算字母的 ASCII 值來實現。<br>在 JavaScript 中，我們可以使用<code>charCodeAt</code>方法來獲取字母的 ASCII 值，然後減去 96 <em>（因為 ‘a’ 的 ASCII 值是 97）</em> 來得到字母的位置值。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">wordsToMarks</span>(<span class="params">string</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> string.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reduce</span>(<span class="function">(<span class="params">sum, char</span>) =&gt;</span> sum + (char.<span class="title function_">charCodeAt</span>(<span class="number">0</span>) - <span class="number">96</span>), <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">wordsToMarks</span>(<span class="string">&quot;love&quot;</span>));      <span class="comment">// 輸出: 54</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">wordsToMarks</span>(<span class="string">&quot;friendship&quot;</span>)); <span class="comment">// 輸出: 108</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>split(‘’) 方法：</strong>將字符串分割成單個字符的數組<br><strong>reduce 方法：</strong>遍歷字符數組，計算每個字符的字母位置值之和。<code>char.charCodeAt(0)</code>- 96 用來計算字符的字母位置值。<br><strong>累加和：</strong><code>reduce</code> 的初始值設為 0，然後逐步累加每個字母的數值。</p>
</blockquote>
<hr>
<h3 id="「-List-Filtering-清單過濾-」"><a href="#「-List-Filtering-清單過濾-」" class="headerlink" title="「 List Filtering - 清單過濾 」"></a><a href="https://www.codewars.com/kata/53dbd5315a3c69eed20002dd">「 List Filtering - 清單過濾 」</a></h3><p><code>filter</code>方法允許我們根據指定的條件過濾數組中的元素。在這個情況下，我們需要檢查每個元素是否為數字類型。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">filter_list</span>(<span class="params">l</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> l.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="keyword">typeof</span> item === <span class="string">&#x27;number&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">filter_list</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>])); <span class="comment">// 輸出: [1, 2]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">filter_list</span>([<span class="number">1</span>, <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="number">0</span>, <span class="number">15</span>])); <span class="comment">// 輸出: [1, 0, 15]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">filter_list</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;aasf&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="number">123</span>])); <span class="comment">// 輸出: [1, 2, 123]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>使用 filter 方法：</strong> <code>filter</code>方法會遍歷數組中的每一個元素，並根據提供的函數返回一個新數組，該函數返回 true 的元素會被保留。<br><strong>檢查類型：</strong><code>typeof item === 'number'</code>用於檢查元素是否為數字類型。只有當元素是數字時，這個條件才會返回 true，從而保留該元素。</p>
</blockquote>
<h3 id="「-Count-Odd-Numbers-below-n-找尋-n-以下的偶數數量-」"><a href="#「-Count-Odd-Numbers-below-n-找尋-n-以下的偶數數量-」" class="headerlink" title="「 Count Odd Numbers below n - 找尋 n 以下的偶數數量 」"></a><a href="https://www.codewars.com/kata/59342039eb450e39970000a6">「 Count Odd Numbers below n - 找尋 n 以下的偶數數量 」</a></h3><p>奇數是從 1 開始以 2 為間隔增加的數字序列。<br>因此，對於一個數字 n，小於 n 的奇數的數量可以通過整數除法來計算，即 n&#x2F;2（在 JavaScript 中使用 <code>Math.floor(n/2)</code>）。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">oddCount</span>(<span class="params">n</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">floor</span>(n / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">oddCount</span>(<span class="number">7</span>));  <span class="comment">// 輸出: 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">oddCount</span>(<span class="number">15</span>)); <span class="comment">// 輸出: 7</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>整數除法：</strong><code>Math.floor(n/2)</code>計算小於 n 的正奇數的數量。這是因為每兩個連續的整數中有一個是奇數。</p>
</blockquote>
<hr>
<h3 id="「-Find-the-odd-int-找尋奇數整數-」"><a href="#「-Find-the-odd-int-找尋奇數整數-」" class="headerlink" title="「 Find the odd int - 找尋奇數整數 」"></a><a href="https://www.codewars.com/kata/54da5a58ea159efa38000836">「 Find the odd int - 找尋奇數整數 」</a></h3><p>利用按位異或運算符（XOR）。<br>因為 XOR 的特性：任何數字與自身 XOR 將得到 0，且任何數字與 0 XOR 將得到自身。這意味著，如果我們對數組中的所有數字進行 XOR 運算，成對出現的數字會互相抵消，剩下的就是出現奇數次的數字。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">findOdd</span>(<span class="params">A</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> A.<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, num</span>) =&gt;</span> acc ^ num, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findOdd</span>([<span class="number">7</span>])); <span class="comment">// 輸出: 7</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findOdd</span>([<span class="number">0</span>])); <span class="comment">// 輸出: 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findOdd</span>([<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>])); <span class="comment">// 輸出: 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findOdd</span>([<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>])); <span class="comment">// 輸出: 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">findOdd</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>])); <span class="comment">// 輸出: 4</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>使用 reduce 方法：</strong> <code>reduce</code>方法會遍歷數組中的每一個元素，並將其與累加器進行 XOR 運算。初始值設為 0。<br><strong>XOR 運算：</strong><code>acc ^ num</code>表示累加器與當前數字進行 XOR 運算。由於成對出現的數字會互相抵消，最終累加器中只會剩下出現奇數次的數字。</p>
</blockquote>
<hr>
<h3 id="「-Filter-the-number-過濾出數字-」"><a href="#「-Filter-the-number-過濾出數字-」" class="headerlink" title="「 Filter the number - 過濾出數字 」"></a><a href="https://www.codewars.com/kata/55b051fac50a3292a9000025">「 Filter the number - 過濾出數字 」</a></h3><p>要從混合了數字和字母的字符串中提取出所有數字，我們可以使用 JavaScript 中的“正則表達式”來過濾出數字。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">filterString</span>(<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="comment">// 使用正則表達式匹配數字，並將其連接成一個字符串</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseInt</span>(value.<span class="title function_">replace</span>(<span class="regexp">/\D/g</span>, <span class="string">&#x27;&#x27;</span>), <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="keyword">const</span> input = <span class="string">&quot;a1b2c3&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> output = <span class="title function_">filterString</span>(input);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(output);  <span class="comment">// 輸出: 123</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>使用正則表達式：</strong> <strong><code>\D</code></strong> 是一個正則表達式，用來匹配非數字字符。g 是全域標誌，表示匹配所有非數字字符。<br><strong>replace:</strong> <strong><code>replace(/\D/g, '')</code></strong> 將所有非數字字符替換為空字符串，這樣只剩下數字。<br><strong>轉換為數字：</strong>使用 <code>parseInt</code> 將結果字符串轉換為整數。這樣可以確保返回的結果是數字類型，而不是字符串。</p>
</blockquote>
<hr>
<h3 id="「-Testing-1-2-3-測試-1-2-3-」"><a href="#「-Testing-1-2-3-測試-1-2-3-」" class="headerlink" title="「 Testing 1-2-3 - 測試 1-2-3 」"></a><a href="https://www.codewars.com/kata/54bf85e3d5b56c7a05000cf9">「 Testing 1-2-3 - 測試 1-2-3 」</a></h3><p>要在每行文本前面加上行號，我們可以使用 JavaScript 中的 map 方法來遍歷每個字符串，然後將行號與字符串組合起來。<br>行號從 1 開始，格式為 n: string，其中 n 是行號。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> number = <span class="keyword">function</span>(<span class="params">array</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> array.<span class="title function_">map</span>(<span class="function">(<span class="params">line, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>: <span class="subst">$&#123;line&#125;</span>`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="keyword">const</span> input = [<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>];</span><br><span class="line"><span class="keyword">const</span> output = <span class="title function_">number</span>(input);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(output);  <span class="comment">// 輸出: [&quot;1: a&quot;, &quot;2: b&quot;, &quot;3: c&quot;]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>使用 map 方法：</strong><code>map</code> 方法會遍歷數組中的每一個元素，並返回一個新數組，其中每個元素都是根據提供的函數轉換而來的。<br><strong>計算行號：</strong>在<code>map</code>方法中，我們使用箭頭函數來處理每個字符串。index 是當前元素的索引，我們在計算行號時加 1，因為行號是從 1 開始的。<br><strong>格式化輸出：</strong>使用模板字符串（template literals）將行號和字符串組合成所需的格式，即 <code>n: string</code></p>
</blockquote>
<hr>
<h3 id="「-Categorize-New-Member-分類新成員-」"><a href="#「-Categorize-New-Member-分類新成員-」" class="headerlink" title="「 Categorize New Member - 分類新成員 」"></a><a href="https://www.codewars.com/kata/5502c9e7b3216ec63c0001aa">「 Categorize New Member - 分類新成員 」</a></h3><p>要為槌球俱樂部的會員分類，我們需要根據輸入的年齡和障礙分來判斷每個潛在會員應被歸類為 “Senior” 還是 “Open”。<br>根據給定的條件：<br><strong>‧</strong> 如果年齡至少為 55 歲，且障礙分大於 7，則該會員屬於 “Senior” 類別。<br><strong>‧</strong> 否則，該會員屬於 “Open” 類別。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">openOrSenior</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> data.<span class="title function_">map</span>(<span class="function">(<span class="params">[age, handicap]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (age &gt;= <span class="number">55</span> &amp;&amp; handicap &gt; <span class="number">7</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Senior&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;Open&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="keyword">const</span> input = [[<span class="number">18</span>, <span class="number">20</span>], [<span class="number">45</span>, <span class="number">2</span>], [<span class="number">61</span>, <span class="number">12</span>], [<span class="number">37</span>, <span class="number">6</span>], [<span class="number">21</span>, <span class="number">21</span>], [<span class="number">78</span>, <span class="number">9</span>]];</span><br><span class="line"><span class="keyword">const</span> output = <span class="title function_">openOrSenior</span>(input);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(output);  <span class="comment">// 輸出: [&quot;Open&quot;, &quot;Open&quot;, &quot;Senior&quot;, &quot;Open&quot;, &quot;Open&quot;, &quot;Senior&quot;]</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>遍歷資料：</strong>使用<code>map</code>方法遍歷每一對年齡和障礙分的數據。<br><strong>判斷條件：</strong>對於每個成員，檢查他的年齡是否大於等於 55 且障礙分是否大於 7。如果兩者都滿足，則將該成員分類為 “Senior”；否則，分類為 “Open”。<br><strong>返回結果：</strong><code>map</code> 方法會返回一個新陣列，其中包含每個成員的分類結果。</p>
</blockquote>
<hr>
<h3 id="「-Total-amount-of-points-總分數-」"><a href="#「-Total-amount-of-points-總分數-」" class="headerlink" title="「 Total amount of points 總分數 」"></a><a href="https://www.codewars.com/kata/5bb904724c47249b10000131">「 Total amount of points 總分數 」</a></h3><p>要計算足球隊在錦標賽中獲得的總分數，需要”遍歷”每場比賽的結果，然後根據比賽結果計算分數。<br>每場比賽的結果以 “x:y” 的格式呈現，其中 x 是我們隊的得分，y 是對手的得分。<br>根據給定的規則：<br><strong>‧</strong> 如果 x &gt; y，我們獲得 3 分（勝利）。<br><strong>‧</strong> 如果 x &lt; y，我們獲得 0 分（失敗）。<br><strong>‧</strong> x &#x3D; y，我們獲得 1 分（平局）。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">points</span>(<span class="params">games</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> totalPoints = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> game <span class="keyword">of</span> games) &#123;</span><br><span class="line">        <span class="keyword">const</span> [x, y] = game.<span class="title function_">split</span>(<span class="string">&#x27;:&#x27;</span>).<span class="title function_">map</span>(<span class="title class_">Number</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (x &gt; y) &#123;</span><br><span class="line">            totalPoints += <span class="number">3</span>; <span class="comment">// 勝利</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x === y) &#123;</span><br><span class="line">            totalPoints += <span class="number">1</span>; <span class="comment">// 平局</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果 x &lt; y，則 totalPoints 不變，因為我們獲得 0 分</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> totalPoints;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">points</span>([<span class="string">&quot;3:1&quot;</span>, <span class="string">&quot;2:2&quot;</span>, <span class="string">&quot;0:1&quot;</span>, <span class="string">&quot;4:0&quot;</span>, <span class="string">&quot;2:3&quot;</span>, <span class="string">&quot;1:1&quot;</span>, <span class="string">&quot;2:0&quot;</span>, <span class="string">&quot;1:3&quot;</span>, <span class="string">&quot;0:0&quot;</span>, <span class="string">&quot;3:2&quot;</span>]));  <span class="comment">// 輸出: 17</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>初始化總分數：</strong>用變數<code>totalPoints</code>來累計我們隊的總分數，初始值為 0。<br><strong>遍歷比賽結果：</strong>使用<code>for...of</code>迴圈遍歷 games 陣列中的每個比賽結果。<br><strong>分割和轉換得分：</strong>對於每個比賽結果，使用<code>split(':')</code>將字符串分割為兩個部分，然後用<code>map(Number)</code>將它們轉換為數字。</p>
</blockquote>
<blockquote>
<p><strong>計算分數：</strong></p>
<blockquote>
<p>如果 x &gt; y，我們增加 3 分。<br>如果 x &#x3D;&#x3D;&#x3D; y，我們增加 1 分。<br>如果 x &lt; y，我們不增加分數。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>返回總分數：</strong>最後，返回計算出的<code>totalPoints</code>。</p>
</blockquote>
<hr>
<h3 id="「-Get-the-Middle-Characte-獲取中間字元-」"><a href="#「-Get-the-Middle-Characte-獲取中間字元-」" class="headerlink" title="「 Get the Middle Characte - 獲取中間字元 」"></a><a href="https://www.codewars.com/kata/56747fd5cb988479af000028">「 Get the Middle Characte - 獲取中間字元 」</a></h3><p>從一個非空字符串中返回中間的字符，我們需要根據字符串的長度來決定是返回一個字符還是兩個字符。<br><strong>‧</strong> 如果字符串的長度是奇數，則返回中間的單個字符。<br><strong>‧</strong> 如果字符串的長度是偶數，則返回中間的兩個字符。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getMiddle</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> length = s.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">const</span> middleIndex = <span class="title class_">Math</span>.<span class="title function_">floor</span>(length / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果字符串長度是偶數，返回中間兩個字符</span></span><br><span class="line">    <span class="keyword">if</span> (length % <span class="number">2</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> s[middleIndex - <span class="number">1</span>] + s[middleIndex];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果字符串長度是奇數，返回中間的單個字符</span></span><br><span class="line">        <span class="keyword">return</span> s[middleIndex];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getMiddle</span>(<span class="string">&quot;test&quot;</span>));    <span class="comment">// 輸出: &quot;es&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getMiddle</span>(<span class="string">&quot;testing&quot;</span>)); <span class="comment">// 輸出: &quot;t&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getMiddle</span>(<span class="string">&quot;middle&quot;</span>));  <span class="comment">// 輸出: &quot;dd&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getMiddle</span>(<span class="string">&quot;A&quot;</span>));       <span class="comment">// 輸出: &quot;A&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>計算字符串長度：</strong>首先獲取字符串的長度 length，然後計算中間索引 middleIndex，使用 Math.floor(length &#x2F; 2) 來確定中間位置。<br><strong>判斷長度奇偶：</strong></p>
<blockquote>
<p><em>偶數長度：</em>如果<code>length % 2 === 0</code>，表示字符串長度是偶數，則返回從<code>middleIndex - 1</code>開始的兩個字符<br><em>奇數長度：</em>如果字符串長度是奇數，則直接返回<code>middleIndex</code>位置的字符。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Rock-Paper-Scissors-剪刀石頭布！-」"><a href="#「-Rock-Paper-Scissors-剪刀石頭布！-」" class="headerlink" title="「 Rock Paper Scissors! - 剪刀石頭布！ 」"></a><a href="https://www.codewars.com/kata/5672a98bdbdd995fad00000f">「 Rock Paper Scissors! - 剪刀石頭布！ 」</a></h3><p>要實現「石頭、剪刀、布」遊戲的勝負判斷，需要比較兩個玩家的選擇，然後根據遊戲規則決定誰贏了，或者是否平局。<br>遊戲規則如下：<br><strong>‧</strong> 剪刀贏紙<br><strong>‧</strong> 石頭贏剪刀<br><strong>‧</strong> 布贏石頭<br><strong>‧</strong> 如果兩個玩家選擇相同，則為平局<br>使用條件判斷來實現這個邏輯。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">rps</span> = (<span class="params">p1, p2</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (p1 === p2) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Draw!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        (p1 === <span class="string">&quot;scissors&quot;</span> &amp;&amp; p2 === <span class="string">&quot;paper&quot;</span>) ||</span><br><span class="line">        (p1 === <span class="string">&quot;rock&quot;</span> &amp;&amp; p2 === <span class="string">&quot;scissors&quot;</span>) ||</span><br><span class="line">        (p1 === <span class="string">&quot;paper&quot;</span> &amp;&amp; p2 === <span class="string">&quot;rock&quot;</span>)</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Player 1 won!&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Player 2 won!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">rps</span>(<span class="string">&quot;scissors&quot;</span>, <span class="string">&quot;paper&quot;</span>));  <span class="comment">// 輸出: &quot;Player 1 won!&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">rps</span>(<span class="string">&quot;scissors&quot;</span>, <span class="string">&quot;rock&quot;</span>));   <span class="comment">// 輸出: &quot;Player 2 won!&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">rps</span>(<span class="string">&quot;paper&quot;</span>, <span class="string">&quot;paper&quot;</span>));     <span class="comment">// 輸出: &quot;Draw!&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>平局判斷：</strong>首先檢查 p1 和 p2 是否相等。如果相等，則返回 “Draw!”，表示平局。</p>
</blockquote>
<blockquote>
<p><strong>勝負判斷：</strong></p>
<blockquote>
<p>使用條件判斷來檢查玩家1是否獲勝的情況：</p>
<blockquote>
<p>剪刀對紙<br>石頭對剪刀<br>布對石頭</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>如果上述條件不成立，則玩家2獲勝。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-I-love-you-a-little-a-lot-passionately-…-not-at-all-愛你、還好、最愛……不愛你-」"><a href="#「-I-love-you-a-little-a-lot-passionately-…-not-at-all-愛你、還好、最愛……不愛你-」" class="headerlink" title="「 I love you, a little , a lot, passionately … not at all - 愛你、還好、最愛……不愛你 」"></a><a href="https://www.codewars.com/kata/57f24e6a18e9fad8eb000296">「 I love you, a little , a lot, passionately … not at all - 愛你、還好、最愛……不愛你 」</a></h3><p>Q:需要確定當撕掉最後一片花瓣時，應該說哪一句話。<br>A:由於這些短語是循環的，我們可以使用模運算（取餘數）來確定應該說哪一句話。<br>這些短語按順序排列如下：<br>「<br>“I love you”<br>“a little”<br>“a lot”<br>“passionately”<br>“madly”<br>“not at all”<br>」<br>如果有超過 6 片花瓣，我們就從頭開始重複這些短語。<br>因此，對於給定的花瓣數量 nbPetals，我們可以使用 (nbPetals - 1) % 6 來找到對應的短語索引。<br>這裡的 - 1 是因為索引從 0 開始。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">howMuchILoveYou</span>(<span class="params">nbPetals</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> phrases = [</span><br><span class="line">        <span class="string">&quot;I love you&quot;</span>,</span><br><span class="line">        <span class="string">&quot;a little&quot;</span>,</span><br><span class="line">        <span class="string">&quot;a lot&quot;</span>,</span><br><span class="line">        <span class="string">&quot;passionately&quot;</span>,</span><br><span class="line">        <span class="string">&quot;madly&quot;</span>,</span><br><span class="line">        <span class="string">&quot;not at all&quot;</span></span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 計算對應的短語索引</span></span><br><span class="line">    <span class="keyword">const</span> index = (nbPetals - <span class="number">1</span>) % phrases.<span class="property">length</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 返回對應的短語</span></span><br><span class="line">    <span class="keyword">return</span> phrases[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">howMuchILoveYou</span>(<span class="number">7</span>));  <span class="comment">// 輸出: &quot;I love you&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">howMuchILoveYou</span>(<span class="number">3</span>));  <span class="comment">// 輸出: &quot;a lot&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">howMuchILoveYou</span>(<span class="number">6</span>));  <span class="comment">// 輸出: &quot;not at all&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>短語陣列：</strong>用一個陣列 <code>phrases</code> 來存放所有的短語。<br><strong>計算索引：</strong>使用 <code>(nbPetals - 1) % phrases.length</code>來計算對應的短語索引。這樣可以確保即使 nbPetals 超過 6，也能正確循環回到起始短語。<br><strong>返回結果：</strong>根據計算出的索引，返回相應的短語。</p>
</blockquote>
<hr>
<h3 id="「-Will-you-make-it-辦得到嗎？-」"><a href="#「-Will-you-make-it-辦得到嗎？-」" class="headerlink" title="「 Will you make it? - 辦得到嗎？ 」"></a><a href="https://www.codewars.com/kata/5861d28f124b35723e00005e">「 Will you make it? - 辦得到嗎？ 」</a></h3><p>Q:計算汽車剩餘的燃油是否足夠支持行駛到加油站的距離。<br>A:通過比較汽車在剩餘燃油下能行駛的總里程與到加油站的距離來實現。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">zeroFuel</span> = (<span class="params">distanceToPump, mpg, fuelLeft</span>) =&gt; &#123;</span><br><span class="line">  <span class="comment">// 計算剩餘燃油能行駛的最大距離</span></span><br><span class="line">  <span class="keyword">const</span> maxDistance = mpg * fuelLeft;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 如果最大距離大於或等於到加油站的距離，則返回 true，否則返回 false</span></span><br><span class="line">  <span class="keyword">return</span> maxDistance &gt;= distanceToPump;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">zeroFuel</span>(<span class="number">50</span>, <span class="number">25</span>, <span class="number">2</span>)); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">zeroFuel</span>(<span class="number">100</span>, <span class="number">25</span>, <span class="number">3</span>)); <span class="comment">// 輸出: false</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>計算最大可行駛距離：</strong>使用 <em>mpg * fuelLeft</em>計算在剩餘燃油下汽車能行駛的最大距離。</p>
<blockquote>
<p>mpg 是每加侖可以行駛的英里數。 <em>(milePerGallons)</em><br>fuelLeft 是剩餘的加侖數。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>比較距離：</strong>將計算出的最大可行駛距離與到加油站的距離 distanceToPump 進行比較。</p>
<blockquote>
<p>如果最大可行駛距離大於或等於 distanceToPump，則說明汽車可以到達加油站，返回 true。<br>否則，返回 false</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Training-JS-8-Conditional-statement–switch-Switch-語法-」"><a href="#「-Training-JS-8-Conditional-statement–switch-Switch-語法-」" class="headerlink" title="「 Training JS #8: Conditional statement–switch - Switch 語法 」"></a><a href="https://www.codewars.com/kata/572059afc2f4612825000d8a">「 Training JS #8: Conditional statement–switch - Switch 語法 」</a></h3><p>使用 switch 語句來完成 howManydays 函數，這個函數接受一個參數 month，並根據月份返回相應的天數。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">howManydays</span>(<span class="params">month</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> days;</span><br><span class="line">  <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">      days = <span class="number">31</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">    <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">      days = <span class="number">30</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      days = <span class="number">28</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="comment">// 預設情況下，我們不需要做任何事情，因為所有的月份都已經涵蓋</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> days;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">howManydays</span>(<span class="number">1</span>));  <span class="comment">// 輸出: 31</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">howManydays</span>(<span class="number">2</span>));  <span class="comment">// 輸出: 28</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">howManydays</span>(<span class="number">4</span>));  <span class="comment">// 輸出: 30</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>switch 語句：</strong>我們使用<code>switch</code>來根據 month 的值選擇執行的代碼塊。<br><strong>case 語句：</strong>每個 case 語句後面跟著一個數值，表示當 month 的值等於該數值時，執行相應的代碼塊。</p>
<blockquote>
<p>月份 1, 3, 5, 7, 8, 10, 12 都有 31 天。<br>月份 4, 6, 9, 11 有 30 天。<br>月份 2 有 28 天（不考慮閏年）。</p>
</blockquote>
</blockquote>
<blockquote>
<p>break 語句：每個 case 語句結束後使用 break 語句來防止程式繼續執行後續的 case 語句。</p>
</blockquote>
<hr>
<h3 id="「-Jaden-Casing-Strings-首字大寫-」"><a href="#「-Jaden-Casing-Strings-首字大寫-」" class="headerlink" title="「 Jaden Casing Strings - 首字大寫 」"></a><a href="https://www.codewars.com/kata/5390bac347d09b7da40006f6">「 Jaden Casing Strings - 首字大寫 」</a></h3><p>擴展 JavaScript 的 String 原型，為它添加一個方法 toJadenCase，用來將字串中的每個單詞的首字母大寫。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toJadenCase</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 使用 split 方法將字串分割為單詞陣列</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">split</span>(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        <span class="comment">// 使用 map 方法遍歷每個單詞，將首字母轉為大寫</span></span><br><span class="line">        .<span class="title function_">map</span>(<span class="function"><span class="params">word</span> =&gt;</span> word.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + word.<span class="title function_">slice</span>(<span class="number">1</span>))</span><br><span class="line">        <span class="comment">// 使用 join 方法將單詞陣列重新組合成字串</span></span><br><span class="line">        .<span class="title function_">join</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="keyword">const</span> quote = <span class="string">&quot;How can mirrors be real if our eyes aren&#x27;t real&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(quote.<span class="title function_">toJadenCase</span>()); <span class="comment">// 輸出: &quot;How Can Mirrors Be Real If Our Eyes Aren&#x27;t Real&quot;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>split(‘ ‘)方法：</strong>將字串按照空格分割成一個單詞陣列。<br><strong>map() 方法：</strong>遍歷每個單詞，將單詞的首字母轉換為大寫，並保持其餘部分不變。</p>
<blockquote>
<p>word.charAt(0).toUpperCase() 取得單詞的首字母並轉為大寫。<br>word.slice(1) 取得單詞的其餘部分。<br><strong>join(‘ ‘) 方法：</strong>將處理過的單詞陣列重新組合成字串，單詞之間用空格分隔。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Stringy-Strings-細弦字串-」"><a href="#「-Stringy-Strings-細弦字串-」" class="headerlink" title="「 Stringy Strings - 細弦字串 」"></a><a href="https://www.codewars.com/kata/563b74ddd19a3ad462000054">「 Stringy Strings - 細弦字串 」</a></h3><p>編寫一個函數 stringy，用於生成一個由 1 和 0 交替組成的字串，並且字串以 1 開頭。這個函數會根據給定的 size 來決定字串的長度。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">stringy</span>(<span class="params">size</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="comment">// 如果索引是偶數，添加 &#x27;1&#x27;，否則添加 &#x27;0&#x27;</span></span><br><span class="line">        result += i % <span class="number">2</span> === <span class="number">0</span> ? <span class="string">&#x27;1&#x27;</span> : <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">stringy</span>(<span class="number">6</span>));  <span class="comment">// 輸出: &#x27;101010&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">stringy</span>(<span class="number">4</span>));  <span class="comment">// 輸出: &#x27;1010&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">stringy</span>(<span class="number">12</span>)); <span class="comment">// 輸出: &#x27;101010101010&#x27;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>初始化字串 result：</strong>我們從一個空字串開始，然後逐步構建目標字串。<br><strong>迴圈 for：</strong></p>
<blockquote>
<p>使用一個 <code>for</code> 迴圈從 “0”遍歷到 “size - 1”。<br>在每次迭代中，檢查當前的索引 i 是偶數還是奇數。<br>如果 i 是偶數，則在 <code>result</code>中添加字符 ‘1’。<br>如果 i 是奇數，則在 <code>result</code>中添加字符 ‘0’。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Is-the-string-uppercase-字串是大寫的嗎？-」"><a href="#「-Is-the-string-uppercase-字串是大寫的嗎？-」" class="headerlink" title="「 Is the string uppercase? - 字串是大寫的嗎？ 」"></a><a href="https://www.codewars.com/kata/56cd44e1aa4ac7879200010b">「 Is the string uppercase? - 字串是大寫的嗎？ 」</a></h3><p>擴展 JavaScript 的 String 原型，為它添加一個方法 isUpperCase，用來檢查字串是否完全由大寫字母組成。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">isUpperCase</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 使用正則表達式檢查字串中是否有小寫字母</span></span><br><span class="line">    <span class="keyword">return</span> !<span class="regexp">/[a-z]/</span>.<span class="title function_">test</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;c&quot;</span>.<span class="title function_">isUpperCase</span>()); <span class="comment">// 輸出: false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;C&quot;</span>.<span class="title function_">isUpperCase</span>()); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;hello I AM DONALD&quot;</span>.<span class="title function_">isUpperCase</span>()); <span class="comment">// 輸出: false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;HELLO I AM DONALD&quot;</span>.<span class="title function_">isUpperCase</span>()); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ACSKLDFJSgSKLDFJSKLDFJ&quot;</span>.<span class="title function_">isUpperCase</span>()); <span class="comment">// 輸出: false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ACSKLDFJSGSKLDFJSKLDFJ&quot;</span>.<span class="title function_">isUpperCase</span>()); <span class="comment">// 輸出: true</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>正則表達式<code>/[a-z]/</code></strong></p>
<blockquote>
<p>這個正則表達式用於檢查字串中是否包含任何小寫字母。<br><code>test()</code>方法返回一個布林值，表示字串中是否存在匹配的模式。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>邏輯運算符 !：</strong> 我們使用<code>!</code>來反轉 <code>test()</code> 方法的結果，因為我們想要檢查字串中是否不包含小寫字母。如果沒有小寫字母，則表示字串是全大寫的，返回 true。</p>
</blockquote>
<hr>
<h3 id="「-String-cleaning-清掃字串-」"><a href="#「-String-cleaning-清掃字串-」" class="headerlink" title="「 String cleaning - 清掃字串 」"></a><a href="https://www.codewars.com/kata/57e1e61ba396b3727c000251">「 String cleaning - 清掃字串 」</a></h3><p>編寫一個函數 stringClean，用於移除字串中的所有數字字符，同時保留空格和其他特殊字符。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">stringClean</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="comment">// 使用 replace 方法和正則表達式來移除所有數字</span></span><br><span class="line">    <span class="keyword">return</span> s.<span class="title function_">replace</span>(<span class="regexp">/[0-9]/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">stringClean</span>(<span class="string">&#x27;! !&#x27;</span>)); <span class="comment">// 輸出: &#x27;! !&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">stringClean</span>(<span class="string">&#x27;123456789&#x27;</span>)); <span class="comment">// 輸出: &#x27;&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">stringClean</span>(<span class="string">&#x27;This looks5 grea8t!&#x27;</span>)); <span class="comment">// 輸出: &#x27;This looks great!&#x27;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>replace 方法：</strong>這個方法用於替換字串中的某些部分。這裡我們使用正則表達式來匹配所有數字字符。<br><strong>g</strong> 標誌表示全域搜索，確保替換字串中的所有數字字符，而不僅僅是第一個匹配項。</p>
</blockquote>
<hr>
<h3 id="「-Reversed-Strings-反轉字串-」"><a href="#「-Reversed-Strings-反轉字串-」" class="headerlink" title="「 Reversed Strings - 反轉字串 」"></a><a href="https://www.codewars.com/kata/5168bb5dfe9a00b126000018">「 Reversed Strings - 反轉字串 」</a></h3><p>使用 JavaScript 的內建方法來實現這個函數 solution，用於反轉給定的字串。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">solution</span>(<span class="params">str</span>) &#123;</span><br><span class="line">    <span class="comment">// 將字串轉換為陣列，反轉陣列，然後再轉換回字串</span></span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">solution</span>(<span class="string">&#x27;world&#x27;</span>)); <span class="comment">// 輸出: &#x27;dlrow&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">solution</span>(<span class="string">&#x27;word&#x27;</span>));  <span class="comment">// 輸出: &#x27;drow&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>split(‘’) 方法：</strong>將字串分割成一個字符陣列。這裡的空字串 ‘’ 作為分隔符，表示每個字符都會成為陣列中的一個元素。<br><strong>reverse() 方法：</strong>反轉陣列中元素的順序。<br><strong>join(‘’) 方法：</strong>將反轉後的字符陣列重新組合成一個字串。這裡的空字串 ‘’ 作為連接符，表示直接將字符連接在一起，不插入任何額外的字符。</p>
</blockquote>
<hr>
<h3 id="「-The-Feast-of-Many-Beasts-野獸的盛宴-」"><a href="#「-The-Feast-of-Many-Beasts-野獸的盛宴-」" class="headerlink" title="「 The Feast of Many Beasts - 野獸的盛宴 」"></a><a href="https://www.codewars.com/kata/5aa736a455f906981800360d">「 The Feast of Many Beasts - 野獸的盛宴 」</a></h3><p>編寫函數 feast，用於檢查動物名稱和菜餚名稱是否符合規則：菜餚名稱的首尾字母必須與動物名稱的首尾字母相同。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">feast</span>(<span class="params">beast, dish</span>) &#123;</span><br><span class="line">    <span class="comment">// 檢查動物名稱和菜餚名稱的首尾字母是否相同</span></span><br><span class="line">    <span class="keyword">return</span> beast[<span class="number">0</span>] === dish[<span class="number">0</span>] &amp;&amp; beast[beast.<span class="property">length</span> - <span class="number">1</span>] === dish[dish.<span class="property">length</span> - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">feast</span>(<span class="string">&quot;great blue heron&quot;</span>, <span class="string">&quot;garlic naan&quot;</span>)); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">feast</span>(<span class="string">&quot;chickadee&quot;</span>, <span class="string">&quot;chocolate cake&quot;</span>)); <span class="comment">// 輸出: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">feast</span>(<span class="string">&quot;brown bear&quot;</span>, <span class="string">&quot;bear claw&quot;</span>)); <span class="comment">// 輸出: false</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>首尾字母檢查：</strong></p>
<blockquote>
<p><code>beast[0] </code>：取得動物名稱的第一個字母。<br><code>dish[0]</code>：取得菜餚名稱的第一個字母。<br><code>beast[beast.length - 1]</code>：取得動物名稱的最後一個字母。<br><code>dish[dish.length - 1]</code>：取得菜餚名稱的最後一個字母。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>條件判斷：</strong> 使用 <code>&&</code> 來同時檢查首字母和尾字母是否相同，只有兩者都相同時，函數才返回 true。</p>
</blockquote>
<hr>
<h3 id="「-Remove-String-Spaces-移除字串中的空格-」"><a href="#「-Remove-String-Spaces-移除字串中的空格-」" class="headerlink" title="「 Remove String Spaces - 移除字串中的空格 」"></a><a href="https://www.codewars.com/kata/57eae20f5500ad98e50002c5">「 Remove String Spaces - 移除字串中的空格 」</a></h3><p>使用 JavaScript 中的字串方法來實現這個函數 noSpace，用於移除字串中的所有空格。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">noSpace</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="comment">// 使用 replace 方法和正則表達式來移除所有空格</span></span><br><span class="line">    <span class="keyword">return</span> x.<span class="title function_">replace</span>(<span class="regexp">/\s+/g</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 範例使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">noSpace</span>(<span class="string">&quot;8 j 8   mBliB8g  imjB8B8  jl  B&quot;</span>)); <span class="comment">// 輸出: &quot;8j8mBliB8gimjB8B8jlB&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">noSpace</span>(<span class="string">&quot;8 8 Bi fk8h B 8 BB8B B B  B888 c hl8 BhB fd&quot;</span>)); <span class="comment">// 輸出: &quot;88Bifk8hB8BB8BBBB888chl8BhBfd&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">noSpace</span>(<span class="string">&quot;8aaaaa dddd r     &quot;</span>)); <span class="comment">// 輸出: &quot;8aaaaaddddr&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong><code>replace</code>：</strong>這個方法用於替換字串中的某些部分。這裡我們使用正則表達式來匹配所有空白字符。<br><strong>正則表達式 <code>/\s+/g：</code></strong></p>
<blockquote>
<p><strong><code>\s</code></strong> 表示匹配任何空白字符（包括空格、制表符等）<br><strong><code>+</code></strong> 表示匹配一次或多次前面的模式，即一個或多個空白字符。<br><strong><code>g</code></strong> 標誌表示全域搜索，確保替換字串中的所有空白字符，而不僅僅是第一個匹配項。</p>
</blockquote>
</blockquote>
<hr>
<h3 id="「-Thinkful-Logic-Drills-Traffic-light-紅綠燈-」"><a href="#「-Thinkful-Logic-Drills-Traffic-light-紅綠燈-」" class="headerlink" title="「 Thinkful - Logic Drills: Traffic light - 紅綠燈 」"></a><a href="https://www.codewars.com/kata/58649884a1659ed6cb000072/">「 Thinkful - Logic Drills: Traffic light - 紅綠燈 」</a></h3><p>完成函數 updateLight , 根據當前的燈光狀態返回下一個狀態。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">updateLight</span>(<span class="params">current</span>) &#123;</span><br><span class="line">    <span class="comment">// 根據當前狀態返回下一個狀態</span></span><br><span class="line">    <span class="keyword">if</span> (current === <span class="string">&quot;green&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;yellow&quot;</span>; <span class="comment">// 綠燈變黃燈</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (current === <span class="string">&quot;yellow&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;red&quot;</span>; <span class="comment">// 黃燈變紅燈</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (current === <span class="string">&quot;red&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;green&quot;</span>; <span class="comment">// 紅燈變綠燈</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Invalid light state&quot;</span>); <span class="comment">// 處理無效的輸入</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>條件判斷：</strong>使用 <code>if-else</code> 結構來檢查當前的燈光狀態，並返回相應的下一個狀態。<br><strong>錯誤處理：</strong>如果輸入的燈光狀態無效，則拋出一個錯誤，這樣可以幫助我們檢查不正確的使用情況。</p>
</blockquote>
<hr>
<h3 id="「-Basic-Mathematical-Operations-基礎運算符號-」"><a href="#「-Basic-Mathematical-Operations-基礎運算符號-」" class="headerlink" title="「 Basic Mathematical Operations - 基礎運算符號 」"></a><a href="https://www.codewars.com/kata/57356c55867b9b7a60000bd7">「 Basic Mathematical Operations - 基礎運算符號 」</a></h3><p>通過條件判斷來實現函數 basicOp，以執行基本的數學運算（加、減、乘、除）。<br>函數將根據提供的運算符對兩個數字進行計算並返回結果。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">basicOp</span>(<span class="params">operation, value1, value2</span>) &#123;</span><br><span class="line">    <span class="comment">// 根據運算符進行對應的計算</span></span><br><span class="line">    <span class="keyword">switch</span> (operation) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> value1 + value2; <span class="comment">// 加法</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> value1 - value2; <span class="comment">// 減法</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> value1 * value2; <span class="comment">// 乘法</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> value1 / value2; <span class="comment">// 除法</span></span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Invalid operation&quot;</span>); <span class="comment">// 處理無效的運算符</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong><code>switch</code> 語句：</strong>使用 <code>switch</code> 語句來根據 <code>operation</code>的值選擇執行哪一種運算。<br><strong>加法、減法、乘法、除法：</strong> 對應不同的運算符（+, -, *, &#x2F;）執行相應的數學運算。<br><strong>錯誤處理：</strong>如果提供的運算符無效，則拋出一個錯誤，這樣可以幫助我們檢查不正確的使用情況。</p>
</blockquote>
<hr>
<h3 id="「-Even-or-Odd-偶數或奇數-」"><a href="#「-Even-or-Odd-偶數或奇數-」" class="headerlink" title="「 Even or Odd - 偶數或奇數 」"></a><a href="https://www.codewars.com/kata/53da3dbb4a5168369a0000fe">「 Even or Odd - 偶數或奇數 」</a></h3><p>函數 evenOrOdd。檢查傳入的整數是偶數還是奇數，然後返回相應的字串 “Even” 或 “Odd”。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">evenOrOdd</span>(<span class="params">number</span>) &#123;</span><br><span class="line">    <span class="comment">// 使用模運算符 % 來判斷數字是偶數還是奇數</span></span><br><span class="line">    <span class="keyword">if</span> (number % <span class="number">2</span> === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Even&quot;</span>; <span class="comment">// 如果數字除以 2 的餘數為 0，則是偶數</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Odd&quot;</span>;  <span class="comment">// 否則是奇數</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>模運算符 %：</strong> 用來計算除法的餘數。當 number % 2 等於 0 時，表示該數字是偶數。<br><strong>條件判斷：</strong> 使用 <code>if</code>語句來檢查 number % 2 &#x3D;&#x3D;&#x3D; 0，如果為真，則返回 “Even”；否則返回 “Odd”</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>SQL小節練習：家具店的菜雞銷售奇遇記</title>
    <url>/IWishIKnewHowToQuitYou/2024/10/28/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98/</url>
    <content><![CDATA[<p>謹以本篇記錄小美同學運用入門SQL語法，維運『築夢家居』的事績。</p>
<p><a href="https://gamma.app/docs/SQL--23heyix4r93u5u0?mode=doc">課堂簡報連結</a><br><a href="post-sql.com">線上資料庫操作網站 PG-SQL:Temporary Postgres Database.</a></p>
<h2 id="資料載入"><a href="#資料載入" class="headerlink" title="資料載入"></a>資料載入</h2><p>首先，我們使用這段程式碼創建一個名為products的資料表，並插入一些商品數據。<br><font color=#0000FF> ln [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> products (</span><br><span class="line">   name <span class="type">VARCHAR</span>(<span class="number">100</span>),         <span class="comment">-- 商品名稱</span></span><br><span class="line">   price <span class="type">INTEGER</span>,            <span class="comment">-- 原價</span></span><br><span class="line">   discount_price <span class="type">INTEGER</span>,    <span class="comment">-- 優惠價</span></span><br><span class="line">   stock <span class="type">INTEGER</span>,            <span class="comment">-- 庫存數量</span></span><br><span class="line">   category <span class="type">VARCHAR</span>(<span class="number">50</span>),      <span class="comment">-- 商品分類</span></span><br><span class="line">   status <span class="type">VARCHAR</span>(<span class="number">20</span>)         <span class="comment">-- 商品狀態</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [1]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2F1.png?alt=media&token=af1d0c30-9165-45c0-950e-891d3d0c4d82" alt="create table"></p>
<blockquote>
<p><strong>CREATE TABLE products：</strong> 這行表示我們正在創建一個名為products的資料表。<br><strong>name VARCHAR(100)：</strong> 這欄位儲存商品名稱，最多可包含100個字元。<br><strong>price INTEGER：</strong> 這欄位儲存商品的原價，以整數形式表示。<br><strong>discount_price INTEGER：</strong> 這欄位儲存商品的優惠價，也是整數。<br><strong>stock INTEGER：</strong> 這欄位表示庫存數量，使用整數。<br><strong>category VARCHAR(50)：</strong> 這欄位表示商品的分類，最多可包含50個字元。<br><strong>status VARCHAR(20)：</strong> 這欄位表示商品的狀態，例如“active”或“inactive”，最多可包含20個字元。</p>
</blockquote>
<p>接著使用下列程式碼輸入資料。</p>
<p><font color=#0000FF>  In [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> products (name, price, discount_price, stock, category, status) <span class="keyword">VALUES</span></span><br><span class="line">   (<span class="string">&#x27;北歐風雙人沙發&#x27;</span>, <span class="number">39900</span>, <span class="number">35900</span>, <span class="number">3</span>, <span class="string">&#x27;沙發&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;貓抓皮L型沙發&#x27;</span>, <span class="number">58900</span>, <span class="number">52900</span>, <span class="number">1</span>, <span class="string">&#x27;沙發&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;典雅三人座沙發&#x27;</span>, <span class="number">42800</span>, <span class="number">42800</span>, <span class="number">5</span>, <span class="string">&#x27;沙發&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;工業風電視櫃&#x27;</span>, <span class="number">5900</span>, <span class="number">4900</span>, <span class="number">12</span>, <span class="string">&#x27;櫃子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;簡約書櫃&#x27;</span>, <span class="number">3500</span>, <span class="number">3500</span>, <span class="number">8</span>, <span class="string">&#x27;櫃子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;玄關鞋櫃&#x27;</span>, <span class="number">2900</span>, <span class="number">2900</span>, <span class="number">15</span>, <span class="string">&#x27;櫃子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;日式雙人床架&#x27;</span>, <span class="number">12000</span>, <span class="number">11200</span>, <span class="number">6</span>, <span class="string">&#x27;床架&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;掀床五尺雙人床&#x27;</span>, <span class="number">19900</span>, <span class="number">18900</span>, <span class="number">2</span>, <span class="string">&#x27;床架&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;兒童床架&#x27;</span>, <span class="number">8900</span>, <span class="number">8900</span>, <span class="number">0</span>, <span class="string">&#x27;床架&#x27;</span>, <span class="string">&#x27;inactive&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;電腦辦公椅&#x27;</span>, <span class="number">4500</span>, <span class="number">3900</span>, <span class="number">20</span>, <span class="string">&#x27;椅子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;餐椅四入組&#x27;</span>, <span class="number">6000</span>, <span class="number">5200</span>, <span class="number">8</span>, <span class="string">&#x27;椅子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;北歐風餐桌&#x27;</span>, <span class="number">15800</span>, <span class="number">14800</span>, <span class="number">4</span>, <span class="string">&#x27;桌子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;實木咖啡桌&#x27;</span>, <span class="number">3200</span>, <span class="number">2900</span>, <span class="number">10</span>, <span class="string">&#x27;桌子&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">   (<span class="string">&#x27;電競書桌&#x27;</span>, <span class="number">8900</span>, <span class="number">8900</span>, <span class="number">0</span>, <span class="string">&#x27;桌子&#x27;</span>, <span class="string">&#x27;inactive&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [2]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2F2.png?alt=media&token=e945cdf0-d7f2-468e-91a5-3245f543c8d7" alt="create table data"></p>
<blockquote>
<p><strong>INSERT INTO products (…) VALUES (…)：</strong>這段語句用於向products表中插入多行數據。<br>每一行代表一個商品的數據，包括名稱、原價、優惠價、庫存、分類和狀態。</p>
</blockquote>
<p>現在我們就可以使用以下SQL查詢，來查看資料庫中products表的所有資料。<br><font color=#0000FF>  In [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [3]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2F3.png?alt=media&token=70b9c983-c836-4e3a-957b-ccad1ff77e23" alt="product databate"></p>
<h2 id="基礎比較運算："><a href="#基礎比較運算：" class="headerlink" title="基礎比較運算："></a>基礎比較運算：</h2><h3 id="情境-1：單品查詢"><a href="#情境-1：單品查詢" class="headerlink" title="情境 1：單品查詢"></a>情境 1：單品查詢</h3><h4 id="客人：「這張北歐風雙人沙發多少錢？」"><a href="#客人：「這張北歐風雙人沙發多少錢？」" class="headerlink" title="客人：「這張北歐風雙人沙發多少錢？」"></a>客人：「這張北歐風雙人沙發多少錢？」</h4><p><font color=#0000FF> In [4]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;北歐風雙人沙發&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [4]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq1.png?alt=media&token=0f69dea2-10ec-493b-ac18-3cef62264953" alt="where name"></p>
<blockquote>
<p>這段查詢的作用是從products表中選擇商品名稱、原價、優惠價和庫存數量，並且條件是商品名稱必須是“北歐風雙人沙發”。</p>
</blockquote>
<h2 id="情境-2：價格比較"><a href="#情境-2：價格比較" class="headerlink" title="情境 2：價格比較"></a>情境 2：價格比較</h2><h3 id="客人：「請列出-5000-元以下的櫃子有哪些？」"><a href="#客人：「請列出-5000-元以下的櫃子有哪些？」" class="headerlink" title="客人：「請列出 5000 元以下的櫃子有哪些？」"></a>客人：「請列出 5000 元以下的櫃子有哪些？」</h3><p><font color=#0000FF> In [5]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;櫃子&#x27;</span> <span class="keyword">AND</span> price <span class="operator">&lt;</span> <span class="number">5000</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [5]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq2.png?alt=media&token=7a8f69c1-79cc-4744-8c3e-94de0721fe0f" alt="where and"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、原價、優惠價和庫存數量，並且條件是商品分類為“櫃子”且原價低於5000。</p>
</blockquote>
<h2 id="情境-3：庫存確認"><a href="#情境-3：庫存確認" class="headerlink" title="情境 3：庫存確認"></a>情境 3：庫存確認</h2><h3 id="客人：「日式雙人床架還有貨嗎？」"><a href="#客人：「日式雙人床架還有貨嗎？」" class="headerlink" title="客人：「日式雙人床架還有貨嗎？」"></a>客人：「日式雙人床架還有貨嗎？」</h3><p><font color=#0000FF> In [6]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;日式雙人床架&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [6]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq3.png?alt=media&token=a1074bad-6f29-4b10-ab0c-672169bc51bd" alt="where"></p>
<blockquote>
<p>這段查詢會從products表中選擇“日式雙人床架”的庫存數量。如圖所示，剩下6個。</p>
</blockquote>
<h2 id="邏輯運算-AND："><a href="#邏輯運算-AND：" class="headerlink" title="邏輯運算 AND："></a>邏輯運算 AND：</h2><h3 id="情境-4：預算內的商品"><a href="#情境-4：預算內的商品" class="headerlink" title="情境 4：預算內的商品"></a>情境 4：預算內的商品</h3><h4 id="客人：「想找-4-萬以下，而且有現貨的沙發」"><a href="#客人：「想找-4-萬以下，而且有現貨的沙發」" class="headerlink" title="客人：「想找 4 萬以下，而且有現貨的沙發」"></a>客人：「想找 4 萬以下，而且有現貨的沙發」</h4><p><font color=#0000FF> In [7]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;沙發&#x27;</span> <span class="keyword">AND</span> price <span class="operator">&lt;</span> <span class="number">40000</span> <span class="keyword">AND</span> stock <span class="operator">&gt;</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [7]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq4.png?alt=media&token=ecb72dfb-4872-4197-af8c-6428663c4444" alt="where and and "></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、原價、優惠價和庫存數量，並且條件是商品分類為“沙發”、原價低於40,000以及庫存數量大於0。</p>
</blockquote>
<h3 id="情境-5：特價且有貨"><a href="#情境-5：特價且有貨" class="headerlink" title="情境 5：特價且有貨"></a>情境 5：特價且有貨</h3><h4 id="客人：「沙發有哪些特價且現貨的品項？」"><a href="#客人：「沙發有哪些特價且現貨的品項？」" class="headerlink" title="客人：「沙發有哪些特價且現貨的品項？」"></a>客人：「沙發有哪些特價且現貨的品項？」</h4><p><font color=#0000FF> In [8]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;沙發&#x27;</span> <span class="keyword">AND</span> price <span class="operator">&gt;</span> discount_price <span class="keyword">AND</span> stock <span class="operator">&gt;</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [8]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq5.png?alt=media&token=4cd4560b-a2bd-437e-90f9-c31ee94b4bc5" alt="where and and "></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、原價、優惠價和庫存數量，並且條件是商品分類為“沙發”、原價大於優惠價（表示特價）以及庫存數量大於0。</p>
</blockquote>
<h2 id="邏輯運算-OR："><a href="#邏輯運算-OR：" class="headerlink" title="邏輯運算 OR："></a>邏輯運算 OR：</h2><h3 id="情境-6：多分類查詢"><a href="#情境-6：多分類查詢" class="headerlink" title="情境 6：多分類查詢"></a>情境 6：多分類查詢</h3><h4 id="客人：「我要找櫃子或桌子」"><a href="#客人：「我要找櫃子或桌子」" class="headerlink" title="客人：「我要找櫃子或桌子」"></a>客人：「我要找櫃子或桌子」</h4><p><font color=#0000FF> In [9]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;櫃子&#x27;</span> <span class="keyword">OR</span> category <span class="operator">=</span> <span class="string">&#x27;桌子&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [9]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq6.png?alt=media&token=844a66fa-1da7-4b52-a0a7-d15544827154" alt="where or"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、原價、優惠價和庫存數量，並且條件是商品分類為“櫃子”或“桌子”。這樣就能找到所有符合這些分類的商品。</p>
</blockquote>
<h3 id="情境-7：指定商品"><a href="#情境-7：指定商品" class="headerlink" title="情境 7：指定商品"></a>情境 7：指定商品</h3><h4 id="客人：「北歐風雙人沙發和貓抓皮L型沙發哪個還有貨？」"><a href="#客人：「北歐風雙人沙發和貓抓皮L型沙發哪個還有貨？」" class="headerlink" title="客人：「北歐風雙人沙發和貓抓皮L型沙發哪個還有貨？」"></a>客人：「北歐風雙人沙發和貓抓皮L型沙發哪個還有貨？」</h4><p><font color=#0000FF> In [10]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">IN</span> (<span class="string">&#x27;北歐風雙人沙發&#x27;</span>, <span class="string">&#x27;貓抓皮L型沙發&#x27;</span>) <span class="keyword">AND</span> stock <span class="operator">&gt;</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [10]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq7.png?alt=media&token=27062c29-0cab-48df-ab02-3679642e3000" alt="where namee in and"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱和庫存數量，條件是商品名稱是“北歐風雙人沙發”或“貓抓皮L型沙發”，並且庫存數量大於0。這樣就能從兩個商品中，選出還有庫存的商品。</p>
</blockquote>
<h2 id="IN-運算："><a href="#IN-運算：" class="headerlink" title="IN 運算："></a>IN 運算：</h2><h3 id="情境-8：多分類查詢"><a href="#情境-8：多分類查詢" class="headerlink" title="情境 8：多分類查詢"></a>情境 8：多分類查詢</h3><h4 id="客人：「客廳的家具有哪些？我要看沙發、櫃子跟桌子」"><a href="#客人：「客廳的家具有哪些？我要看沙發、櫃子跟桌子」" class="headerlink" title="客人：「客廳的家具有哪些？我要看沙發、櫃子跟桌子」"></a>客人：「客廳的家具有哪些？我要看沙發、櫃子跟桌子」</h4><p><font color=#0000FF> In [11]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, category, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="keyword">IN</span> (<span class="string">&#x27;沙發&#x27;</span>, <span class="string">&#x27;櫃子&#x27;</span>, <span class="string">&#x27;桌子&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [11]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq8.png?alt=media&token=8e7c483e-c531-408f-9dcb-50d95086c21b" alt="where in"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、分類、原價、優惠價和庫存數量，條件是商品分類為“沙發”、“櫃子”或“桌子”。這樣就能找到所有屬於這三種類別的產品。</p>
</blockquote>
<h2 id="情境-9：特定商品"><a href="#情境-9：特定商品" class="headerlink" title="情境 9：特定商品"></a>情境 9：特定商品</h2><h3 id="客人：「電腦辦公椅和餐椅四入組的價格是多少？」"><a href="#客人：「電腦辦公椅和餐椅四入組的價格是多少？」" class="headerlink" title="客人：「電腦辦公椅和餐椅四入組的價格是多少？」"></a>客人：「電腦辦公椅和餐椅四入組的價格是多少？」</h3><p><font color=#0000FF> In [12]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">IN</span> (<span class="string">&#x27;電腦辦公椅&#x27;</span>, <span class="string">&#x27;餐椅四入組&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [12]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq9.png?alt=media&token=4a409e6d-0a66-431e-b0df-0b7bb3a4c9a0" alt="where name in"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、原價和優惠價，條件是商品名稱是“電腦辦公椅”或“餐椅四入組”</p>
</blockquote>
<h2 id="BETWEEN："><a href="#BETWEEN：" class="headerlink" title="BETWEEN："></a>BETWEEN：</h2><h3 id="情境-10：價格區間"><a href="#情境-10：價格區間" class="headerlink" title="情境 10：價格區間"></a>情境 10：價格區間</h3><h4 id="客人：「想找-10000-到-20000-之間的商品有哪些？」"><a href="#客人：「想找-10000-到-20000-之間的商品有哪些？」" class="headerlink" title="客人：「想找 10000 到 20000 之間的商品有哪些？」"></a>客人：「想找 10000 到 20000 之間的商品有哪些？」</h4><p><font color=#0000FF>  In [13]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">BETWEEN</span> <span class="number">10000</span> <span class="keyword">AND</span> <span class="number">20000</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [13]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq10.png?alt=media&token=8e417fca-c3f1-415f-9b60-28a61cd8b8df" alt="where between and"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、原價、優惠價和庫存數量，條件是商品的價格在10,000到20,000之間。</p>
</blockquote>
<h3 id="情境-11：庫存區間"><a href="#情境-11：庫存區間" class="headerlink" title="情境 11：庫存區間"></a>情境 11：庫存區間</h3><h4 id="主管：「請列出庫存在-5-到-15-之間的商品」"><a href="#主管：「請列出庫存在-5-到-15-之間的商品」" class="headerlink" title="主管：「請列出庫存在 5 到 15 之間的商品」"></a>主管：「請列出庫存在 5 到 15 之間的商品」</h4><p><font color=#0000FF>  In [14]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, category, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> stock <span class="keyword">BETWEEN</span> <span class="number">5</span> <span class="keyword">AND</span> <span class="number">15</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [14]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq11.png?alt=media&token=ea97af73-0475-4491-9470-e45fe1ce0eeb" alt="where between and"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、分類、原價、優惠價和庫存數量，條件是商品的庫存數量在5到15之間。</p>
</blockquote>
<h2 id="NOT-IN："><a href="#NOT-IN：" class="headerlink" title="NOT IN："></a>NOT IN：</h2><h3 id="情境-12：排除商品"><a href="#情境-12：排除商品" class="headerlink" title="情境 12：排除商品"></a>情境 12：排除商品</h3><h4 id="主管：「列出除了沙發和床架以外的商品」"><a href="#主管：「列出除了沙發和床架以外的商品」" class="headerlink" title="主管：「列出除了沙發和床架以外的商品」"></a>主管：「列出除了沙發和床架以外的商品」</h4><p><font color=#0000FF>  In [15]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, category, price, discount_price, stock </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;沙發&#x27;</span>, <span class="string">&#x27;床架&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [15]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq12.png?alt=media&token=76b87bab-1983-4fe1-9899-9bca9e822d7b" alt="where not in"></p>
<blockquote>
<p>這段查詢會從products表中選擇商品名稱、分類、原價、優惠價和庫存數量，條件是商品的分類不屬於“沙發”或“床架”。</p>
</blockquote>
<h2 id="更新和刪除："><a href="#更新和刪除：" class="headerlink" title="更新和刪除："></a>更新和刪除：</h2><h3 id="情境-13：調整價格"><a href="#情境-13：調整價格" class="headerlink" title="情境 13：調整價格"></a>情境 13：調整價格</h3><h4 id="主管：「北歐風雙人沙發要調降-2000-元」"><a href="#主管：「北歐風雙人沙發要調降-2000-元」" class="headerlink" title="主管：「北歐風雙人沙發要調降 2000 元」"></a>主管：「北歐風雙人沙發要調降 2000 元」</h4><p><font color=#0000FF>  In [16]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> products </span><br><span class="line"><span class="keyword">SET</span> price <span class="operator">=</span> price <span class="operator">-</span> <span class="number">2000</span> </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;北歐風雙人沙發&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000>  Out [16]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq13.png?alt=media&token=7190057c-28f6-44d3-b685-8c38a86e63b7" alt="update set price where name"></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq13-table.png?alt=media&token=0d709478-d812-4b95-ae96-4fa4abc074f5" alt="updated table"></p>
<blockquote>
<p>這段查詢會更新products表中“北歐風雙人沙發”的價格，將其現有價格減去2,000元。<br>更新後查詢「北歐風雙人沙發」price 應如上圖所示。</p>
</blockquote>
<h2 id="情境-14：更新庫存"><a href="#情境-14：更新庫存" class="headerlink" title="情境 14：更新庫存"></a>情境 14：更新庫存</h2><h3 id="主管：「電腦辦公椅進了-5-張」"><a href="#主管：「電腦辦公椅進了-5-張」" class="headerlink" title="主管：「電腦辦公椅進了 5 張」"></a>主管：「電腦辦公椅進了 5 張」</h3><p><font color=#0000FF> In [17]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> products </span><br><span class="line"><span class="keyword">SET</span> stock <span class="operator">=</span> stock <span class="operator">+</span> <span class="number">5</span> </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;電腦辦公椅&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [17]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq13.png?alt=media&token=7190057c-28f6-44d3-b685-8c38a86e63b7" alt="update set stock where name"></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq14-table.png?alt=media&token=a259eff6-6bc7-46a5-8a34-c39b946b0b92" alt="update table"></p>
<blockquote>
<p>這段查詢會更新products表中“電腦辦公椅”的庫存數量，將其現有庫存增加5張。<br>更新後查詢「電腦辦公椅」stock 應如上圖所示。</p>
</blockquote>
<h3 id="情境-15：清除資料"><a href="#情境-15：清除資料" class="headerlink" title="情境 15：清除資料"></a>情境 15：清除資料</h3><h4 id="主管：「要清掉兒童床架和電競書桌的資料」"><a href="#主管：「要清掉兒童床架和電競書桌的資料」" class="headerlink" title="主管：「要清掉兒童床架和電競書桌的資料」"></a>主管：「要清掉兒童床架和電競書桌的資料」</h4><p><font color=#0000FF>In [18]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">IN</span> (<span class="string">&#x27;兒童床架&#x27;</span>, <span class="string">&#x27;電競書桌&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [18]: </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq15.png?alt=media&token=8f71e060-3dfb-4f92-b060-f7fdfa9755b3" alt="delete"></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E4%BD%9C%E6%A5%AD%EF%BC%9A%E5%AE%B6%E5%85%B7%E5%BA%97%E7%9A%84%E8%8F%9C%E9%9B%9E%E9%8A%B7%E5%94%AE%E5%A5%87%E9%81%87%E8%A8%98%2Fq15-table.png?alt=media&token=89285b10-ebb6-43c2-a416-fc85c9e759bd" alt="delete"></p>
<blockquote>
<p>這段查詢會從products表中刪除商品名稱為“兒童床架”和“電競書桌”的所有資料。<br>更新後的資料庫應如上圖所示。</p>
</blockquote>
<h2 id="回顧：-本次練習常用語法"><a href="#回顧：-本次練習常用語法" class="headerlink" title="回顧： 本次練習常用語法"></a>回顧： 本次練習常用語法</h2><p><font color=#FF6600>SELECT</font> column_name<br><font color=#FF6600>FROM</font> table_name</p>
<blockquote>
<blockquote>
<p>SELECT與FROM 敘述是從指定的資料表中選擇欄位的查詢語法，查詢結果依據其存在資料表中的順序所呈現。</p>
</blockquote>
</blockquote>
<p><font color=#FF6600>WHERE</font> condition</p>
<blockquote>
<blockquote>
<p>WHERE 敘述能以「條件」作為篩選觀測值的依據。</p>
</blockquote>
</blockquote>
<p>如果沒有問題的話，那我們就可以前往下一章節囉。d(d＇∀＇)</p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL小節練習：晴天咖啡廳</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/21/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3/</url>
    <content><![CDATA[<h2 id="資料載入"><a href="#資料載入" class="headerlink" title="資料載入"></a>資料載入</h2><p><a href="post-sql.com">線上資料庫操作網站 PG-SQL:Temporary Postgres Database.</a></p>
<p>將資料倒入 pg-sql</p>
<p><font color=#0000FF> ln [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> products (</span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">100</span>),         <span class="comment">-- 商品名稱</span></span><br><span class="line">    price <span class="type">INTEGER</span>,            <span class="comment">-- 原價</span></span><br><span class="line">    discount_price <span class="type">INTEGER</span>,    <span class="comment">-- 優惠價</span></span><br><span class="line">    stock <span class="type">INTEGER</span>,            <span class="comment">-- 庫存數量</span></span><br><span class="line">    category <span class="type">VARCHAR</span>(<span class="number">50</span>),      <span class="comment">-- 商品分類</span></span><br><span class="line">    status <span class="type">VARCHAR</span>(<span class="number">20</span>)         <span class="comment">-- 商品狀態</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> products (name, price, discount_price, stock, category, status) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;精品手沖咖啡&#x27;</span>, <span class="number">180</span>, <span class="number">160</span>, <span class="number">50</span>, <span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;美式咖啡&#x27;</span>, <span class="number">120</span>, <span class="number">120</span>, <span class="number">100</span>, <span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;摩卡咖啡&#x27;</span>, <span class="number">150</span>, <span class="number">150</span>, <span class="number">80</span>, <span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;特調拿鐵&#x27;</span>, <span class="number">160</span>, <span class="number">140</span>, <span class="number">60</span>, <span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;伯爵紅茶&#x27;</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">70</span>, <span class="string">&#x27;茶飲&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;玫瑰花茶&#x27;</span>, <span class="number">120</span>, <span class="number">120</span>, <span class="number">30</span>, <span class="string">&#x27;茶飲&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;柳橙汁&#x27;</span>, <span class="number">90</span>, <span class="number">80</span>, <span class="number">40</span>, <span class="string">&#x27;果汁&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;水果茶&#x27;</span>, <span class="number">130</span>, <span class="number">110</span>, <span class="number">45</span>, <span class="string">&#x27;茶飲&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;提拉米蘇&#x27;</span>, <span class="number">160</span>, <span class="number">160</span>, <span class="number">15</span>, <span class="string">&#x27;甜點&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;草莓乳酪蛋糕&#x27;</span>, <span class="number">180</span>, <span class="number">150</span>, <span class="number">8</span>, <span class="string">&#x27;甜點&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;巧克力布朗尼&#x27;</span>, <span class="number">150</span>, <span class="number">150</span>, <span class="number">0</span>, <span class="string">&#x27;甜點&#x27;</span>, <span class="string">&#x27;inactive&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;特選咖啡豆&#x27;</span>, <span class="number">500</span>, <span class="number">450</span>, <span class="number">20</span>, <span class="string">&#x27;咖啡豆&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;摩卡咖啡豆&#x27;</span>, <span class="number">480</span>, <span class="number">480</span>, <span class="number">15</span>, <span class="string">&#x27;咖啡豆&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;濾掛式咖啡包&#x27;</span>, <span class="number">25</span>, <span class="number">20</span>, <span class="number">200</span>, <span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;active&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;手沖濾紙&#x27;</span>, <span class="number">180</span>, <span class="number">180</span>, <span class="number">30</span>, <span class="string">&#x27;器材&#x27;</span>, <span class="string">&#x27;active&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#0000FF>  In [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [2]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2F1.png?alt=media&token=2c1b49c7-ed1a-4583-904f-4d4bfb813c1e" alt="coffeeShopProduct"></p>
<blockquote>
<p>創建了一個名為 products 的資料表，該表用來存儲商品的詳細信息。</p>
<blockquote>
<p><strong>name：</strong>商品名稱，類型為 VARCHAR(100)，用來存儲商品的名稱。<br><strong>price：</strong>原價，類型為 INTEGER，用來存儲商品的原始價格。<br><strong>discount_price：</strong>優惠價，類型為 INTEGER，用來存儲商品的折扣後價格。<br><strong>stock：</strong>庫存數量，類型為 INTEGER，用來存儲商品的庫存數量。<br><strong>category：</strong>商品分類，類型為 VARCHAR(50)，用來存儲商品的分類，例如「咖啡」、「茶飲」等。<br><strong>status：</strong>商品狀態，類型為 VARCHAR(20)，用來存儲商品的狀態，例如「active」（可售）或「inactive」（不可售）。</p>
</blockquote>
</blockquote>
<h2 id="基礎查詢篇："><a href="#基礎查詢篇：" class="headerlink" title="基礎查詢篇："></a>基礎查詢篇：</h2><h3 id="情境-1：缺貨確認"><a href="#情境-1：缺貨確認" class="headerlink" title="情境 1：缺貨確認"></a>情境 1：缺貨確認</h3><p>顧客：「草莓乳酪蛋糕還有嗎？」<br>小杰想查：要確認草莓乳酪蛋糕的庫存</p>
<p><font color=#0000FF>  In [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> stock <span class="keyword">FROM</span> products <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;草莓乳酪蛋糕&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [3]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq1.png?alt=media&token=e3852780-01f6-43c4-b1f7-57345b7c14ee" alt="q1"></p>
<blockquote>
<p>返回「草莓乳酪蛋糕」的庫存數量。根據最初倒入的數據，「草莓乳酪蛋糕」的庫存數量應該是8。</p>
</blockquote>
<h2 id="情境-2：優惠查詢"><a href="#情境-2：優惠查詢" class="headerlink" title="情境 2：優惠查詢"></a>情境 2：優惠查詢</h2><p>顧客：「有什麼特價的咖啡嗎？」<br>小杰想查：列出所有有特價（優惠價低於原價）的咖啡類商品</p>
<p><font color=#0000FF>  In [4]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;咖啡&#x27;</span> <span class="keyword">AND</span> discount_price <span class="operator">&lt;</span> price;</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [4]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq2.png?alt=media&token=cc0d3abf-6d9f-4015-b607-c8069060ae85" alt="q2"></p>
<blockquote>
<p>從 products 表中選出所有分類為「咖啡」且優惠價低於原價的商品。<br>這樣就可以找到目前正在促銷的咖啡類商品。</p>
</blockquote>
<h2 id="情境-3：價格區間"><a href="#情境-3：價格區間" class="headerlink" title="情境 3：價格區間"></a>情境 3：價格區間</h2><p>顧客：「有沒有100元以下的飲品？」<br>小杰想查：找出所有100元以下的飲品</p>
<p><font color=#0000FF>  In [5]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="keyword">IN</span> (<span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;茶飲&#x27;</span>, <span class="string">&#x27;果汁&#x27;</span>) <span class="keyword">AND</span> discount_price <span class="operator">&lt;</span> <span class="number">100</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [5]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq3.png?alt=media&token=dd7ebec2-8fc0-4cdf-9c6f-a3e71544d915" alt="q3"></p>
<blockquote>
<p>選擇所有分類為「咖啡」、「茶飲」或「果汁」且優惠價低於100元的商品。<br>這樣就可以找到所有符合條件的飲品。</p>
</blockquote>
<h2 id="AND條件篇"><a href="#AND條件篇" class="headerlink" title="AND條件篇"></a>AND條件篇</h2><h3 id="情境-4：庫存與價格"><a href="#情境-4：庫存與價格" class="headerlink" title="情境 4：庫存與價格"></a>情境 4：庫存與價格</h3><p>顧客：「有沒有特價，而且還有貨的甜點？」<br>小杰想查：要同時符合有特價（優惠價&lt;原價）且還有庫存的甜點</p>
<p><font color=#0000FF>  In [6]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;甜點&#x27;</span> <span class="keyword">AND</span> discount_price <span class="operator">&lt;</span> price <span class="keyword">AND</span> stock <span class="operator">&gt;</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [6]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq4.png?alt=media&token=5bab43d9-c1fa-40a7-86cf-0c880a22663a" alt="q4"></p>
<blockquote>
<p>從 products 表中選出所有分類為「甜點」、優惠價低於原價且庫存量大於0的商品。<br>這樣可以找出目前有特價並且還有庫存的甜點。</p>
</blockquote>
<h2 id="情境-5：價格與分類"><a href="#情境-5：價格與分類" class="headerlink" title="情境 5：價格與分類"></a>情境 5：價格與分類</h2><p>店長：「幫我查一下所有200元以上，而且還有庫存的咖啡類商品」<br>小杰想查：列出符合價格和分類條件的商品</p>
<p><font color=#0000FF>  In [7]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;咖啡&#x27;</span> <span class="keyword">AND</span> price <span class="operator">&gt;</span> <span class="number">200</span> <span class="keyword">AND</span> stock <span class="operator">&gt;</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [7]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq5.png?alt=media&token=42bdbb1a-84e6-4efd-af7a-3c431356417c" alt="q5"></p>
<blockquote>
<p>從 products 表中選出所有分類為「咖啡」、原價超過200元且庫存量大於0的商品。</p>
</blockquote>
<h2 id="OR條件篇"><a href="#OR條件篇" class="headerlink" title="OR條件篇"></a>OR條件篇</h2><h3 id="情境-6：多分類查詢"><a href="#情境-6：多分類查詢" class="headerlink" title="情境 6：多分類查詢"></a>情境 6：多分類查詢</h3><p>顧客：「我想看看你們的咖啡豆和濾掛包」<br>小杰想查：列出咖啡豆類和濾掛式咖啡的商品</p>
<p><font color=#0000FF>  In [8]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="operator">=</span> <span class="string">&#x27;咖啡豆&#x27;</span> <span class="keyword">OR</span> name <span class="operator">=</span> <span class="string">&#x27;濾掛式咖啡包&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [8]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq6.png?alt=media&token=e762f084-686d-4551-8165-45dd5e868014" alt="q6"></p>
<blockquote>
<p>從 products 表中選出所有分類為「咖啡豆」的商品以及名稱為「濾掛式咖啡包」的商品。</p>
</blockquote>
<h2 id="BETWEEN篇"><a href="#BETWEEN篇" class="headerlink" title="BETWEEN篇"></a>BETWEEN篇</h2><h3 id="情境-7：價格區間"><a href="#情境-7：價格區間" class="headerlink" title="情境 7：價格區間"></a>情境 7：價格區間</h3><p>顧客：「想找100到200元之間的飲品」<br>小杰想查：列出這個價格區間的飲品</p>
<p><font color=#0000FF>  In [9]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> category <span class="keyword">IN</span> (<span class="string">&#x27;咖啡&#x27;</span>, <span class="string">&#x27;茶飲&#x27;</span>, <span class="string">&#x27;果汁&#x27;</span>) <span class="keyword">AND</span> discount_price <span class="keyword">BETWEEN</span> <span class="number">100</span> <span class="keyword">AND</span> <span class="number">200</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [9]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq7.png?alt=media&token=d6133a03-1f4b-4916-99aa-6983a7d59d72" alt="q7"></p>
<blockquote>
<p>從 products 表中選出所有分類為「咖啡」、「茶飲」或「果汁」，且優惠價在100到200元之間的商品。</p>
</blockquote>
<h2 id="更新資料篇"><a href="#更新資料篇" class="headerlink" title="更新資料篇"></a>更新資料篇</h2><h3 id="情境-8：調整價格"><a href="#情境-8：調整價格" class="headerlink" title="情境 8：調整價格"></a>情境 8：調整價格</h3><p>店長：「美式咖啡要降價10元」<br>小杰想查：如何更新美式咖啡的優惠價</p>
<p><font color=#0000FF>  In [10]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> products </span><br><span class="line"><span class="keyword">SET</span> discount_price <span class="operator">=</span> discount_price <span class="operator">-</span> <span class="number">10</span> </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;美式咖啡&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [10]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq8-result.png?alt=media&token=9a462bdb-86de-4f74-8b0f-018bb078e4f6" alt="q8"></p>
<p><font color=#0000FF>  In [11]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, price, discount_price</span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;特調拿鐵&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [11]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq8-.png?alt=media&token=78170701-c53f-4412-961c-f3f9677433e4" alt="q8Table"></p>
<blockquote>
<p>將 products 表中名稱為「美式咖啡」的商品的優惠價降低10元。</p>
</blockquote>
<h3 id="情境-9：更新庫存"><a href="#情境-9：更新庫存" class="headerlink" title="情境 9：更新庫存"></a>情境 9：更新庫存</h3><p>店長：「特選咖啡豆進了10包」<br>小杰想查：如何增加特選咖啡豆的庫存</p>
<p><font color=#0000FF>  In [12]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> products </span><br><span class="line"><span class="keyword">SET</span> discount_price <span class="operator">=</span> discount_price <span class="operator">-</span> <span class="number">10</span> </span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;美式咖啡&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [12]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq8-result.png?alt=media&token=9a462bdb-86de-4f74-8b0f-018bb078e4f6" alt="q9"></p>
<p><font color=#0000FF>  In [13]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, stock</span><br><span class="line"><span class="keyword">FROM</span> products</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;特選咖啡豆&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [13]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%E5%B0%8F%E7%AF%80%E7%B7%B4%E7%BF%92%EF%BC%9A%E3%80%8C%E6%99%B4%E5%A4%A9%E5%92%96%E5%95%A1%E5%BB%B3%E3%80%8D%2Fq9-.png?alt=media&token=7e39fd68-fbca-44d9-b3f7-14aa799773b5" alt="q9Table"></p>
<blockquote>
<p>將 products 表中名稱為「特選咖啡豆」的商品的庫存增加10包。</p>
</blockquote>
<p><font color=#c0c0c0> 吹著前奏望著天空 我想起花瓣試著掉落 </font></p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>五件討厭的事</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/04/%E4%BA%94%E4%BB%B6%E8%A8%8E%E5%8E%AD%E7%9A%84%E4%BA%8B/</url>
    <content><![CDATA[<p>討厭說謊<br>但實話總讓人傷心<br>不掉眼淚就是堅強的話<br>為何我站不起來<br>⠀<br>討厭自己那麼努力<br>差點能成為一個擅長等待的人<br>然而火燒太快<br>雨總是來不及下<br>⠀<br>討厭你那麼愛錢<br>卻一點也不願意愛我<br>我如此富裕<br>感情餘額總是赤字<br>⠀<br>討厭心酸的感覺<br>明明大家都說酸鹼可以中和<br>為什麼鹼性的眼淚<br>沒讓我復原<br>⠀<br>討厭大部分美好的話語後面<br>都會被加上「但是」<br>比如：我愛妳但是<br>而不是：但是我愛妳 </p>
<h6 id="詩文｜靡靡-Tiny《五件討厭的事》"><a href="#詩文｜靡靡-Tiny《五件討厭的事》" class="headerlink" title="詩文｜靡靡 Tiny《五件討厭的事》"></a>詩文｜靡靡 Tiny《五件討厭的事》</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>你一定是在設計系畢業</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/16/%E4%BD%A0%E4%B8%80%E5%AE%9A%E6%98%AF%E5%9C%A8%E8%A8%AD%E8%A8%88%E7%B3%BB%E7%95%A2%E6%A5%AD/</url>
    <content><![CDATA[<p>你一定是在設計系畢業</p>
<p>才能如此從容不迫地</p>
<p>設計相遇</p>
<p>設計對眼</p>
<p>設計漏拍的心跳</p>
<p>設計呼吸的躲藏</p>
<p>以及世界的停頓</p>
<h6 id="詩文｜劉倩妏〈你一定是在設計系畢業〉"><a href="#詩文｜劉倩妏〈你一定是在設計系畢業〉" class="headerlink" title="詩文｜劉倩妏〈你一定是在設計系畢業〉"></a>詩文｜劉倩妏〈你一定是在設計系畢業〉</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>你也和我們一樣，對吧?</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/05/%E4%BD%A0%E4%B9%9F%E5%92%8C%E6%88%91%E5%80%91%E4%B8%80%E6%A8%A3%EF%BC%8C%E5%B0%8D%E5%90%A7/</url>
    <content><![CDATA[<img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/Blog%20Materials%2F26cdf76055d195bc494b09f506fcc965.jpg?alt=media&token=f36870e6-a886-4927-85a8-a0e2cb1683de" alt="信徒">


<h3 id="「……Will-you-walk-with-us-」"><a href="#「……Will-you-walk-with-us-」" class="headerlink" title="「……Will you walk with us?」"></a>「……Will you walk with us?」</h3><br>
<br>
© 2024 EldenRing All Rights Reserved.

<style>
    img{
        filter: grayscale(100%);
    }

</style>
]]></content>
      <tags>
        <tag>Quotes</tag>
      </tags>
  </entry>
  <entry>
    <title>你說, 後端資料庫體驗營到底有什麼? 壹</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/25/%E4%BD%A0%E8%AA%AA-%E5%BE%8C%E7%AB%AF%E8%B3%87%E6%96%99%E5%BA%AB%E9%AB%94%E9%A9%97%E7%87%9F%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E9%BA%BC%20%E5%A3%B9/</url>
    <content><![CDATA[<p>序</p>
<p>有一間廠商即將建置「健身教練線上直播課平台」<br>其優點是：</p>
<ul>
<li><strong>小班制健身直播課制：</strong>教練會在平台開課，學生前往教練開設的課程頁面報名，課程時間到了後，就可點擊課程直播室進行上課</li>
<li>堂數售價：每位健身教練的收費都一致，一堂 50 分鐘<strong>小班制健身直播課</strong>都是 200 元</li>
</ul>
<p><strong>堂數組合包方案</strong></p>
<ul>
<li>7 堂組合包方案：<ul>
<li>價格：1,400 元</li>
</ul>
</li>
<li>14 堂方案：<ul>
<li>價格：2,520 元</li>
</ul>
</li>
<li>21 堂方案：<ul>
<li>價格：4,800 元  Σ(°Д°;</li>
</ul>
</li>
</ul>
<h3 id="請先建立-users-資料表"><a href="#請先建立-users-資料表" class="headerlink" title="請先建立 users 資料表"></a>請先建立 users 資料表</h3><p><font color=#0000FF> ln [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;USER&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()),</span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;email&quot; <span class="type">varchar</span>(<span class="number">320</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;role&quot; <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, <span class="comment">-- 角色，分別有 &quot;USER&quot;、&quot;COACH&quot;</span></span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  &quot;updated_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [1]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F1.png?alt=media&token=e777a077-1daa-46de-b002-9787280a2ee6" alt="result"></p>
<p>id</p>
<blockquote>
<p><strong>資料型別：</strong> <code>uuid</code><br><strong>功能：</strong>作為每個使用者的唯一識別碼（主鍵）。<br><strong>特性：</strong></p>
<blockquote>
<p><code>PRIMARY KEY</code>：此欄位是主鍵，保證每筆記錄的唯一性。<br><code>NOT NULL</code>：<br><code>DEFAULT (gen_random_uuid())</code>：自動生成一個隨機的 UUID 作為預設值，無需手動指定。</p>
</blockquote>
</blockquote>
<p>name</p>
<blockquote>
<p><strong>資料型別：</strong> <code>varchar(50)</code><br><strong>功能：</strong>儲存使用者的名稱。<br><strong>特性：</strong></p>
<blockquote>
<p><code>NOT NULL</code>：此欄位不得為空。<br>長度限制：最多 50 個字元。</p>
</blockquote>
</blockquote>
<p>email</p>
<blockquote>
<p><strong>資料型別：</strong> <code>varchar(320)</code><br><strong>功能：</strong>儲存使用者的電子郵件地址。<br><strong>特性：</strong></p>
<blockquote>
<p><code>UNIQUE</code>：此欄位的值需唯一，不能有重複的電子郵件。<br><code>NOT NULL</code>：此欄位不得為空。<br><strong>長度限制：</strong>最多 320 個字元（符合電子郵件標準）。</p>
</blockquote>
</blockquote>
<p>role</p>
<blockquote>
<p><strong>資料型別：</strong> <code>varchar(20)</code><br><strong>功能：</strong>儲存使用者的角色類型。<br><strong>特性：</strong></p>
<blockquote>
<p>角色值：可選值為 “USER”（普通使用者）或 “COACH”（教練）<br><code>NOT NULL</code>：此欄位不得為空。</p>
</blockquote>
</blockquote>
<p>created_at</p>
<blockquote>
<p><strong>資料型別：</strong> <code>timestamp</code><br><strong>功能：</strong>記錄使用者的建立時間。<br><strong>特性：</strong></p>
<blockquote>
<p><code>NOT NULL</code>：此欄位不得為空。<br><code>DEFAULT (CURRENT_TIMESTAMP)</code>：自動填入當前的時間戳，表示記錄建立的時間。</p>
</blockquote>
</blockquote>
<p>updated_at</p>
<blockquote>
<p><strong>資料型別：</strong> <code>timestamp</code><br><strong>功能：</strong>記錄使用者的最後更新時間。<br><strong>特性：</strong></p>
<blockquote>
<p><code>NOT NULL</code>：此欄位不得為空。<br><code>DEFAULT (CURRENT_TIMESTAMP)</code>：自動填入當前的時間戳，表示記錄最後更新的時間。</p>
</blockquote>
</blockquote>
<h3 id="功能與用途"><a href="#功能與用途" class="headerlink" title="功能與用途"></a>功能與用途</h3><h4 id="此表適用於管理系統中的使用者資料，提供以下功能："><a href="#此表適用於管理系統中的使用者資料，提供以下功能：" class="headerlink" title="此表適用於管理系統中的使用者資料，提供以下功能："></a>此表適用於管理系統中的使用者資料，提供以下功能：</h4><ol>
<li>唯一的 id 用於識別每個使用者。</li>
<li>儲存使用者的基本資訊（名稱與電子郵件）。</li>
<li>區分使用者角色（普通使用者或教練）。</li>
<li>自動記錄建立與更新時間，便於追蹤資料變更。</li>
</ol>
<h2 id="用戶資料，資料表為-USER"><a href="#用戶資料，資料表為-USER" class="headerlink" title="用戶資料，資料表為 USER"></a>用戶資料，資料表為 USER</h2><h3 id="新增六筆用戶資料，資料如下："><a href="#新增六筆用戶資料，資料如下：" class="headerlink" title="新增六筆用戶資料，資料如下："></a><u>新增</u>六筆用戶資料，資料如下：</h3><ul>
<li>用戶名稱為 李燕容，Email 為 <a href="mailto:&#108;&#101;&#101;&#x32;&#48;&#48;&#48;&#64;&#x68;&#101;&#120;&#x73;&#x63;&#104;&#111;&#x6f;&#108;&#x74;&#x65;&#x73;&#x74;&#46;&#x69;&#x6f;">&#108;&#101;&#101;&#x32;&#48;&#48;&#48;&#64;&#x68;&#101;&#120;&#x73;&#x63;&#104;&#111;&#x6f;&#108;&#x74;&#x65;&#x73;&#x74;&#46;&#x69;&#x6f;</a>，Role 為 USER</li>
<li>用戶名稱為 王小明，Email 為 <a href="mailto:&#x77;&#x58;&#x6c;&#x54;&#x71;&#x40;&#104;&#101;&#x78;&#x73;&#x63;&#x68;&#x6f;&#x6f;&#x6c;&#x74;&#x65;&#115;&#x74;&#x2e;&#105;&#111;">&#x77;&#x58;&#x6c;&#x54;&#x71;&#x40;&#104;&#101;&#x78;&#x73;&#x63;&#x68;&#x6f;&#x6f;&#x6c;&#x74;&#x65;&#115;&#x74;&#x2e;&#105;&#111;</a>，Role 為 USER</li>
<li>用戶名稱為 肌肉棒子，Email 為 <a href="mailto:&#109;&#x75;&#115;&#99;&#108;&#x65;&#64;&#104;&#x65;&#x78;&#x73;&#99;&#x68;&#111;&#111;&#108;&#x74;&#101;&#x73;&#116;&#x2e;&#x69;&#111;">&#109;&#x75;&#115;&#99;&#108;&#x65;&#64;&#104;&#x65;&#x78;&#x73;&#99;&#x68;&#111;&#111;&#108;&#x74;&#101;&#x73;&#116;&#x2e;&#x69;&#111;</a>，Role 為 USER</li>
<li>用戶名稱為 好野人，Email 為 <a href="mailto:&#x72;&#x69;&#99;&#x68;&#x6d;&#97;&#110;&#x40;&#104;&#x65;&#x78;&#x73;&#x63;&#104;&#111;&#111;&#108;&#116;&#101;&#x73;&#116;&#x2e;&#x69;&#111;">&#x72;&#x69;&#99;&#x68;&#x6d;&#97;&#110;&#x40;&#104;&#x65;&#x78;&#x73;&#x63;&#104;&#111;&#111;&#108;&#116;&#101;&#x73;&#116;&#x2e;&#x69;&#111;</a>，Role 為 USER</li>
<li>用戶名稱為 Q太郎，Email 為 <a href="mailto:&#115;&#116;&#x61;&#x72;&#112;&#x6c;&#97;&#116;&#x69;&#x6e;&#117;&#x6d;&#64;&#x68;&#x65;&#x78;&#115;&#x63;&#x68;&#111;&#x6f;&#x6c;&#x74;&#x65;&#x73;&#116;&#x2e;&#105;&#x6f;">&#115;&#116;&#x61;&#x72;&#112;&#x6c;&#97;&#116;&#x69;&#x6e;&#117;&#x6d;&#64;&#x68;&#x65;&#x78;&#115;&#x63;&#x68;&#111;&#x6f;&#x6c;&#x74;&#x65;&#x73;&#116;&#x2e;&#105;&#x6f;</a>，Role 為 USER</li>
<li>用戶名稱為 透明人，Email 為 <a href="mailto:&#111;&#x70;&#x61;&#99;&#x69;&#116;&#x79;&#48;&#64;&#x68;&#x65;&#x78;&#115;&#x63;&#104;&#111;&#x6f;&#x6c;&#x74;&#101;&#x73;&#116;&#x2e;&#105;&#x6f;">&#111;&#x70;&#x61;&#99;&#x69;&#116;&#x79;&#48;&#64;&#x68;&#x65;&#x78;&#115;&#x63;&#104;&#111;&#x6f;&#x6c;&#x74;&#101;&#x73;&#116;&#x2e;&#105;&#x6f;</a>，Role 為 USER</li>
</ul>
<p>使用 INSERT INTO 語句將資料插入到 USER 資料表中：</p>
<p><font color=#0000FF> ln [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;USER&quot; (&quot;name&quot;, &quot;email&quot;, &quot;role&quot;)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">&#x27;李燕容&#x27;</span>, <span class="string">&#x27;lee2000@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;王小明&#x27;</span>, <span class="string">&#x27;wXlTq@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;肌肉棒子&#x27;</span>, <span class="string">&#x27;muscle@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;好野人&#x27;</span>, <span class="string">&#x27;richman@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;Q太郎&#x27;</span>, <span class="string">&#x27;starplatinum@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;透明人&#x27;</span>, <span class="string">&#x27;opacity0@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [2]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F2.png?alt=media&token=77d928a9-d52f-4b4f-89a8-5787c529de3e" alt="result1"></p>
<p>使用以下語句查看資料載入後的樣子：<br><font color=#0000FF> ln [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> &quot;USER&quot; ;</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [3]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F2-checkTable.png?alt=media&token=75baa3ba-8e72-458a-92b7-a89e4bc10f21" alt="result1Table"></p>
<blockquote>
<p><strong>欄位選擇：</strong></p>
<blockquote>
<p>只插入 name（用戶名稱）、email（電子郵件）和 role（角色）。<br>id 會自動生成，因為設置了 <code>DEFAULT (gen_random_uuid())</code>。<br>created_at 和 updated_at 因 <code> DEFAULT (CURRENT_TIMESTAMP)</code> 會自動填入當前時間。</p>
</blockquote>
</blockquote>
<h3 id="用-Email-找到-李燕容、肌肉棒子、Q太郎，如果他的-Role-為-USER-將他的-Role-修改為-COACH"><a href="#用-Email-找到-李燕容、肌肉棒子、Q太郎，如果他的-Role-為-USER-將他的-Role-修改為-COACH" class="headerlink" title="用 Email 找到 李燕容、肌肉棒子、Q太郎，如果他的 Role 為 USER 將他的 Role 修改為 COACH"></a>用 Email 找到 李燕容、肌肉棒子、Q太郎，如果他的 Role 為 USER 將他的 Role <u>修改</u>為 COACH</h3><p>修改指定用戶的 SQL 語法，根據 email 找到符合條件的用戶，並將 role 從 USER 更新為 COACH：</p>
<p><font color=#0000FF> ln [4]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> &quot;USER&quot;</span><br><span class="line"><span class="keyword">SET</span> &quot;role&quot; <span class="operator">=</span> <span class="string">&#x27;COACH&#x27;</span></span><br><span class="line"><span class="keyword">WHERE</span> &quot;email&quot; <span class="keyword">IN</span> (<span class="string">&#x27;lee2000@hexschooltest.io&#x27;</span>, <span class="string">&#x27;muscle@hexschooltest.io&#x27;</span>, <span class="string">&#x27;starplatinum@hexschooltest.io&#x27;</span>)</span><br><span class="line">  <span class="keyword">AND</span> &quot;role&quot; <span class="operator">=</span> <span class="string">&#x27;USER&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [4]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F3.png?alt=media&token=b6254611-6749-49c0-a9bc-1b689a5c2ce9" alt="result2"></p>
<blockquote>
<p><code>UPDATE "USER"</code>：</p>
<blockquote>
<p>指定要修改的資料表為 USER。</p>
</blockquote>
</blockquote>
<blockquote>
<p><code>SET "role" = 'COACH'</code>：</p>
<blockquote>
<p>將 role 欄位的值更新為 ‘COACH’。</p>
</blockquote>
</blockquote>
<blockquote>
<p><code>WHERE </code>條件：</p>
<blockquote>
<p>email 條件：只更新 email 為 <a href="mailto:&#108;&#101;&#101;&#50;&#x30;&#48;&#48;&#64;&#104;&#x65;&#x78;&#x73;&#x63;&#x68;&#111;&#x6f;&#108;&#116;&#101;&#115;&#116;&#x2e;&#x69;&#111;">&#108;&#101;&#101;&#50;&#x30;&#48;&#48;&#64;&#104;&#x65;&#x78;&#x73;&#x63;&#x68;&#111;&#x6f;&#108;&#116;&#101;&#115;&#116;&#x2e;&#x69;&#111;</a>、<a href="mailto:&#x6d;&#x75;&#x73;&#x63;&#108;&#101;&#x40;&#104;&#x65;&#x78;&#x73;&#99;&#x68;&#x6f;&#x6f;&#x6c;&#x74;&#101;&#115;&#x74;&#46;&#105;&#x6f;">&#x6d;&#x75;&#x73;&#x63;&#108;&#101;&#x40;&#104;&#x65;&#x78;&#x73;&#99;&#x68;&#x6f;&#x6f;&#x6c;&#x74;&#101;&#115;&#x74;&#46;&#105;&#x6f;</a> 和 <a href="mailto:&#x73;&#116;&#97;&#x72;&#x70;&#108;&#x61;&#x74;&#x69;&#x6e;&#117;&#x6d;&#64;&#104;&#x65;&#x78;&#x73;&#x63;&#x68;&#111;&#x6f;&#x6c;&#116;&#x65;&#115;&#x74;&#x2e;&#105;&#111;">&#x73;&#116;&#97;&#x72;&#x70;&#108;&#x61;&#x74;&#x69;&#x6e;&#117;&#x6d;&#64;&#104;&#x65;&#x78;&#x73;&#x63;&#x68;&#111;&#x6f;&#x6c;&#116;&#x65;&#115;&#x74;&#x2e;&#105;&#111;</a> 的用戶。<br>role &#x3D; ‘USER’ 條件：僅在 role 為 ‘USER’ 的情況下進行更新，避免不必要的修改。</p>
</blockquote>
</blockquote>
<blockquote>
<p><code>IN</code> 關鍵字：</p>
<blockquote>
<p>用於匹配多個 email 值，簡化了多個 OR 條件的寫法。</p>
</blockquote>
</blockquote>
<p><strong><font color=#FF0000> 注意事項 </font></strong></p>
<blockquote>
<p><strong>條件檢查：</strong></p>
<blockquote>
<p>如果用戶的 role 已經是 COACH，這條語句不會影響該資料（因為加了 <code>AND "role" = 'USER'</code> 的條件）。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>安全性：</strong></p>
<blockquote>
<p>確保 WHERE 條件正確，避免更新到不應該修改的資料。</p>
</blockquote>
</blockquote>
<p>檢查更新結果<br>可以使用以下語句來確認更新是否成功：</p>
<p><font color=#0000FF> ln [5]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> &quot;name&quot;, &quot;email&quot;, &quot;role&quot;</span><br><span class="line"><span class="keyword">FROM</span> &quot;USER&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;email&quot; <span class="keyword">IN</span> (<span class="string">&#x27;lee2000@hexschooltest.io&#x27;</span>, <span class="string">&#x27;muscle@hexschooltest.io&#x27;</span>, <span class="string">&#x27;starplatinum@hexschooltest.io&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [5]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F3-checkTable.png?alt=media&token=916b20a2-693e-4349-b49f-c8cd3869d61f" alt="result2Table"></p>
<h3 id="刪除-USER-資料表中，用-Email-找到-透明人，並刪除該筆資料"><a href="#刪除-USER-資料表中，用-Email-找到-透明人，並刪除該筆資料" class="headerlink" title="刪除 USER 資料表中，用 Email 找到 透明人，並刪除該筆資料"></a><u>刪除</u> USER 資料表中，用 Email 找到 透明人，並刪除該筆資料</h3><p>刪除 USER 資料表中 透明人 資料的 SQL 語法，根據 email 找到並刪除該筆資料：</p>
<p><font color=#0000FF> ln [6]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> &quot;USER&quot;</span><br><span class="line"><span class="keyword">WHERE</span> &quot;email&quot; <span class="operator">=</span> <span class="string">&#x27;opacity0@hexschooltest.io&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [6]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F4.png?alt=media&token=b70bdad0-853b-4dd2-acf8-346fc208f1bd" alt="result3"></p>
<blockquote>
<p><strong><code> DELETE FROM "USER"</code></strong>:</p>
<blockquote>
<p>指定要刪除資料的資料表為 USER。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong><code>WHERE "email" = '<a href="mailto:&#x6f;&#112;&#x61;&#x63;&#x69;&#116;&#x79;&#x30;&#64;&#x68;&#x65;&#x78;&#x73;&#x63;&#x68;&#x6f;&#111;&#x6c;&#116;&#101;&#x73;&#x74;&#x2e;&#105;&#111;">&#x6f;&#112;&#x61;&#x63;&#x69;&#116;&#x79;&#x30;&#64;&#x68;&#x65;&#x78;&#x73;&#x63;&#x68;&#x6f;&#111;&#x6c;&#116;&#101;&#x73;&#x74;&#x2e;&#105;&#111;</a>'</code></strong>:</p>
<blockquote>
<p>使用 WHERE 條件篩選出 email 為 <a href="mailto:&#x6f;&#112;&#x61;&#99;&#105;&#x74;&#121;&#48;&#x40;&#104;&#101;&#120;&#x73;&#99;&#x68;&#111;&#111;&#108;&#x74;&#x65;&#x73;&#116;&#x2e;&#x69;&#x6f;">&#x6f;&#112;&#x61;&#99;&#105;&#x74;&#121;&#48;&#x40;&#104;&#101;&#120;&#x73;&#99;&#x68;&#111;&#111;&#108;&#x74;&#x65;&#x73;&#116;&#x2e;&#x69;&#x6f;</a> 的資料，確保只刪除符合條件的那一筆資料。</p>
</blockquote>
</blockquote>
<p><strong><font color=#FF0000> 注意事項 </font></strong></p>
<blockquote>
<p><strong>確認刪除條件：</strong></p>
<blockquote>
<p>確保 email 條件正確，避免刪除錯誤的資料。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>不可逆操作：</strong></p>
<blockquote>
<p><code>DELETE</code>操作是不可逆的，刪除後無法恢復。</p>
</blockquote>
</blockquote>
<p>可以執行以下查詢語句，確認資料是否已成功刪除：</p>
<p><font color=#0000FF> ln [7]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> &quot;USER&quot; <span class="keyword">WHERE</span> &quot;email&quot; <span class="operator">=</span> <span class="string">&#x27;opacity0@hexschooltest.io&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [7]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F4-checkTable.png?alt=media&token=dddb56ed-efa9-4ce8-a719-e6a9a19edb6a" alt="result3Table"></p>
<p>查詢結果為空，表示刪除成功。</p>
<h3 id="查詢取得-USER-資料表目前所有用戶數量（提示：使用count函式）"><a href="#查詢取得-USER-資料表目前所有用戶數量（提示：使用count函式）" class="headerlink" title="查詢取得 USER 資料表目前所有用戶數量（提示：使用count函式）"></a><u>查詢</u>取得 USER 資料表目前所有用戶數量（提示：使用count函式）</h3><p>查詢 USER 資料表中目前用戶數量的 SQL 語法：</p>
<p><font color=#0000FF> ln [8]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> user_count</span><br><span class="line"><span class="keyword">FROM</span> &quot;USER&quot;;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [8]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F5.png?alt=media&token=663c2239-3a01-46a5-9b0c-689766b6eb0b" alt="result4"></p>
<blockquote>
<p><strong><code>SELECT COUNT(*)</code>:</strong></p>
<blockquote>
<p>使用 COUNT(*) 函數計算資料表中所有資料列的數量。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong><code>AS user_count</code>：</strong></p>
<blockquote>
<p>將計算結果命名為 user_count，方便識別結果欄位。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong><code>FROM "USER"</code>:</strong></p>
<blockquote>
<p>指定要查詢的資料表為 USER。</p>
</blockquote>
</blockquote>
<h3 id="查詢取得-USER-資料表所有用戶資料，並列出前-3-筆（提示：使用limit語法）"><a href="#查詢取得-USER-資料表所有用戶資料，並列出前-3-筆（提示：使用limit語法）" class="headerlink" title="查詢取得 USER 資料表所有用戶資料，並列出前 3 筆（提示：使用limit語法）"></a><u>查詢</u>取得 USER 資料表所有用戶資料，並列出前 3 筆（提示：使用limit語法）</h3><p>以下是查詢 USER 資料表中所有用戶資料並列出前 3 筆的 SQL 語法：</p>
<p><font color=#0000FF> ln [9]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> &quot;USER&quot;</span><br><span class="line">LIMIT <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

<p>執行上述語句後，會返回 USER 資料表中的前 3 筆資料，例如：</p>
<p><font color=#FF0000> Out [9]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241125%20Practice%2F6.png?alt=media&token=42a87d64-89e9-4de4-bad6-b317804cad2e" alt="result5"></p>
<blockquote>
<p><code>SELECT *</code>:</p>
<blockquote>
<p>選取 USER 資料表中的所有欄位。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong><code>FROM "USER"</code>:</strong></p>
<blockquote>
<p>指定要查詢的資料表為 USER。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong><code>LIMIT 3</code>:</strong></p>
<blockquote>
<p>限制查詢結果只返回前 3 筆資料。</p>
</blockquote>
</blockquote>
<blockquote>
<p><strong>檢查資料完整性：</strong></p>
<blockquote>
<p>如果資料表中有重複資料或需要特定篩選，可以加上 WHERE 條件進一步過濾。</p>
</blockquote>
</blockquote>
<h2 id="額外知識補充"><a href="#額外知識補充" class="headerlink" title="額外知識補充"></a>額外知識補充</h2><ol>
<li>下方的 <code>created_at</code>、 <code>updated_at</code> 的  <code>DEFAULT</code> 是預設值意思，若是在建立資料時沒填寫的話不會報錯，而是會能放預設值</li>
<li>下方的建立資料表，會需要用雙引號<code>"USER"</code>原因是，<em><strong>postgreSQL 的 user 是關鍵字</strong></em>，為了避免撞名所以需要加上雙引號</li>
<li>在選取資料表時， 也請留意要加上雙引號，例如 <code>SELECT * FROM "USER"</code></li>
<li><code>timestamp</code>也是一種資料格式(Data Type)，主要是「時間格式」，範例為 2024-11-24T17:42:04.452Z</li>
</ol>
<p>SEE YOU TOMORROW (σ′▽‵)′▽‵)σ</p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>六角切版直播班每日任務挑戰</title>
    <url>/IWishIKnewHowToQuitYou/2024/07/19/%E5%85%AD%E8%A7%92%E5%88%87%E7%89%88%E7%9B%B4%E6%92%AD%E7%8F%AD%E6%AF%8F%E6%97%A5%E4%BB%BB%E5%8B%99%E6%8C%91%E6%88%B0/</url>
    <content><![CDATA[<p>西洋有一句話：「You are what you eat」，套用在習慣上，你的習慣會決定你變成什麼樣的人。每個行動都是微小的投票，投給你想要的未來。</p>
<p>你想要變成什麼樣的人，<br>是由你的微小行動決定的；<br>你的每個微小行動，<br>是由習慣決定的。</p>
<p>所以，重點是：你想要變成什麼樣的人？<br>那就培養怎麼樣的習慣，投下足夠多的票，變成你想要的人。 《原子習慣》</p>
<p>🏅每日任務挑戰列表</p>
<p>Day1：<a href="">HTML 語意標籤運用</a><br>Day2：移除圖片空隙<br>Day3：CSS 選擇器運用（擬態選擇器、類別選擇器）<br>Day4：推擠方向<br>Day5：margin、padding 混合運用</p>
<p>Day6：box-model<br>Day7：box-sizing<br>Day8：觀念選擇題<br>Day9：練習 Emmet 語法<br>Day10：margin: 0 auto、text-align 混合運用</p>
<p>Day11：文字設定（font-size、line-height）<br>Day12：整合相同樣式<br>Day13：文字設定（font-family、font-weight、font-style）<br>Day14：垂直水平置中<br>Day15：flex 多屬性練習</p>
<p>Day16：flex 完成九宮格排版<br>Day17：background-image<br>Day18：container 容器應用<br>Day19：線上 icon 載入<br>Day20：CSS 權重覆蓋</p>
<p>Day21：RWD 觀念選擇題<br>Day22：RWD 版型、RWD 排版間距<br>Day23：表單設計<br>Day24：jQuery toggleClass<br>Day25：下拉選單</p>
<p>Day26：錨點練習<br>Day27：SCSS 結構、SCSS 用法<br>Day28：SCSS 排序<br>Day29：mixin<br>Day30：練習使用元件</p>
<p>Day31：表單練習與 spacing 的運用<br>Day32：元件與通用類別 I<br>Day33：元件與通用類別 II<br>Day34：<a href="https://codepen.io/psyduck5566/pen/vYqrjgd">Modal 與 collapse 元件實用</a><br>Day35：<a href="https://codepen.io/psyduck5566/pen/QWXBQxK">網格練習</a></p>
<p>Day36：Bootstrap position 與背景圖片遮罩設定<br>Day37：Swiper 輪播套件介紹<br>Day38：Swiper 客製化樣式<br>Day39：<a href="https://codepen.io/psyduck5566/pen/ZEdqGOb">Bootstrap Navs and tabs</a><br>Day40：<a href="https://codepen.io/psyduck5566/pen/PoryZKJ">Background linear gradient</a></p>
<p>Day41：Bootstrap input group<br>Day42：練習 keyframes<br>Day43：練習 transform<br>Day44：練習 object-fit<br>Day45：<a href="https://codepen.io/psyduck5566/pen/WNqYaLB">aos + animate</a></p>
<p>Day46：Bootstrap Dropdown<br>Day47：Swiper RWD<br>Day48：Bootstrap Accordion<br>Day49：Modal 實作運用<br>Day50：Bootstrap Collapse</p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>六角流週覆盤</title>
    <url>/IWishIKnewHowToQuitYou/2024/10/27/%E5%85%AD%E8%A7%92%E6%B5%81%E9%80%B1%E8%A6%86%E7%9B%A4/</url>
    <content><![CDATA[<h2 id="Question"><a href="#Question" class="headerlink" title="Question:"></a>Question:</h2><blockquote>
<p><font color=#c0c0c0> 1. 本週做了什麼&#x2F;學了什麼內容? </font><br><font color=#c0c0c0> 2. 本週的進度有沒有符合預期規劃? 沒有的話，可以記錄原因，例如： </font><br><font color=#c0c0c0>	- 發生什麼事件 &#x2F; 因為什麼情緒 導致無法完成本週計劃？ </font><br><font color=#c0c0c0>	- 未來發生類似的事情，希望如何調整來幫助自己？ </font><br><font color=#c0c0c0> 3. 本週有沒有遇到什麼困難&#x2F;問題? 問題是如何解決的? </font><br><font color=#c0c0c0> 4. 本週感謝時間：(選填) </font><br><font color=#c0c0c0>	- 本週自己&#x2F;團隊有哪裡做的很棒? </font><br><font color=#c0c0c0>    - 本週有什麼讓你覺得很感恩? </font><br><font color=#c0c0c0> 5. 下週計畫要做哪些項目? </font><br><font color=#c0c0c0> 6. 有沒有想跟大家分享的事情（生活近況、學習狀況、假日在幹嘛、心靈上的調整 都可以唷） </font></p>
</blockquote>
<p>2024&#x2F;11&#x2F;28</p>
<p>練習JS &amp; 練習SQL<br>參分之柒<br>感謝父母。</p>
<hr>
<p>練習JS練習SQL<br>沒有 意志不夠堅定。<br>本週幫忙同仁審核二次評鑑報告，但都是在17:00收到，然後截止日期是明天。不知道有沒有比較洽當的應對方式?<br>專題拆掉了。原本想續做的唯一同學在聽完開學典禮後出於其它的考量決定轉入學習組。想到要再重頭來過頭就有點痛… XD<br>感謝爸媽。<br>每年至少跑一場馬拉松 (1&#x2F;1) </p>
<hr>
<p>練習JS<br>沒有 意志不夠堅定<br>勇敢拒絕加班 (?)<br>感謝爸媽<br>練習JS、復習SQL<br>Ethan: “I need you to trust me, ONE LAST TIME…”<br>Me: “Always.”</p>
<hr>
<p>DOM<br>50% 在DOM投入比預期多的時間，壓縮其它預排項目<br>這星期每天都睡過頭，錯過晨跑 orz<br>感謝家人。<br>補JS進度。行有餘力，則以學SQL新釋出的影片。<br>恭喜SHO轉隊第一年就奪冠。祝您能保護好身體，不要再受傷了QQ”<br>⭐⭐⭐⭐⭐恭喜T1，謝謝李哥。好感動啊，我也有星星了？？？</p>
<hr>
<p>學習 JS ， 被CodeWar有趣的問題吸引 。<br>一時手滑報名SQL體驗班。 當加入頻道時看見眼熟的ID，覺得開心 ^^”<br>有依照預期進度學習。<br>職場說話還是要保留些，留得青山在不怕沒柴燒(???)<br>感謝洧杰校長辦SQL體驗班。<br>要好好整理自己的家，別身在福中不知福。<br>學習 JS &amp; SQL<br>支持的隊伍突破心魔，打進決賽。希望今年能寫下圓滿結局。</p>
]]></content>
      <tags>
        <tag>Essay</tag>
      </tags>
  </entry>
  <entry>
    <title>夏天充滿了小說，而秋天是詩</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/08/%E5%A4%8F%E5%A4%A9%E5%85%85%E6%BB%BF%E4%BA%86%E5%B0%8F%E8%AA%AA%EF%BC%8C%E8%80%8C%E7%A7%8B%E5%A4%A9%E6%98%AF%E8%A9%A9/</url>
    <content><![CDATA[<p>整個夏天我們不斷地熱醒</p>
<p>一個夢攪和著下一個夢</p>
<p>破曉時聞到一股鹽巴味</p>
<p>卻已分不清是肉體或者</p>
<p>那片夢中的海</p>
<p>　</p>
<p>別讓那片海洋說話   她必須</p>
<p>沈默 必須釋放我們所需</p>
<p>所有高溫的語言</p>
<p>在逐漸沸騰的大氣裡</p>
<p>我們披著光關掉一盞接一盞的燈</p>
<p>「清醒不是絕對必要的」</p>
<p>我們微笑地對彼此說</p>
<p>　</p>
<p>於是每個夜潮水送來一個又一個故事</p>
<p>我們聽著並自己書寫</p>
<p>於是夏天充滿了小說</p>
<p>而最後未完成的   留到秋天</p>
<p>成為詩</p>
<h6 id="詩文｜王姿雯《夏天充滿了小說，而秋天是詩》"><a href="#詩文｜王姿雯《夏天充滿了小說，而秋天是詩》" class="headerlink" title="詩文｜王姿雯《夏天充滿了小說，而秋天是詩》"></a>詩文｜王姿雯《夏天充滿了小說，而秋天是詩》</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>妳說, 後端資料庫體驗營到底有什麼? 貳</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/26/%E5%A6%B3%E8%AA%AA-%E5%BE%8C%E7%AB%AF%E8%B3%87%E6%96%99%E5%BA%AB%E9%AB%94%E9%A9%97%E7%87%9F%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E9%BA%BC-%E8%B2%B3/</url>
    <content><![CDATA[<p>續</p>
<h4 id="情境講解"><a href="#情境講解" class="headerlink" title="情境講解"></a>情境講解</h4><ol>
<li>為滿足商業需求的組合包方案，於是建立了 <code>CREDIT_PACKAGE</code> 資料表，來記錄各組合包資訊</li>
<li>客戶在買的訂單記錄，都會記錄在 <code>CREDIT_PURCHASE</code> 資料表中</li>
</ol>
<h4 id="資料庫預設資訊與欄位介紹"><a href="#資料庫預設資訊與欄位介紹" class="headerlink" title="資料庫預設資訊與欄位介紹"></a>資料庫預設資訊與欄位介紹</h4><ol>
<li><strong>USER</strong>：使用者資料</li>
<li><strong>CREDIT_PACKAGE</strong>：組合包方案</li>
</ol>
<ul>
<li><code>credit_amount</code>：堂數</li>
<li><code>price</code>:金額</li>
</ul>
<ol start="3">
<li><strong>CREDIT_PURCHASE</strong>：客戶購買課程堂數</li>
</ol>
<ul>
<li><code>user_id</code>：使用者(USER) 的 id 資訊</li>
<li><code>purchased_credits</code>：購買堂數</li>
<li><code>price_paid</code>：購買金額</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> EXTENSION IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> &quot;uuid-ossp&quot;;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;USER&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()),</span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;email&quot; <span class="type">varchar</span>(<span class="number">320</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;role&quot; <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  &quot;updated_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PACKAGE&quot; (</span><br><span class="line">  &quot;id&quot; serial <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;credit_amount&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;price&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PURCHASE&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()),</span><br><span class="line">  &quot;user_id&quot; uuid <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;USER&quot;(id),</span><br><span class="line">  &quot;credit_package_id&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;CREDIT_PACKAGE&quot;(id),</span><br><span class="line">  &quot;purchased_credits&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;price_paid&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  &quot;purchase_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p>這段 SQL 語句創建了三個資料表，分別是 USER、CREDIT_PACKAGE 和 CREDIT_PURCHASE</p>
<p><strong>USER 表</strong><br>用於存儲用戶的基本信息。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;USER&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()), <span class="comment">-- 唯一標識符，使用 UUID 自動生成</span></span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                               <span class="comment">-- 用戶名稱，最多 50 字元，必填</span></span><br><span class="line">  &quot;email&quot; <span class="type">varchar</span>(<span class="number">320</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                     <span class="comment">-- 電子郵件，最多 320 字元，必填且唯一</span></span><br><span class="line">  &quot;role&quot; <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                              <span class="comment">-- 用戶角色，必填，可能的值如 &quot;USER&quot; 或 &quot;COACH&quot;</span></span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>), <span class="comment">-- 創建時間，默認為當前時間</span></span><br><span class="line">  &quot;updated_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)  <span class="comment">-- 更新時間，默認為當前時間</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>id：</strong>使用 <code>gen_random_uuid()</code> 自動生成唯一標識符。<br><strong>email：</strong>設置了唯一性約束，確保每個用戶的電子郵件地址不重複。<br><strong>role：</strong>用戶角色欄位，可用於區分普通用戶和其他角色（如教練）。<br><code>created_at</code>和<code>updated_at</code>：用於記錄用戶的創建和更新時間。</p>
</blockquote>
<p><strong>CREDIT_PACKAGE 表</strong><br>用於存儲信用點數套餐的詳細信息。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PACKAGE&quot; (</span><br><span class="line">  &quot;id&quot; serial <span class="keyword">PRIMARY</span> KEY,                       <span class="comment">-- 唯一標識符，自動遞增</span></span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                  <span class="comment">-- 套餐名稱，最多 50 字元，必填</span></span><br><span class="line">  &quot;credit_amount&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,             <span class="comment">-- 套餐中包含的信用點數數量，必填</span></span><br><span class="line">  &quot;price&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,               <span class="comment">-- 套餐價格，必填，精確到小數點後兩位</span></span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>) <span class="comment">-- 創建時間，默認為當前時間</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>id：</strong>使用 <code>serial</code><br><strong>credit_amount：</strong>存儲套餐中包含的信用點數數量。 自動生成唯一標識符。<br><strong>price：</strong>記錄套餐的價格，使用 <code>numeric(10,2)</code> 確保價格的精度。<br><strong>created_at：</strong>記錄套餐的創建時間。</p>
</blockquote>
<p><strong>CREDIT_PURCHASE 表</strong><br>用於記錄用戶購買信用點數的交易。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PURCHASE&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()), <span class="comment">-- 唯一標識符，使用 UUID 自動生成</span></span><br><span class="line">  &quot;user_id&quot; uuid <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;USER&quot;(id),             <span class="comment">-- 外鍵，引用 &quot;USER&quot; 表的 id</span></span><br><span class="line">  &quot;credit_package_id&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;CREDIT_PACKAGE&quot;(id), <span class="comment">-- 外鍵，引用 &quot;CREDIT_PACKAGE&quot; 表的 id</span></span><br><span class="line">  &quot;purchased_credits&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                      <span class="comment">-- 購買的信用點數數量</span></span><br><span class="line">  &quot;price_paid&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                       <span class="comment">-- 實際支付的金額，精確到小數點後兩位</span></span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>), <span class="comment">-- 創建時間，默認為當前時間</span></span><br><span class="line">  &quot;purchase_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>) <span class="comment">-- 購買時間，默認為當前時間</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>id：</strong>使用 <code>gen_random_uuid()</code>自動生成唯一標識符。<br><strong>user_id：</strong>外鍵，指向<code>USER</code> 表中的 <code>id</code>用於關聯用戶。<br><strong>credit_package_id：</strong>外鍵，指向<code>CREDIT_PACKAGE</code>表中的<code>id</code>，用於關聯購買的信用點數套餐。<br><strong>purchased_credits：</strong>記錄購買的信用點數數量。<br><strong>price_paid：</strong>記錄用戶實際支付的金額。<br><strong>purchase_at：</strong>記錄交易發生的時間。</p>
</blockquote>
<h3 id="資料表之間的關聯"><a href="#資料表之間的關聯" class="headerlink" title="資料表之間的關聯"></a>資料表之間的關聯</h3><p><strong>USER 與 CREDIT_PURCHASE</strong></p>
<blockquote>
<p><code>CREDIT_PURCHASE.user_id</code>是外鍵，指向 <code>USER.id</code>。<br>表示每筆信用點數購買記錄都關聯到一個用戶。</p>
</blockquote>
<p><strong>CREDIT_PACKAGE 與 CREDIT_PURCHASE</strong></p>
<blockquote>
<p><code>CREDIT_PURCHASE.credit_package_id</code>是外鍵，指向 <code>CREDIT_PACKAGE.id</code>。<br>表示每筆購買記錄都關聯到一個信用點數套餐。</p>
</blockquote>
<p><strong><font color=#FF0000> 注意事項 </font></strong><br><strong>uuid-ossp 擴展</strong></p>
<blockquote>
<p>必須啟用 <code>uuid-ossp </code>擴展，才能使用 <code>gen_random_uuid()</code> 生成 <code>UUID</code>。如果未啟用，可執行以下語句：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> EXTENSION IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> &quot;uuid-ossp&quot;;</span><br></pre></td></tr></table></figure>

<p><strong>外鍵約束</strong></p>
<blockquote>
<p>外鍵約束 <code>(REFERENCES) </code>確保數據的一致性。例如，<code>CREDIT_PURCHASE.user_id </code>必須是 <code>USER </code>表中已存在的 <code>id</code>。</p>
</blockquote>
<h2 id="組合包方案-CREDIT-PACKAGE"><a href="#組合包方案-CREDIT-PACKAGE" class="headerlink" title="組合包方案 CREDIT_PACKAGE"></a>組合包方案 CREDIT_PACKAGE</h2><h3 id="1-新增：在CREDIT-PACKAGE-資料表新增三筆資料，資料需求如下："><a href="#1-新增：在CREDIT-PACKAGE-資料表新增三筆資料，資料需求如下：" class="headerlink" title="1. 新增：在CREDIT_PACKAGE 資料表新增三筆資料，資料需求如下："></a>1. 新增：在CREDIT_PACKAGE 資料表新增三筆資料，資料需求如下：</h3><ul>
<li>名稱為 7 堂組合包方案，價格為1,400 元，堂數為7</li>
<li>名稱為14 堂組合包方案，價格為2,520 元，堂數為14</li>
<li>名稱為 21 堂組合包方案，價格為4,800 元，堂數為21</li>
</ul>
<p>以下是向 CREDIT_PACKAGE 資料表新增三筆資料的 SQL 語句：</p>
<p><font color=#0000FF> ln [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;CREDIT_PACKAGE&quot; (name, credit_amount, price)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">&#x27;7 堂組合包方案&#x27;</span>, <span class="number">7</span>, <span class="number">1400.00</span>),</span><br><span class="line">  (<span class="string">&#x27;14 堂組合包方案&#x27;</span>, <span class="number">14</span>, <span class="number">2520.00</span>),</span><br><span class="line">  (<span class="string">&#x27;21 堂組合包方案&#x27;</span>, <span class="number">21</span>, <span class="number">4800.00</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [1]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241126%20Practice%2F1.png?alt=media&token=d377ed6b-a4e4-4ff0-810e-38d3aa0d94d6"></p>
<p><strong><code>INSERT INTO "CREDIT_PACKAGE"</code></strong></p>
<blockquote>
<p>指定要插入數據的資料表為 <code>CREDIT_PACKAGE</code>。<br>欄位包含 name（名稱）、credit_amount（堂數）、price（價格）。</p>
</blockquote>
<p><strong>價格格式</strong></p>
<blockquote>
<p>使用 <code>numeric(10,2)</code> 格式，確保價格精確到小數點後兩位。</p>
</blockquote>
<p>執行此語句後，CREDIT_PACKAGE 資料表中將新增三筆資料，id 和 created_at 欄位會根據表的設定自動生成。</p>
<p><strong>驗證插入結果</strong><br><font color=#0000FF> ln [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot;;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [2]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241126%20Practice%2F1-Table.png?alt=media&token=16fe8cc7-70dd-4f3e-b8b0-afb158590753"></p>
<h2 id="客戶購買課程堂數-CREDIT-PURCHASE"><a href="#客戶購買課程堂數-CREDIT-PURCHASE" class="headerlink" title="客戶購買課程堂數 CREDIT_PURCHASE"></a>客戶購買課程堂數 CREDIT_PURCHASE</h2><h3 id="2-新增：在-CREDIT-PURCHASE-資料表，新增三筆資料：（請使用-name-欄位做子查詢）"><a href="#2-新增：在-CREDIT-PURCHASE-資料表，新增三筆資料：（請使用-name-欄位做子查詢）" class="headerlink" title="2. 新增：在 CREDIT_PURCHASE 資料表，新增三筆資料：（請使用 name 欄位做子查詢）"></a>2. 新增：在 CREDIT_PURCHASE 資料表，新增三筆資料：（請使用 name 欄位做子查詢）</h3><ul>
<li>王小明 購買 14 堂組合包方案</li>
<li>王小明 購買 21 堂組合包方案</li>
<li>好野人 購買 14 堂組合包方案</li>
</ul>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 王小明提示範例</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> &quot;CREDIT_PURCHASE&quot; (user_id, credit_package_id, purchased_credits, price_paid) <span class="keyword">values</span></span><br><span class="line">((<span class="keyword">select</span> id <span class="keyword">from</span> &quot;USER&quot; <span class="keyword">where</span> email <span class="operator">=</span> <span class="string">&#x27;wXlTq@hexschooltest.io&#x27;</span>),</span><br><span class="line">  (<span class="keyword">select</span> id <span class="keyword">from</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>),</span><br><span class="line">  (<span class="keyword">select</span> credit_amount <span class="keyword">from</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>),</span><br><span class="line">  (<span class="keyword">select</span> price <span class="keyword">from</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>根據校長提供的範例，這段 SQL 是用來插入一筆資料到 CREDIT_PURCHASE 資料表，並且透過子查詢從其他資料表（例如 USER 和 CREDIT_PACKAGE）中取得相關欄位的值。<br>以下是基於提示範例，新增三筆資料的語法：</p>
<p><font color=#0000FF> ln [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 王小明 購買 14 堂組合包方案</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;CREDIT_PURCHASE&quot; (user_id, credit_package_id, purchased_credits, price_paid) </span><br><span class="line"><span class="keyword">VALUES</span> (</span><br><span class="line">  (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> &quot;USER&quot; <span class="keyword">WHERE</span> email <span class="operator">=</span> <span class="string">&#x27;wXlTq@hexschooltest.io&#x27;</span>), <span class="comment">-- 王小明的 email</span></span><br><span class="line">  (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>), <span class="comment">-- 14 堂組合包方案的 id</span></span><br><span class="line">  (<span class="keyword">SELECT</span> credit_amount <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>), <span class="comment">-- 堂數</span></span><br><span class="line">  (<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>) <span class="comment">-- 價格</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 王小明 購買 21 堂組合包方案</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;CREDIT_PURCHASE&quot; (user_id, credit_package_id, purchased_credits, price_paid) </span><br><span class="line"><span class="keyword">VALUES</span> (</span><br><span class="line">  (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> &quot;USER&quot; <span class="keyword">WHERE</span> email <span class="operator">=</span> <span class="string">&#x27;wXlTq@hexschooltest.io&#x27;</span>), <span class="comment">-- 王小明的 email</span></span><br><span class="line">  (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;21 堂組合包方案&#x27;</span>), <span class="comment">-- 21 堂組合包方案的 id</span></span><br><span class="line">  (<span class="keyword">SELECT</span> credit_amount <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;21 堂組合包方案&#x27;</span>), <span class="comment">-- 堂數</span></span><br><span class="line">  (<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;21 堂組合包方案&#x27;</span>) <span class="comment">-- 價格</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 好野人 購買 14 堂組合包方案</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;CREDIT_PURCHASE&quot; (user_id, credit_package_id, purchased_credits, price_paid) </span><br><span class="line"><span class="keyword">VALUES</span> (</span><br><span class="line">  (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> &quot;USER&quot; <span class="keyword">WHERE</span> email <span class="operator">=</span> <span class="string">&#x27;richman@hexschooltest.io&#x27;</span>), <span class="comment">-- 好野人的 email</span></span><br><span class="line">  (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>), <span class="comment">-- 14 堂組合包方案的 id</span></span><br><span class="line">  (<span class="keyword">SELECT</span> credit_amount <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>), <span class="comment">-- 堂數</span></span><br><span class="line">  (<span class="keyword">SELECT</span> price <span class="keyword">FROM</span> &quot;CREDIT_PACKAGE&quot; <span class="keyword">WHERE</span> name <span class="operator">=</span> <span class="string">&#x27;14 堂組合包方案&#x27;</span>) <span class="comment">-- 價格</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [3]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241126%20Practice%2F2.png?alt=media&token=ddae3083-d881-4664-8207-fcd497906152"></p>
<p><strong>INSERT INTO：</strong></p>
<blockquote>
<p>向 <code>CREDIT_PURCHASE</code> 資料表新增資料。</p>
<blockquote>
<p>user_id：用戶 ID。<br>credit_package_id：信用套組 ID。<br>purchased_credits：購買的堂數。<br>price_paid：支付的金額。</p>
</blockquote>
</blockquote>
<p><strong>子查詢：</strong></p>
<blockquote>
<p>(SELECT id FROM “USER” WHERE email &#x3D; ‘<a href="mailto:&#x77;&#88;&#108;&#x54;&#x71;&#64;&#x68;&#101;&#x78;&#x73;&#x63;&#x68;&#x6f;&#111;&#108;&#x74;&#x65;&#x73;&#x74;&#46;&#105;&#x6f;">&#x77;&#88;&#108;&#x54;&#x71;&#64;&#x68;&#101;&#x78;&#x73;&#x63;&#x68;&#x6f;&#111;&#108;&#x74;&#x65;&#x73;&#x74;&#46;&#105;&#x6f;</a>‘)：</p>
<blockquote>
<p>從 USER 資料表中查詢 email 為 <a href="mailto:&#119;&#x58;&#x6c;&#84;&#113;&#64;&#x68;&#x65;&#x78;&#115;&#x63;&#x68;&#111;&#x6f;&#x6c;&#116;&#x65;&#x73;&#116;&#x2e;&#x69;&#x6f;">&#119;&#x58;&#x6c;&#84;&#113;&#64;&#x68;&#x65;&#x78;&#115;&#x63;&#x68;&#111;&#x6f;&#x6c;&#116;&#x65;&#x73;&#116;&#x2e;&#x69;&#x6f;</a> 的用戶 ID。</p>
</blockquote>
</blockquote>
<blockquote>
<p>(SELECT id FROM “CREDIT_PACKAGE” WHERE name &#x3D; ‘14 堂組合包方案’)：</p>
<blockquote>
<p>從 CREDIT_PACKAGE 資料表中查詢名稱為 14 堂組合包方案 的套組 ID。</p>
</blockquote>
</blockquote>
<blockquote>
<p>(SELECT credit_amount FROM “CREDIT_PACKAGE” WHERE name &#x3D; ‘14 堂組合包方案’)：</p>
<blockquote>
<p>從 CREDIT_PACKAGE 資料表中查詢名稱為 14 堂組合包方案 的堂數。</p>
</blockquote>
</blockquote>
<blockquote>
<p>(SELECT price FROM “CREDIT_PACKAGE” WHERE name &#x3D; ‘14 堂組合包方案’)：</p>
<blockquote>
<p>從 CREDIT_PACKAGE 資料表中查詢名稱為 14 堂組合包方案 的價格。</p>
</blockquote>
</blockquote>
<p>最後要查看 CREDIT_PURCHASE 資料表的詳細內容，並且結合 USER 和 CREDIT_PACKAGE 資料表，可以使用 JOIN 語法來查詢，這樣能更清楚地看到每筆交易的用戶名稱、購買的套餐名稱、堂數與支付金額等資訊。</p>
<p><font color=#0000FF> ln [4]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  cp.id <span class="keyword">AS</span> 購買記錄id,                  <span class="comment">-- 購買記錄的唯一識別碼</span></span><br><span class="line">  u.name <span class="keyword">AS</span> 消費者名稱,                <span class="comment">-- 用戶名稱</span></span><br><span class="line">  p.name <span class="keyword">AS</span> 課程名稱,                  <span class="comment">-- 購買的課程名稱</span></span><br><span class="line">  cp.purchased_credits <span class="keyword">AS</span> 購買堂數,    <span class="comment">-- 購買的課程堂數</span></span><br><span class="line">  cp.price_paid <span class="keyword">AS</span> 付款金額,           <span class="comment">-- 支付的金額</span></span><br><span class="line">  cp.created_at <span class="keyword">AS</span> 購買時間            <span class="comment">-- 購買的時間戳</span></span><br><span class="line"><span class="keyword">FROM</span> &quot;CREDIT_PURCHASE&quot; cp</span><br><span class="line"><span class="keyword">JOIN</span> &quot;USER&quot; u <span class="keyword">ON</span> cp.user_id <span class="operator">=</span> u.id        <span class="comment">-- 將 CREDIT_PURCHASE 和 USER 資料表連接</span></span><br><span class="line"><span class="keyword">JOIN</span> &quot;CREDIT_PACKAGE&quot; p <span class="keyword">ON</span> cp.credit_package_id <span class="operator">=</span> p.id; <span class="comment">-- 將 CREDIT_PURCHASE 和 CREDIT_PACKAGE 資料表連接</span></span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [4]:  </font><br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241126%20Practice%2F2-Table.png?alt=media&token=0c42fd13-169b-4510-ad8c-9a52dbe507cb"></p>
<p><strong>為什麼需要 <code>JOIN </code>？</strong></p>
<ul>
<li>CREDIT_PURCHASE 資料表記錄了購買的基本資訊，但它只包含用戶的 user_id 和課程包的 credit_package_id，而不是用戶的名字或課程的名稱。</li>
<li>USER 資料表存儲了用戶的詳細資訊（如名字），而 CREDIT_PACKAGE 資料表存儲了課程包的詳細資訊（如名稱）。</li>
<li>使用 <code>JOIN</code>，我們可以通過關聯欄位（user_id 和 credit_package_id）將這些資料表結合，從而獲取完整的資訊</li>
</ul>
<p>SEE YOU TOMORROW (σ′▽‵)′▽‵)σ</p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>妳說，後端資料庫體驗營到底有什麼? 參</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/27/%E5%A6%B3%E8%AA%AA%EF%BC%8C%E5%BE%8C%E7%AB%AF%E8%B3%87%E6%96%99%E5%BA%AB%E9%AB%94%E9%A9%97%E7%87%9F%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E9%BA%BC-%E5%8F%83/</url>
    <content><![CDATA[<h3 id="教練身份講解"><a href="#教練身份講解" class="headerlink" title="教練身份講解"></a>教練身份講解</h3><p>在一個網頁平台上，會有多種角色，而在我們的任務二中的角色(role)會有：</p>
<p>一般客戶：USER<br>教練：COACH<br>在我們的<a href="https://miro.com/app/board/uXjVLbiDml0=/">線稿圖</a>中，也有繪製如果他是教練角色時，他可以填寫自己的相關教練資料，其中欄位包含：</p>
<p>大頭照<br>教練姓名<br>教練資歷<br>教練簡介<br>專長(可複選)<br><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241127%20Practice%2Fdownload.png?alt=media&token=57824e50-be4f-4faa-8a92-5b194aa5fe7a" alt="picture"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> EXTENSION IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> &quot;uuid-ossp&quot;;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;USER&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()),</span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;email&quot; <span class="type">varchar</span>(<span class="number">320</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;role&quot; <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  &quot;updated_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;COACH&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> uuid_generate_v4(),</span><br><span class="line">  &quot;user_id&quot; uuid <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;USER&quot;(id),</span><br><span class="line">  &quot;experience_years&quot; <span class="type">integer</span>,</span><br><span class="line">  &quot;description&quot; text,</span><br><span class="line">  &quot;profile_image_url&quot; <span class="type">varchar</span>(<span class="number">2048</span>),</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  &quot;updated_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span>(&quot;user_id&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PACKAGE&quot; (</span><br><span class="line">  &quot;id&quot; serial <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">  &quot;name&quot; <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;credit_amount&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;price&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PURCHASE&quot; (</span><br><span class="line">  &quot;id&quot; uuid <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (gen_random_uuid()),</span><br><span class="line">  &quot;user_id&quot; uuid <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;USER&quot;(id),</span><br><span class="line">  &quot;credit_package_id&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;CREDIT_PACKAGE&quot;(id),</span><br><span class="line">  &quot;purchased_credits&quot; <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;price_paid&quot; <span class="type">numeric</span>(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  &quot;created_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>),</span><br><span class="line">  &quot;purchase_at&quot; <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> (<span class="built_in">CURRENT_TIMESTAMP</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;USER&quot; (&quot;name&quot;, &quot;email&quot;, &quot;role&quot;)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">  (<span class="string">&#x27;李燕容&#x27;</span>, <span class="string">&#x27;lee2000@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;王小明&#x27;</span>, <span class="string">&#x27;wXlTq@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;肌肉棒子&#x27;</span>, <span class="string">&#x27;muscle@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;好野人&#x27;</span>, <span class="string">&#x27;richman@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;Q太郎&#x27;</span>, <span class="string">&#x27;starplatinum@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>),</span><br><span class="line">  (<span class="string">&#x27;透明人&#x27;</span>, <span class="string">&#x27;opacity0@hexschooltest.io&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="分析資料表結構與關聯"><a href="#分析資料表結構與關聯" class="headerlink" title="分析資料表結構與關聯"></a>分析資料表結構與關聯</h3><p>根據提供的資料表結構，以下是每個資料表的功能與關聯性分析：</p>
<p><strong>1. USER 資料表</strong></p>
<ul>
<li>功能：儲存使用者的基本資訊。</li>
<li>欄位說明：<ul>
<li>id：主鍵，唯一標識每個使用者。</li>
<li>name：使用者名稱。</li>
<li>email：使用者電子郵件，必須唯一。</li>
<li>role：使用者角色，可選值有 “USER” 和 “COACH”。</li>
<li>created_at &#x2F; updated_at：記錄資料建立與更新的時間。</li>
</ul>
</li>
</ul>
<p><strong>2. COACH 資料表</strong></p>
<ul>
<li>功能：儲存教練的詳細資訊。</li>
<li>欄位說明：<ul>
<li>id：主鍵，唯一標識每位教練。</li>
<li>user_id：外鍵，參考 USER 表的 id，表示該教練是某位使用者。</li>
<li>experience_years：教練的經驗年數。</li>
<li>description：教練的個人描述。</li>
<li>profile_image_url：教練的個人頭像連結。</li>
<li>created_at &#x2F; updated_at：記錄資料建立與更新的時間。</li>
</ul>
</li>
<li>關聯性：<ul>
<li>每位教練對應到 USER 表中的一位使用者（1 對 1 關係）。</li>
<li>user_id 欄位設置了唯一性約束（UNIQUE），確保一位使用者只能成為一位教練。</li>
</ul>
</li>
</ul>
<p><strong>3. CREDIT_PACKAGE 資料表</strong></p>
<ul>
<li>功能：儲存可購買的點數包資訊。</li>
<li>欄位說明：<ul>
<li>id：主鍵，自動遞增。</li>
<li>name：點數包名稱（例如：”入門點數包”）。</li>
<li>credit_amount：點數包內包含的點數數量。</li>
<li>price：點數包的售價。</li>
<li>created_at：記錄資料建立時間。</li>
</ul>
</li>
</ul>
<p><strong>4. CREDIT_PURCHASE 資料表</strong></p>
<ul>
<li>功能：記錄使用者購買點數包的交易資訊。</li>
<li>欄位說明：<ul>
<li>id：主鍵，唯一標識每筆交易。</li>
<li>user_id：外鍵，參考 USER 表的 id，表示購買者。</li>
<li>credit_package_id：外鍵，參考 CREDIT_PACKAGE 表的 id，表示購買的點數包。</li>
<li>purchased_credits：實際購買的點數數量。</li>
<li>price_paid：購買時支付的金額。</li>
<li>created_at &#x2F; purchase_at：記錄交易的建立與購買時間。</li>
</ul>
</li>
<li>關聯性：<ul>
<li>每筆交易對應到一位使用者（多對一關係）。</li>
<li>每筆交易對應到一個點數包（多對一關係）。</li>
</ul>
</li>
</ul>
<h3 id="資料表間的關係"><a href="#資料表間的關係" class="headerlink" title="資料表間的關係"></a>資料表間的關係</h3><p>1.USER 與 COACH：</p>
<ul>
<li>一對一（One-to-One）：一位使用者可以是教練（COACH 表），但不是所有使用者都是教練。</li>
<li>COACH 表的 user_id 是 USER 表的外鍵，且設置了唯一性約束。</li>
</ul>
<p>2.USER 與 CREDIT_PURCHASE：</p>
<ul>
<li>一對多（One-to-Many）：一位使用者可以有多筆點數包購買記錄。</li>
</ul>
<p>3.CREDIT_PACKAGE 與 CREDIT_PURCHASE：</p>
<ul>
<li>一對多（One-to-Many）：一個點數包可以被多位使用者購買。</li>
</ul>
<h3 id="教練資料-，資料表為-COACH"><a href="#教練資料-，資料表為-COACH" class="headerlink" title="教練資料 ，資料表為 COACH"></a>教練資料 ，資料表為 COACH</h3><p><strong>新增：</strong>在 COACH 資料表新增三筆資料，資料需求如下：<br>將用戶 李燕容 新增為教練，並且年資設定為2年（提示：使用 李燕容 的email ，取得 李燕容 的 id ）<br>將用戶肌肉棒子新增為教練，並且年資設定為2年（提示：使用 肌肉棒子 的email ，取得 肌肉棒子 的 id ）<br>將用戶Q太郎新增為教練，並且年資設定為2年（提示：使用 Q太郎 的email ，取得 Q太郎 的 id ）</p>
<p>根據需求，需透過 USER 資料表中的 email 欄位，取得以下 3 位使用者的 id：</p>
<p><font color=#0000FF> ln [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id, name, email <span class="keyword">FROM</span> &quot;USER&quot;</span><br><span class="line"><span class="keyword">WHERE</span> email <span class="keyword">IN</span> (<span class="string">&#x27;lee2000@hexschooltest.io&#x27;</span>, <span class="string">&#x27;muscle@hexschooltest.io&#x27;</span>, <span class="string">&#x27;starplatinum@hexschooltest.io&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [1]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241127%20Practice%2F1(4).png?alt=media&token=fce1450e-23c8-449e-8f64-f50487a52adb" alt="1"></p>
<p>使用查詢出的 id，將這 3 位使用者新增為教練，並設定年資為 2 年。</p>
<p><font color=#0000FF> ln [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> &quot;COACH&quot; (&quot;user_id&quot;, &quot;experience_years&quot;, &quot;description&quot;, &quot;profile_image_url&quot;)</span><br><span class="line"><span class="keyword">VALUES</span> </span><br><span class="line">  (<span class="string">&#x27;6f1f764a-26ba-451c-8c3b-3ebd508584f5&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;熱愛健身與教學的教練&#x27;</span>, <span class="keyword">NULL</span>),</span><br><span class="line">  (<span class="string">&#x27;b8843ac6-9480-4de3-a1d5-7105e66a0acf&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;專注於力量訓練的教練&#x27;</span>, <span class="keyword">NULL</span>),</span><br><span class="line">  (<span class="string">&#x27;6e5c289a-70ed-49fb-b2bd-313f3558d5b3&#x27;</span>, <span class="number">2</span>, <span class="string">&#x27;24小時耐力訓練的專家&#x27;</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [2]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241127%20Practice%2F2.png?alt=media&token=106d15b5-2b2a-4ade-b6cd-cca95bf7e6fc" alt="2"></p>
<p>執行以下查詢，確認是否成功新增這三位教練：</p>
<p><font color=#0000FF> ln [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c.id <span class="keyword">AS</span> coach_id, u.name <span class="keyword">AS</span> user_name, c.experience_years, c.description</span><br><span class="line"><span class="keyword">FROM</span> &quot;COACH&quot; c</span><br><span class="line"><span class="keyword">JOIN</span> &quot;USER&quot; u <span class="keyword">ON</span> c.user_id <span class="operator">=</span> u.id;</span><br></pre></td></tr></table></figure>

<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241127%20Practice%2F1(4).png?alt=media&token=fce1450e-23c8-449e-8f64-f50487a52adb" alt="3"></p>
<h2 id="何謂一對多、一對一"><a href="#何謂一對多、一對一" class="headerlink" title="何謂一對多、一對一"></a>何謂一對多、一對一</h2><h3 id="解釋一對多關係"><a href="#解釋一對多關係" class="headerlink" title="解釋一對多關係"></a>解釋一對多關係</h3><p>口訣：「多的要設定外來鍵」<br>流程：從欄位角度去規劃<br>1.以「使用者」角度：一個「使用者」會有多筆購買紀錄<br>2.以「購買紀錄」角度：一筆「購買紀錄」只會屬於 一個 使用者<br>➡️ 所以在「購買紀錄」表格（多的那方）設定外來鍵</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 一對多（使用者 -&gt; 購買紀錄） </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;CREDIT_PURCHASE&quot; (     </span><br><span class="line">    &quot;user_id&quot; uuid <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;USER&quot;(id),  <span class="comment">-- 多的那方加外來鍵    </span></span><br><span class="line">); </span><br></pre></td></tr></table></figure>
<h3 id="解釋一對一關係"><a href="#解釋一對一關係" class="headerlink" title="解釋一對一關係"></a>解釋一對一關係</h3><p>口訣：「外來鍵加唯一值」<br>流程：從欄位角度去規劃<br>1.以「使用者」角度：一個「使用者」最多只能是 一個 教練<br>2.以「教練」角度：一個「教練」只能對應到 一個 使用者<br>在雙方資料表都只能對應一個資訊時，則會是一對一的資料關係<br>➡️ 所以在「教練」表格設定外來鍵，並加上 UNIQUE 限制</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 一對一（使用者 &lt;-&gt; 教練） </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> &quot;COACH&quot; (     </span><br><span class="line">    &quot;user_id&quot; uuid <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">REFERENCES</span> &quot;USER&quot;(id) </span><br><span class="line">    <span class="comment">-- ...</span></span><br><span class="line">    <span class="keyword">UNIQUE</span>(&quot;user_id&quot;)  <span class="comment">-- 外來鍵加唯一值 </span></span><br><span class="line">);`</span><br></pre></td></tr></table></figure>

<p><strong>UNIQUE 意思：</strong>表示此 user_id 在 COACH 資料表上不能重複，因為一個「教練」只能對應到 一個「使用者」。</p>
<h1 id="1-分析流程：從欄位角度去規劃"><a href="#1-分析流程：從欄位角度去規劃" class="headerlink" title="1. 分析流程：從欄位角度去規劃"></a>1. 分析流程：從欄位角度去規劃</h1><ul>
<li><p>以「用戶」角度：一位「用戶」有多篇「部落格文章」</p>
</li>
<li><p>以「部落格文章」角度：一篇「部落格文章」有一位「用戶」</p>
</li>
<li><p>以「訓練家」角度：一位「訓練家」有多隻「Pokémon 」</p>
</li>
<li><p>以「Pokémon 」角度：一隻「Pokémon 」有一位「訓練家」</p>
</li>
<li><p>以「書籍」角度：一本「書籍」有一位「作者」</p>
</li>
<li><p>以「作者」角度：一位「作者」有多本創作「書籍」</p>
</li>
</ul>
<h1 id="2-依照上述描述，他是一對一關係、還是一對多？"><a href="#2-依照上述描述，他是一對一關係、還是一對多？" class="headerlink" title="2. 依照上述描述，他是一對一關係、還是一對多？"></a>2. 依照上述描述，他是一對一關係、還是一對多？</h1><ul>
<li>用戶與部落格文章的資料表：一對多的關係</li>
<li>訓練家與Pokémon 的資料表：一對多的關係</li>
<li>作者與書籍的資料表：一對多的關係</li>
</ul>
<p>SEE YOU TOMORROW (σ′▽‵)′▽‵)σ</p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>妳說，後端資料庫體驗營到底有什麼? 肆</title>
    <url>/IWishIKnewHowToQuitYou/2024/11/28/%E5%A6%B3%E8%AA%AA%EF%BC%8C%E5%BE%8C%E7%AB%AF%E8%B3%87%E6%96%99%E5%BA%AB%E9%AB%94%E9%A9%97%E7%87%9F%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E9%BA%BC-%E8%82%86/</url>
    <content><![CDATA[<h3 id="資料表與模擬資料"><a href="#資料表與模擬資料" class="headerlink" title="資料表與模擬資料"></a>資料表與模擬資料</h3><p>1.subject ：科目名稱<br>2.exam_score：科目成績<br>3.student：學生資料</p>
<p><font color=#0000FF> ln [0]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 建立資料表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line"> id serial <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> class <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> created_at <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> subject (</span><br><span class="line"> id serial <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> created_at <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> exam_score (</span><br><span class="line"> id serial <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line"> student_id <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> subject_id <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> score <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> exam_date <span class="type">date</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"> created_at <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY (student_id) <span class="keyword">REFERENCES</span> student(id),</span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY (subject_id) <span class="keyword">REFERENCES</span> subject(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插入測試資料</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (name, class) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小華&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小美&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小龍&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小智&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> subject (name) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;國文&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;英文&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;數學&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> exam_score (student_id, subject_id, score, exam_date) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">1</span>, <span class="number">85</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">92</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>, <span class="number">78</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="number">1</span>, <span class="number">76</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="number">2</span>, <span class="number">88</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>, <span class="number">95</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>, <span class="number">92</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="number">2</span>, <span class="number">85</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>, <span class="number">3</span>, <span class="number">87</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="number">1</span>, <span class="number">78</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="number">2</span>, <span class="number">82</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">4</span>, <span class="number">3</span>, <span class="number">90</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="number">1</span>, <span class="number">88</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="number">2</span>, <span class="number">79</span>, <span class="string">&#x27;2024-03-01&#x27;</span>),</span><br><span class="line">(<span class="number">5</span>, <span class="number">3</span>, <span class="number">93</span>, <span class="string">&#x27;2024-03-01&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p><font color=#FF0000> Out [0]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241128%20Practice%2F0.png?alt=media&token=6fbefb20-01aa-4f4b-8cdf-246d392818a0" alt="0"></p>
<p>這是一個完整的 SQL 多表結構，包含了 學生資料（student）、科目資料（subject） 和 考試成績（exam_score），並且插入了一些測試資料。</p>
<h2 id="資料表結構"><a href="#資料表結構" class="headerlink" title="資料表結構"></a>資料表結構</h2><h3 id="1-學生資料表（student）"><a href="#1-學生資料表（student）" class="headerlink" title="1. 學生資料表（student）"></a>1. 學生資料表（student）</h3><p>存放學生基本資訊，包括學生的 ID、姓名、班級 和建立時間。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student (</span><br><span class="line"> id serial <span class="keyword">PRIMARY</span> KEY,           <span class="comment">-- 學生 ID</span></span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,       <span class="comment">-- 學生姓名</span></span><br><span class="line"> class <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,      <span class="comment">-- 班級</span></span><br><span class="line"> created_at <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="comment">-- 建立時間</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="2-科目資料表（subject）"><a href="#2-科目資料表（subject）" class="headerlink" title="2. 科目資料表（subject）"></a>2. 科目資料表（subject）</h3><p>存放科目基本資訊，包括科目的 ID、名稱 和建立時間。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> subject (</span><br><span class="line"> id serial <span class="keyword">PRIMARY</span> KEY,           <span class="comment">-- 科目 ID</span></span><br><span class="line"> name <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,       <span class="comment">-- 科目名稱</span></span><br><span class="line"> created_at <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="comment">-- 建立時間</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="3-考試成績表（exam-score）"><a href="#3-考試成績表（exam-score）" class="headerlink" title="3. 考試成績表（exam_score）"></a>3. 考試成績表（exam_score）</h3><p>存放學生的考試成績，包括學生 ID 和科目 ID 的外鍵，還有成績、考試日期等。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> exam_score (</span><br><span class="line"> id serial <span class="keyword">PRIMARY</span> KEY,           <span class="comment">-- 成績記錄 ID</span></span><br><span class="line"> student_id <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,     <span class="comment">-- 學生 ID（外鍵）</span></span><br><span class="line"> subject_id <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,     <span class="comment">-- 科目 ID（外鍵）</span></span><br><span class="line"> score <span class="type">integer</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,          <span class="comment">-- 成績</span></span><br><span class="line"> exam_date <span class="type">date</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,         <span class="comment">-- 考試日期</span></span><br><span class="line"> created_at <span class="type">timestamp</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>, <span class="comment">-- 建立時間</span></span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY (student_id) <span class="keyword">REFERENCES</span> student(id),         <span class="comment">-- 關聯 student 表</span></span><br><span class="line"> <span class="keyword">FOREIGN</span> KEY (subject_id) <span class="keyword">REFERENCES</span> subject(id)          <span class="comment">-- 關聯 subject 表</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h2 id="測試資料"><a href="#測試資料" class="headerlink" title="測試資料"></a>測試資料</h2><h3 id="1-學生資料（student）"><a href="#1-學生資料（student）" class="headerlink" title="1. 學生資料（student）"></a>1. 學生資料（student）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student (name, class) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小華&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小美&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小龍&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;小智&#x27;</span>, <span class="string">&#x27;三年一班&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="2-科目資料（subject）"><a href="#2-科目資料（subject）" class="headerlink" title="2. 科目資料（subject）"></a>2. 科目資料（subject）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> subject (name) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;國文&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;英文&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;數學&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="3-考試成績（exam-score）"><a href="#3-考試成績（exam-score）" class="headerlink" title="3. 考試成績（exam_score）"></a>3. 考試成績（exam_score）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> exam_score (student_id, subject_id, score, exam_date) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">1</span>, <span class="number">85</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小明 國文 85分</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">92</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小明 英文 92分</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">3</span>, <span class="number">78</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小明 數學 78分</span></span><br><span class="line">(<span class="number">2</span>, <span class="number">1</span>, <span class="number">76</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小華 國文 76分</span></span><br><span class="line">(<span class="number">2</span>, <span class="number">2</span>, <span class="number">88</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小華 英文 88分</span></span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>, <span class="number">95</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小華 數學 95分</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">1</span>, <span class="number">92</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小美 國文 92分</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">2</span>, <span class="number">85</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小美 英文 85分</span></span><br><span class="line">(<span class="number">3</span>, <span class="number">3</span>, <span class="number">87</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小美 數學 87分</span></span><br><span class="line">(<span class="number">4</span>, <span class="number">1</span>, <span class="number">78</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小龍 國文 78分</span></span><br><span class="line">(<span class="number">4</span>, <span class="number">2</span>, <span class="number">82</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小龍 英文 82分</span></span><br><span class="line">(<span class="number">4</span>, <span class="number">3</span>, <span class="number">90</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小龍 數學 90分</span></span><br><span class="line">(<span class="number">5</span>, <span class="number">1</span>, <span class="number">88</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小智 國文 88分</span></span><br><span class="line">(<span class="number">5</span>, <span class="number">2</span>, <span class="number">79</span>, <span class="string">&#x27;2024-03-01&#x27;</span>), <span class="comment">-- 小智 英文 79分</span></span><br><span class="line">(<span class="number">5</span>, <span class="number">3</span>, <span class="number">93</span>, <span class="string">&#x27;2024-03-01&#x27;</span>); <span class="comment">-- 小智 數學 93分</span></span><br></pre></td></tr></table></figure>

<p><strong>Q1 查詢所有科目</strong></p>
<p><font color=#0000FF> ln [1]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> subject;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [1]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241128%20Practice%2F1.png?alt=media&token=1625a05c-4eab-4fa9-881a-cb0ea4a44e25" alt="1"></p>
<blockquote>
<p>id：科目的唯一識別碼。<br>name：科目的名稱（如國文、英文、數學）。<br>created_at：該科目被新增到資料表的時間。</p>
</blockquote>
<p><strong>Q2 計算所有成績平均</strong><br>要計算所有學生的成績平均分數，可以對 exam_score 資料表中的成績欄位（score）使用 SQL 的聚合函數 AVG 來計算。</p>
<p><font color=#0000FF> ln [2]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(score) <span class="keyword">AS</span> average_score</span><br><span class="line"><span class="keyword">FROM</span> exam_score;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [2]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241128%20Practice%2F2.png?alt=media&token=a30fa4c6-c257-4560-9c52-1c5d354a1546" alt="2"></p>
<blockquote>
<p>AVG(score)：計算所有成績的平均值。<br>AS average_score：將計算結果命名為 average_score。</p>
</blockquote>
<h4 id="若需要更詳細的平均分數分析："><a href="#若需要更詳細的平均分數分析：" class="headerlink" title="若需要更詳細的平均分數分析："></a>若需要更詳細的平均分數分析：</h4><p><strong>科目計算平均分數</strong></p>
<p><font color=#0000FF> ln [3]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    sub.name <span class="keyword">AS</span> subject_name,</span><br><span class="line">    <span class="built_in">AVG</span>(e.score) <span class="keyword">AS</span> average_score</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    exam_score e</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    subject sub <span class="keyword">ON</span> e.subject_id <span class="operator">=</span> sub.id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">    sub.name;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [3]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241128%20Practice%2F2-1.png?alt=media&token=c37a6ddf-ec53-4473-b883-bfc960bfd5ac" alt="2-1"></p>
<p><strong>按學生計算平均分數</strong></p>
<p><font color=#0000FF> ln [4]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    s.name <span class="keyword">AS</span> student_name,</span><br><span class="line">    <span class="built_in">AVG</span>(e.score) <span class="keyword">AS</span> average_score</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    exam_score e</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    student s <span class="keyword">ON</span> e.student_id <span class="operator">=</span> s.id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> </span><br><span class="line">    s.name;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [4]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241128%20Practice%2F2-2.png?alt=media&token=f513f5ab-025c-4733-85d8-3161bd0199ba" alt="2-2"></p>
<p><strong>Q3 找出 90 分以上的成績</strong><br>要找出所有成績在 90 分以上 的資料，可以直接查詢 exam_score 資料表，並加上條件篩選 score &gt; 90。</p>
<p><font color=#0000FF> ln [5]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    e.id <span class="keyword">AS</span> record_id,</span><br><span class="line">    s.name <span class="keyword">AS</span> student_name,</span><br><span class="line">    sub.name <span class="keyword">AS</span> subject_name,</span><br><span class="line">    e.score <span class="keyword">AS</span> score,</span><br><span class="line">    e.exam_date <span class="keyword">AS</span> exam_date</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    exam_score e</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    student s <span class="keyword">ON</span> e.student_id <span class="operator">=</span> s.id</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    subject sub <span class="keyword">ON</span> e.subject_id <span class="operator">=</span> sub.id</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">    e.score <span class="operator">&gt;</span> <span class="number">90</span>;</span><br></pre></td></tr></table></figure>

<p><font color=#FF0000> Out [5]:  </font></p>
<p><img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/SQL%20%3A%2020241128%20Practice%2F3.png?alt=media&token=07727f9a-9a97-4921-8881-e5af36c50838" alt="3"></p>
<blockquote>
<p>e.score &gt; 90：篩選所有成績大於 90 的資料。</p>
</blockquote>
<blockquote>
<p><code>JOIN</code>：</p>
<blockquote>
<p>student 表，用於獲取學生的姓名。<br>subject 表，用於獲取科目的名稱。</p>
</blockquote>
</blockquote>
<blockquote>
<p><code>AS</code>別名：將欄位命名為更易讀的名稱，例如 student_name 和 subject_name。</p>
</blockquote>
<p><strong>Q4 顯示小明的國文成績，篩選條件請用國文的 subject_id &#x3D; 1 進行篩選</strong></p>
<p>要查詢 小明的國文成績，可以根據以下條件進行篩選：</p>
<ul>
<li>學生姓名為「小明」。</li>
<li>科目 ID 為 1（國文）。</li>
</ul>
<p><font color=#0000FF> ln [6]: </font></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    e.id <span class="keyword">AS</span> record_id,</span><br><span class="line">    s.name <span class="keyword">AS</span> student_name,</span><br><span class="line">    sub.name <span class="keyword">AS</span> subject_name,</span><br><span class="line">    e.score <span class="keyword">AS</span> score,</span><br><span class="line">    e.exam_date <span class="keyword">AS</span> exam_date</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    exam_score e</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    student s <span class="keyword">ON</span> e.student_id <span class="operator">=</span> s.id</span><br><span class="line"><span class="keyword">JOIN</span> </span><br><span class="line">    subject sub <span class="keyword">ON</span> e.subject_id <span class="operator">=</span> sub.id</span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">    s.name <span class="operator">=</span> <span class="string">&#x27;小明&#x27;</span> <span class="keyword">AND</span> </span><br><span class="line">    sub.id <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>s.name = '小明'</code>：篩選學生姓名為「小明」的記錄。<br><code>sub.id = 1</code>：篩選科目 ID 為 1（國文）的記錄。</p>
</blockquote>
<blockquote>
<p><code>JOIN</code>：</p>
<blockquote>
<p>student 表：用於取得學生姓名。<br>subject 表：用於取得科目名稱。</p>
</blockquote>
</blockquote>
<p><strong><code>JOIN</code> 的作用：</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">JOIN</span> student s <span class="keyword">ON</span> e.student_id <span class="operator">=</span> s.id</span><br></pre></td></tr></table></figure>
<ul>
<li>student s：指定 student 表的別名為 s，這樣在查詢中可以用 s 來代表 student 表。</li>
<li><code>ON</code> e.student_id &#x3D; s.id：建立 exam_score 表（別名 e）和 student 表（別名 s）之間的連接條件：<ul>
<li>exam_score 表的 student_id 欄位對應 student 表的 id 欄位。</li>
<li>這樣每筆成績記錄都能找到對應的學生資料。</li>
</ul>
</li>
</ul>
<p><strong>s.name 的來源：</strong></p>
<ul>
<li>在 JOIN 之後，student 表的所有欄位（如 id, name, age, class）都可以被查詢使用。</li>
<li>s.name 就是從 student 表中選取的 name 欄位，表示學生的姓名。</li>
</ul>
<h4 id="執行邏輯："><a href="#執行邏輯：" class="headerlink" title="執行邏輯："></a>執行邏輯：</h4><p><strong>exam_score 和 student 表的連接：</strong></p>
<ul>
<li>exam_score.student_id &#x3D; student.id，將成績表中的 student_id 對應到學生表中的 id，例如：<ul>
<li>成績記錄 student_id &#x3D; 1 對應到 student.name &#x3D; 小明。</li>
<li>成績記錄 student_id &#x3D; 2 對應到 student.name &#x3D; 小華。</li>
</ul>
</li>
</ul>
<p><strong>exam_score 和 subject 表的連接：</strong></p>
<ul>
<li>exam_score.subject_id &#x3D; subject.id，將成績表中的 subject_id 對應到科目表中的 id，例如：<ul>
<li>成績記錄 subject_id &#x3D; 101 對應到 subject.name &#x3D; 國文。</li>
<li>成績記錄 subject_id &#x3D; 102 對應到 subject.name &#x3D; 數學。</li>
</ul>
</li>
</ul>
<p>SEE YOU TOMORROW (σ′▽‵)′▽‵)σ</p>
<p><font color=#c0c0c0> 結果或許並沒有多大用處，只不過是回憶而已也不一定。 </font>
 </p>
]]></content>
      <tags>
        <tag>Practice</tag>
      </tags>
  </entry>
  <entry>
    <title>我愛過的都是好人</title>
    <url>/IWishIKnewHowToQuitYou/2024/07/19/%E6%88%91%E6%84%9B%E9%81%8E%E7%9A%84%E9%83%BD%E6%98%AF%E5%A5%BD%E4%BA%BA/</url>
    <content><![CDATA[<p>說好明天去看黃昏<br>擁抱的時候不要計較<br>誰先主動</p>
<p>挑選時宜的時候<br>讓你吻我<br>不要把情話說得太重<br>以免分開以後</p>
<p>分隔兩地的十二月<br>不要談論天氣變冷<br>只要想我<br>不要矯情地告訴我</p>
<p>不權衡差異<br>不要爲習慣找理由<br>無論末路窮途</p>
<p>我愛過的都是好人<br>他們沒有把我變成壞人</p>
<p>我愛過的人<br>都是好好生活的人<br>遇見每一個人<br>都是新的一生</p>
<h6 id="詩文｜蘇乙笙《我們是微塵裡的光》"><a href="#詩文｜蘇乙笙《我們是微塵裡的光》" class="headerlink" title="詩文｜蘇乙笙《我們是微塵裡的光》"></a>詩文｜蘇乙笙《我們是微塵裡的光》</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>我比不好還更好</title>
    <url>/IWishIKnewHowToQuitYou/2024/05/30/%E6%88%91%E6%AF%94%E4%B8%8D%E5%A5%BD%E9%82%84%E6%9B%B4%E5%A5%BD/</url>
    <content><![CDATA[<p>又過完一個<br>沒有別人的一年<br>很寂寞吧<br>有些痂被撕開<br>裡面流出膿血</p>
<p>有些人會說<br>你是故意不好的<br>你的痛苦都是自找<br>或許他們是對的<br>你已經成為<br>自己的地獄</p>
<p>隨便被問候幾句<br>就忍不住<br>全身都快碎了<br>用膠帶貼好的自己<br>有些部分因為潮溼<br>粘不牢了</p>
<p>好了啦<br>沒關係的<br>就再重新捆過一回</p>
<p>沒關係吧<br>這一次真的<br>真的就要<br>就會把那些怪物<br>都給擊退<br>終於可能<br>成為剛好的人類</p>
<p>已經離很遠<br>仍然會在意的人們啊<br>知道彼此還活著<br>就不要知道更多<br>沒辦法再分享生活<br>至少要有辦法<br>分別開心<br>分別崩潰</p>
<p>或許不是現在<br>當然也不大<br>可能在明天<br>但我們都有各自<br>擁抱自己的機會</p>
<p>如果還給不起其它的<br>先給自己時間<br>如果再給不起<br>退後一點<br>給自己愛<br>給自已空間</p>
<h6 id="詩文｜潘柏霖《我比不好還要好》"><a href="#詩文｜潘柏霖《我比不好還要好》" class="headerlink" title="詩文｜潘柏霖《我比不好還要好》"></a>詩文｜潘柏霖《我比不好還要好》</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇部落格文章</title>
    <url>/IWishIKnewHowToQuitYou/2024/05/29/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E9%83%A8%E8%90%BD%E6%A0%BC%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="YYDS-Chiling-Lin"><a href="#YYDS-Chiling-Lin" class="headerlink" title="YYDS Chiling Lin"></a>YYDS Chiling Lin</h2><h3 id="恭請志玲姐姐擔任看板娘-ヾ-●゜▽゜●-❤️"><a href="#恭請志玲姐姐擔任看板娘-ヾ-●゜▽゜●-❤️" class="headerlink" title="恭請志玲姐姐擔任看板娘 ヾ(●゜▽゜●)❤️"></a>恭請志玲姐姐擔任看板娘 ヾ(●゜▽゜●)❤️</h3><h4 id="The-Key-to-Adventure-🤍"><a href="#The-Key-to-Adventure-🤍" class="headerlink" title="The Key to Adventure 🤍"></a>The Key to Adventure 🤍</h4><div class="pic1">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_1.png?alt=media&token=861ab189-3a0c-469d-843d-eb37e6e83c89" alt="2017chiling1">

</div>


<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_2.png?alt=media&token=34a32606-25d1-44fb-9bbf-a5ae835016e1 "alt="2017chiling2">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_3.png?alt=media&token=e8c9ab81-6800-43a7-9167-07dd2b7506f6 "alt="2017chiling3">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_4.png?alt=media&token=a92d0f63-2a3f-4d62-a787-0c8db7479520 "alt="2017chiling4">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_5.png?alt=media&token=d970456c-d213-4ec8-b211-403180cb29cf"alt="2017chiling5">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_6.png?alt=media&token=c61c3999-4f9c-4e3d-b157-4f1807409a13 "alt="2017chiling6">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_7.png?alt=media&token=fc9386f6-361f-4ad9-afd4-2972c0fda9f6 "alt="2017chiling7">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_8.png?alt=media&token=5cb70a9e-48c6-4c92-a989-cec1449a156e "alt="2017chiling8">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_9.png?alt=media&token=9f474c82-8bd7-4273-a392-c7da64c5ac35 "alt="2017chiling9">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_10.png?alt=media&token=c744d3dd-80b9-4278-a252-c2c753cce5b6 "alt="2017chiling10">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_11.png?alt=media&token=b6ac6dfb-946a-4dd2-a1ef-66de3d352e5c "alt="2017chiling11">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_12.png?alt=media&token=4d334476-5cf7-422e-bd67-f5f8d631a981 "alt="2017chiling12">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_13.png?alt=media&token=513d1522-9405-4e68-ac33-b8d10396dfb2 "alt="2017chiling13">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_14.png?alt=media&token=0e78a1b7-9258-4f1e-a42e-970f11ba0812 "alt="2017chiling14">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_15.png?alt=media&token=94c59ee5-068d-4b64-8d3d-f4fe3c525322 "alt="2017chiling15">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_16.png?alt=media&token=7cf992bb-bb2f-4a87-8f89-36efa41bdd39 "alt="2017chiling16">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_17.png?alt=media&token=b126c80c-1fee-43db-a0e7-29ed8f507e83 "alt="2017chiling17">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_18.png?alt=media&token=506d70cc-4d9c-476e-9d4a-d4e55166e15a "alt="2017chiling18">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_19.png?alt=media&token=61bac71b-59ab-44df-99c1-aa1ecf7b4478 "alt="2017chiling19">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_20.png?alt=media&token=781940f9-0921-472d-9caa-7962f59af591 "alt="2017chiling20">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_21.png?alt=media&token=0088c784-0cd6-4154-9829-fafa072d0db5 "alt="2017chiling21">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_22.png?alt=media&token=7af91f69-ebed-4abb-917b-cf50119306c3 "alt="2017chiling22">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_23.png?alt=media&token=c7dbd6ea-e8ca-46a1-9107-f178d1358f3c "alt="2017chiling23">
</div>

<div class="pic2">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_24.png?alt=media&token=bbb770ac-ec43-4d93-b3b8-b191ea912192 "alt="2017chiling24">
</div>

<div class="pic3">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_25.png?alt=media&token=933bdca9-f9b4-46db-a8bb-eeacab156a00 "alt="2017chiling25">
</div>

<div class="pic1">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/2017%20ChilingLin%2F1716690463639-99f8b830-910b-4b1e-917e-f4da8cabe65b_26.png?alt=media&token=cd4d6da3-af15-4108-8bfd-30e1ce5bb9fb" alt="2017chiling26">
</div>

<h4 id="心態-格局-毅力"><a href="#心態-格局-毅力" class="headerlink" title="心態  格局  毅力"></a>心態 <i class="fa-regular fa-heart"></i> 格局 <i class="fa-regular fa-heart"></i> 毅力</h4><h6 id="©-2017-2024-ChilingLin-All-Rights-Reserved"><a href="#©-2017-2024-ChilingLin-All-Rights-Reserved" class="headerlink" title="© 2017-2024 ChilingLin. All Rights Reserved."></a>© 2017-2024 ChilingLin. All Rights Reserved.</h6><style>

.pic1 {
   position: relative; /*偽元素的基準*/
}

.pic1::before,

.pic1::after {
   content: '';
   position: absolute;
   width: 0px; /*不對偽元素指定方框的大小*/
   height: 0px; /*不對偽元素指定方框的大小*/
}

.pic1::before {
   top: -10px; /*讓偽元素移動至距離基準點上方-10px的位置*/
   right: -10px; /*讓偽元素移動至距離基準點右側-10px的位置*/
   border-top: 30px solid #ea987e;
   border-right: 30px solid #ea987e;
   border-bottom: 30px solid rgba(0 0 0 / 0);
   border-left: 30px solid rgba(0 0 0 / 0);
}

.pic1::after {
   bottom: -10px; /*讓偽元素移動至距離基準點下方-10px的位置*/
   left: -10px; /*讓偽元素移動至距離基準點左側-10px的位置*/
   border-top: 30px solid rgba(0 0 0 / 0);
   border-right: 30px solid rgba(0 0 0 / 0);
   border-bottom: 30px solid #ea987e;
   border-left: 30px solid #ea987e;
}


.pic2 {
   position: relative; /*偽元素的基準*/
}
.pic2 img {
   position: relative; /*啟用z-index所需的程式碼*/
   z-index: 2; /*讓圖片在斜線的上層顯示*/
}
.pic2::before {
   content: '';
   position: absolute;
   bottom: -15px; /*讓背景斜線往基準點下方移動15px*/
   right: -15px; /*讓背景斜線往基準點右方移動15px*/
   width: 100%; /*指定為容納圖片的父元素的100%寬度*/
   height: 100%; /*指定為容納圖片的父元素的100%高度*/
   background-image: repeating-linear-gradient(
      -45deg, /*旋轉45度*/
      #d34e23 0px, #d34e23 1px, /*有顏色的線條*/
      rgba(0 0 0 / 0) 0%, rgba(0 0 0 / 0) 50% /*邊界（透明部分)*/
   );
   background-size: 8px 8px;
   z-index: 1; /*讓斜線在照片的下層顯示*/
}

.pic3 {
   position: relative; /*偽元素的基準*/
}

.pic3 img {
   position: relative; /*啟用z-index所需的程式碼*/
   z-index: 2; /*讓圖片在圓點圖樣的上層顯示*/
}
.pic3::before {
   content: '';
   position: absolute;
   bottom: -15px;
   right: -15px;
   width: 100%; /*指定為容納圖片的父元素的100%寬度*/
   height: 100%; /*指定為容納圖片的父元素的100%高度*/
   background-image: radial-gradient(
      #ea987e 20%, /*指定圓點的顏色與大小*/
      rgba(0 0 0 / 0) 21%
   );
   background-size: 8px 8px; /*在不重複背景的狀態下，指定background的大小*/
   background-position: right bottom; /*指定圓點圖樣的開始位置*/
   z-index: 1; /*讓圓點圖樣在照片下層顯示*/
}

</style>

]]></content>
      <tags>
        <tag>Quotes</tag>
      </tags>
  </entry>
  <entry>
    <title>拆隊專家？ D級交易？？</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/03/%E6%8B%86%E9%9A%8A%E5%B0%88%E5%AE%B6%EF%BC%9FD%E7%B4%9A%E4%BA%A4%E6%98%93%EF%BC%9F/</url>
    <content><![CDATA[<div class="pic">
   <img src="https://firebasestorage.googleapis.com/v0/b/pictureforu-3b8e9.appspot.com/o/Blog%20Materials%2Ff28607ef-7733-46ed-83a0-9869556a81b1.jpg?alt=media&token=423a7b48-eb9c-4d6e-bc0e-500a2b540315" alt="FaceThePast-KI">
</div>

<p>當昔日狀元Kyrie Irving離開Cleveland Cavaliers後，<br>就一直備受外界質疑。<br>顛峰之年加盟Boston Celtics卻遭遇青壯奪權刷分、新人搶位排擠的鳥事…<br>轉隊來到Brooklyn Nets 與 Kevin Durant &amp; James Harden 組建三巨頭，<br>無奈被傷病及關鍵戰役對手惡意犯規擊敗。<br>場外的言論和行為，<br>更是險些摧毀他的職業生涯 ……</p>
<p>但是這些過往種種，<br>在來到陌生的Dallas後一切都變了。</p>
<p>Mavericks不僅給予了Irving足夠的尊重，<br>並且無論是球隊老板球隊球員乃至當家球星都堅定著支持Irving…<br>而最終Irving也用一座西區冠軍<br>回應球團信任<br>與對籃球純粹的喜愛。</p>
<h5 id="初似墬入無底深淵，"><a href="#初似墬入無底深淵，" class="headerlink" title="初似墬入無底深淵，"></a>初似墬入無底深淵，</h5><p>未想；</p>
<h5 id="終竟踏出萬里征途。"><a href="#終竟踏出萬里征途。" class="headerlink" title="終竟踏出萬里征途。"></a>終竟踏出萬里征途。</h5><h5 id="那些沒能打倒你的事，"><a href="#那些沒能打倒你的事，" class="headerlink" title="那些沒能打倒你的事，"></a>那些沒能打倒你的事，</h5><p>最終；</p>
<h5 id="會變成你克服一初的無畏信念。"><a href="#會變成你克服一初的無畏信念。" class="headerlink" title="會變成你克服一初的無畏信念。"></a>會變成你克服一初的無畏信念。</h5><p>外界普遍都是說31歲的“詹皇”帶著24歲的Irving獲得生涯首冠。<br>那麼今年為何不能期待，<br>32歲的Irving將輔佐25歲的歐洲新王劍指冠軍？</p>
<p>十年河東 十年河西<br>這回憑什麼不能是他呢？</p>
<Style>
 .pic {
   position: relative; /*偽元素的基準*/
}
.pic::after {
   content: '';
   position: absolute;
   top: 50%;
   left: 50%;
   transform: translate(-50%, -50%);
   width: calc(100% - 20px); /*減去左右的斜線框一半的值×2的算式*/
   height: calc(100% - 20px); /*減去上下的斜線框一半的值×2的算式*/
   border-image-source: repeating-linear-gradient(
      45deg, /*旋轉45度*/
      #ffffff  0px, #ffffff  2px, /*套用顏色的線條*/
      rgba(0 0 0 / 0) 2px, rgba(0 0 0 / 0) 7px /*邊界（留白)的部分*/
   );
   border-image-slice: 20; /*指定border 4邊的使用範圍*/
   border-width: 20px; /*框線的寬度*/
   border-image-repeat: round; /*如磁磚狀重複顯示*/
   border-style: solid; /*以實心線呈現*/
}   

</Style>]]></content>
      <tags>
        <tag>Essay</tag>
      </tags>
  </entry>
  <entry>
    <title>水星逆行</title>
    <url>/IWishIKnewHowToQuitYou/2024/10/28/%E6%B0%B4%E6%98%9F%E9%80%86%E8%A1%8C/</url>
    <content><![CDATA[<p>很難過的時候<br>就把所有的燈關掉<br>看一部電影<br>在最快樂的橋段裡睡去<br>當作沒有看見<br>那個不園滿的結局</p>
<p>花一點時間<br>關心天氣<br>當那個提醒大家的人<br>接下來幾天都不太會下雨<br>快點把悲傷拿出來<br>好好曬乾</p>
<p>這樣悶熱的夏天<br>特別適合傷心的人<br>哭不出來的眼淚<br>都變成汗水<br>讓他流一個晚上<br>感冒會比較容易好起來</p>
<p>趕快休息<br>明天記得起床吃早餐<br>你可以從現在開始期待<br>飲料杯的笑話<br>比你糟透的人生還爛</p>
<h6 id="詩文｜吳旻育《大人症候群》"><a href="#詩文｜吳旻育《大人症候群》" class="headerlink" title="詩文｜吳旻育《大人症候群》"></a>詩文｜吳旻育《大人症候群》</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>詩人節</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/10/%E8%A9%A9%E4%BA%BA%E7%AF%80/</url>
    <content><![CDATA[<p>沒有詩寫過多</p>
<p>只有粽慾過度</p>
<p>蛋都立好了</p>
<p>棉被還捨不得收</p>
<h6 id="詩文｜李豪《詩人節》"><a href="#詩文｜李豪《詩人節》" class="headerlink" title="詩文｜李豪《詩人節》"></a>詩文｜李豪《詩人節》</h6>]]></content>
      <tags>
        <tag>Poetry</tag>
      </tags>
  </entry>
  <entry>
    <title>這就是卡桑蒂</title>
    <url>/IWishIKnewHowToQuitYou/2024/06/07/%E9%80%99%E5%B0%B1%E6%98%AF%E5%8D%A1%E6%A1%91%E8%92%82/</url>
    <content><![CDATA[<p>許秀（韓語：허수，2000年7月22日—，遊戲ID：ShowMaker），韓國《英雄聯盟》電子競技運動員，DWG KIA中路選手，英雄聯盟2020賽季世界大賽冠軍成員。<br>2023年因新出的角色「卡桑帝」於遊戲中表現過強，在某日直播被對手卡桑帝擊敗時情不自禁高速詠唱:</p>
<p>「你說得對，但是這就是卡桑帝，🤔HP 4700，護甲 329，魔抗 201的英雄。有不可阻擋🤚，有護盾👌，還能過牆✌️。有控制🤙，甚至冷卻時間只有1秒✊，只要15點藍👍。轉換姿態時甚至可以刷新W的cd👈，還有✌️真實傷害。然後，護甲和魔抗提升後還能獲得技能加速👐，縮短Q的cd🙌，還縮短釋放時間😨，然後還有攻擊力😰。W就👊🏿😭👊🏿啊啊啊啊啊啊🖐️😭🤚」</p>
<p>此段肺腑之言道出自登場以來，無論卡桑帝怎麼被版本削弱，該角色始終能在職業賽場上占有一席之地。</p>
<p>嗯…真不虧是由擁有二百年設計資歷的團隊所設計的角色。</p>
]]></content>
      <tags>
        <tag>Meme</tag>
      </tags>
  </entry>
</search>
